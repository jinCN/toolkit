{}
{}

{"addr":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","txList":[{"blockNumber":"14969406","timeStamp":"1655324275","hash":"0xa8079fde16056d3448f996c318315c92959aa9d1b487bf576b3ce55a8dfef356","nonce":"1019","blockHash":"0xd1bce6069741b6f13265551aaa9db79e596e54e3825c0e7e469f283c27008aa6","transactionIndex":"339","from":"0x022a29ebe2be30f0c7ffc7dc9c51ffd3714762d0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1166011","gasPrice":"65881904656","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"29615387","gasUsed":"1044923","confirmations":"36762"},{"blockNumber":"14908063","timeStamp":"1654417452","hash":"0x1c72528f696527053da108826f038fa345f233655cacbb8f8bccb51760fb84c3","nonce":"357","blockHash":"0x87af992d6846f2892d3382554ee07cb35a852ad10d4fbd0cd628dde0a67cecc0","transactionIndex":"210","from":"0xa2cb3a850f4953b4c4890d686f5aafa3006e08d7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"887154","gasPrice":"19842472329","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000959aef40253af3bdd","contractAddress":"","cumulativeGasUsed":"20229859","gasUsed":"804330","confirmations":"98105"},{"blockNumber":"14903170","timeStamp":"1654344379","hash":"0x219ef58df4f14b2f2efd50de68dbdcd8874503b92363f3d07549c3f3bb0a1446","nonce":"355","blockHash":"0xbd8b7ccc4308e876a4cfef47a34e4b6d5aff458146169b88441908aed5d44f3b","transactionIndex":"251","from":"0xa2cb3a850f4953b4c4890d686f5aafa3006e08d7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"26793200899","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"20407802","gasUsed":"46480","confirmations":"102998"},{"blockNumber":"14878104","timeStamp":"1653991546","hash":"0x2fc51e66d2111445bd7446a14ffab68da0a34a7e45e1500a72956f8a43834cdd","nonce":"43","blockHash":"0x0225b8314b8863c025219dc7ea9505d1c8a636ae59328a83960883904a2676c5","transactionIndex":"107","from":"0x633a626e57939810033358a5fcc0768f44457f41","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"53452","gasPrice":"28302792730","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000119c71d3bbac22029622cbaec24854d3d32d2828ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5914149","gasUsed":"46480","confirmations":"128064"},{"blockNumber":"14804307","timeStamp":"1652954010","hash":"0x7eef3fa065d3392dbed9b2c441ca92b69bc13a57406e7d7e47e5e03e031cee9b","nonce":"351","blockHash":"0xfd49f98107b648fbff9f65d53730f4bff3f94ff8276073ac4fb4583ec5102871","transactionIndex":"108","from":"0xc03c4476fbe25138bf724fa1b95551c6e6b8fd2c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1263565","gasPrice":"23549908668","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11321022","gasUsed":"1132133","confirmations":"201861"},{"blockNumber":"14798102","timeStamp":"1652866872","hash":"0xd9c2bf657e128df4fab7b19f7fff2ac4244e66bc811c6e1ddac9643ade30fe58","nonce":"118","blockHash":"0x4407a036267ccf4d8a6683d1d1ac5430418c7d91673ec0d802fd271d32dfa9c7","transactionIndex":"150","from":"0xea1f881f9394851f9778c4f8f65e79e9ed85e21e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1013375","gasPrice":"19158256204","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"13881272","gasUsed":"901290","confirmations":"208066"},{"blockNumber":"14393824","timeStamp":"1647382892","hash":"0x45a7a05e53162df88004e917cff57401513042a137ffa70ad55289b24615fca1","nonce":"1143","blockHash":"0xde233c633e0903177226d4a413f4e77fec3daeb625d4e6fe2b2d21e4367939f4","transactionIndex":"154","from":"0x87a265c93d2a92c6eeec002283beaebb4564fd20","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"60664","gasPrice":"43000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000001111111254fb6c44bac0bed2854e76f90643097dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6958310","gasUsed":"46480","confirmations":"612344"},{"blockNumber":"14349465","timeStamp":"1646787163","hash":"0x1056ea17f9c2d02b7d75b829e53161981056fc868f0a95fa8efd3d83538406b7","nonce":"334","blockHash":"0x8b5301e7e7df32feaeefbe0834c147bec09227ad78d607d7725503edb6b7728c","transactionIndex":"159","from":"0x959f7ded64f2d97809190bdf89efe3996e9740aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"280671","gasPrice":"52080657572","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000ab6b5e815135f50000","contractAddress":"","cumulativeGasUsed":"12437210","gasUsed":"253925","confirmations":"656703"},{"blockNumber":"14313585","timeStamp":"1646304667","hash":"0x5073232f62a8dc44fdc662515b36817401d0e724005eb89069e83370f908efc4","nonce":"33","blockHash":"0x29018ff521afda4d404a7e4bb3a8fa74e1f2220eaf0894a18a1b0df16db78347","transactionIndex":"17","from":"0xd8d8d0ed6b13cedfd437d0e6a96e50eb9882288c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"60599","gasPrice":"32860481973","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000001111111254fb6c44bac0bed2854e76f90643097d00000000000000000000000000000000000000000000021e1ed1b787568346b3","contractAddress":"","cumulativeGasUsed":"1302120","gasUsed":"46216","confirmations":"692583"},{"blockNumber":"14280299","timeStamp":"1645859904","hash":"0x52833891cf108b0d6c6763decb43063e0e0351b44523dd4f9aff2e5cddc89cf8","nonce":"1289","blockHash":"0x0f53a54aa2201452a7c80c1edd8d3c318b7fa57832f725ba3946b85e162f3dbc","transactionIndex":"78","from":"0x067018bacb704d9fb774fd00572d8eddb4adbbad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"785122","gasPrice":"37133784005","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10932102","gasUsed":"697765","confirmations":"725869"},{"blockNumber":"14210095","timeStamp":"1644920001","hash":"0x4e19035ecc93fed7dc63c100ffa45cc2acbe9096e0a66995589eefa9ba0813dc","nonce":"3","blockHash":"0x69a8fad5e2acf6de0f6aa9563ec276903555eca1059aa28edd6d61b3813cfe81","transactionIndex":"130","from":"0x332c23e4449c51b96fd32fda5f79677471cbb956","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"779482","gasPrice":"30326045065","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6984552","gasUsed":"692882","confirmations":"796073"},{"blockNumber":"14016980","timeStamp":"1642342140","hash":"0xa235a3117ae1e5845e6d128aa3be869c21fa39b3fc1ff7206bd50e942a076314","nonce":"765","blockHash":"0xd48e256112f2714910a7dcf5e7df365c2311aa582b6c07c6e4f5aa42079d0d57","transactionIndex":"46","from":"0x0db65a107d3f311d67abcee7e8f2a23a16d5b4f3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"100834670156","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3393045","gasUsed":"46480","confirmations":"989188"},{"blockNumber":"13911425","timeStamp":"1640930860","hash":"0xbc748e792a08626caf11dd3a916b4df77b4b82191a21da1c8986882f40a71e75","nonce":"1016","blockHash":"0x4ecae040df98d8c7cf3f0aaae89074868f5ac94689b55e5596f18aba2aa150cb","transactionIndex":"142","from":"0x9432ea45f0cd4a7a703dfa64c0ed7b2035919833","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"53452","gasPrice":"77049441517","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000001111111254fb6c44bac0bed2854e76f90643097dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9192159","gasUsed":"46480","confirmations":"1094743"},{"blockNumber":"13852858","timeStamp":"1640147526","hash":"0x3b0d593da920d9aed761eaa384f249960be40419a88f47b2fce3782e80171182","nonce":"55","blockHash":"0x0ea4a814c817bd3813ab5dfbfcae8238e149a0dda422fde032c9cc27959e7909","transactionIndex":"107","from":"0xcc2aa1ad65dee9d2b936d69b62bf75f908b1ebfe","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1011919","gasPrice":"54352670075","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6863043","gasUsed":"887639","confirmations":"1153310"},{"blockNumber":"13852818","timeStamp":"1640147016","hash":"0x48b537c588289f6c7d87e05b2be9ae55602371e712c040a8dfb66ba5e99cce24","nonce":"54","blockHash":"0x2b7c59a6f0220f0b265e46e12dbc33553d26294780039a2e96593373aa47b4b7","transactionIndex":"253","from":"0xcc2aa1ad65dee9d2b936d69b62bf75f908b1ebfe","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1004282","gasPrice":"60091803513","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000060fb1e4404a8c75d79","contractAddress":"","cumulativeGasUsed":"21342432","gasUsed":"916266","confirmations":"1153350"},{"blockNumber":"13823442","timeStamp":"1639755365","hash":"0xc26814aa2399165f8a57f69d3d66108430eac043e2714838835c02f92a5b758b","nonce":"670","blockHash":"0x84ae417625f1b7e713d3a74dfd1cffc68eeeb6e6b7229431412930898c969f34","transactionIndex":"45","from":"0x8ba1346146f252179f612dfd15511f3ab961ac35","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"91000","gasPrice":"92364369975","isError":"1","txreceipt_status":"0","input":"0xa9059cbb000000000000000000000000913b40d74edbc32dfe7e4f71ec53712a42006988000000000000000000000000000000000000000000000012f4232a1a713c0e93","contractAddress":"","cumulativeGasUsed":"4263754","gasUsed":"88781","confirmations":"1182726"},{"blockNumber":"13823418","timeStamp":"1639755044","hash":"0x2a9831ca77b17ad3d5a324e2185d0e086fbad268069892f1273895e04608bdde","nonce":"669","blockHash":"0x0ac1f329775ca0844c86b90d74e95925408fff7898f23b0c1e5c1ee7bf450253","transactionIndex":"353","from":"0x8ba1346146f252179f612dfd15511f3ab961ac35","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"120003","gasPrice":"94944117902","isError":"1","txreceipt_status":"0","input":"0xa9059cbb000000000000000000000000913b40d74edbc32dfe7e4f71ec53712a42006988000000000000000000000000000000000000000000000012f42329b787b66e53","contractAddress":"","cumulativeGasUsed":"14479180","gasUsed":"116012","confirmations":"1182750"},{"blockNumber":"13725600","timeStamp":"1638423877","hash":"0x377fcfd817412b88811817fed7b825d447ae29201e9dd4cb733328b1fa62bced","nonce":"34","blockHash":"0x7bebe740d40b51b6bf9c598ff6f7d220da974f62c22e52e0d73296a985c11b6e","transactionIndex":"19","from":"0x1ff80c224cf7f42d715e4d7b2f6485aca06d54e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"834608","gasPrice":"101200000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2099012","gasUsed":"740728","confirmations":"1280568"},{"blockNumber":"13725536","timeStamp":"1638423101","hash":"0x5c1661517446c927d582d67c7358eb164a195d7f408ed97377f97b3c3b672d86","nonce":"28","blockHash":"0x6b615be4a588d6807e5b6d8fff71680e93c67f3fab62893092a04f75ed00d1a8","transactionIndex":"56","from":"0x1ff80c224cf7f42d715e4d7b2f6485aca06d54e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"896308","gasPrice":"96800000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000fd9919750cd8c91f4","contractAddress":"","cumulativeGasUsed":"4144377","gasUsed":"814121","confirmations":"1280632"},{"blockNumber":"13682136","timeStamp":"1637824767","hash":"0xe5445aee6b965cbd27b7331bee604fc8d59b88f34d36331455ee203bcf39b017","nonce":"41","blockHash":"0x74ad5f7d5686ca9b459c1e8f6345f16db7a866f2026465eee3e3e3e571a46ede","transactionIndex":"57","from":"0xcc2aa1ad65dee9d2b936d69b62bf75f908b1ebfe","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1067371","gasPrice":"90822715225","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000002d594cb625b7133b14","contractAddress":"","cumulativeGasUsed":"6652956","gasUsed":"968905","confirmations":"1324032"},{"blockNumber":"13639272","timeStamp":"1637237635","hash":"0x6d7c5171b92ec2f9bfe0bc97ce96a03f0465817397b31d76ee76af8ae4a54ee5","nonce":"943","blockHash":"0xee175987ed5e0f62e8f06c140ca58f69d2fcf8e356ba01388368a21872bad1bf","transactionIndex":"248","from":"0x39978cc40e2d1d7e127050bdfffbb0dfcfaebad0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"114309502753","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"18020205","gasUsed":"46480","confirmations":"1366896"},{"blockNumber":"13561349","timeStamp":"1636178877","hash":"0x4fd069b14d300bd91c3f181f58c158274855a42b816e70c937540ea34851deb6","nonce":"7","blockHash":"0x8fdc36db2c431ac930654b147a3a585ef4a1e36ba8c4be28f351e1764f4cd037","transactionIndex":"74","from":"0xec17d863ad5ea982a1d74783e420bad41dac7681","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"619029","gasPrice":"101294924255","isError":"0","txreceipt_status":"1","input":"0xa9059cbb00000000000000000000000063d7798029874d1320cae3f8342e41834eeeedb8000000000000000000000000000000000000000000000034b5463a8c8e21dbf7","contractAddress":"","cumulativeGasUsed":"3416206","gasUsed":"619029","confirmations":"1444819"},{"blockNumber":"13521011","timeStamp":"1635631419","hash":"0x5af252fa83a2d5e71571c8e7431b0f66d077d23aba94433642d48b71692bdb37","nonce":"638","blockHash":"0x5e2a7c9ca3078e91fee604bf994b6d435154951a3b4d12b189cce8728e7963b0","transactionIndex":"208","from":"0xa54b5d98b33e9fb8e0a9c9a0f3754e695da1b188","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"995872","gasPrice":"156077549995","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14243793","gasUsed":"888596","confirmations":"1485157"},{"blockNumber":"13402028","timeStamp":"1634019615","hash":"0x68e9c92922a732936e8f9f771a5423119c9ac9cd886a8d44b03d84a7ece270c5","nonce":"1238","blockHash":"0x26d77851f6a1aa0c02daa40f8ff591ed8c3f91abc1a08474b7f17ce63f3e35ab","transactionIndex":"12","from":"0xb457f08b38c684736325bcedd23d69cad06af169","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1152715","gasPrice":"65693616470","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000b76af3b2d258c35ccbc2384f26259618b5a4eb7300000000000000000000000000000000000000000000005c222a1279c67ac55c","contractAddress":"","cumulativeGasUsed":"2841616","gasUsed":"768477","confirmations":"1604140"},{"blockNumber":"13287557","timeStamp":"1632473759","hash":"0xd31edd2880877d7faa5b57dfcc8cd21d054daef60d819d37e923b0bf8918c594","nonce":"1","blockHash":"0x8c8e49efe8ef1ef6a67b905df14f9a4aef3db00bfa01652589af4769af367bad","transactionIndex":"199","from":"0x00e2273b141bb8f22d16a82ef1522ff55d707480","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"345460","gasPrice":"33435382750","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000012addc42d0459bb93b9","contractAddress":"","cumulativeGasUsed":"22306737","gasUsed":"229195","confirmations":"1718611"},{"blockNumber":"13287541","timeStamp":"1632473608","hash":"0x55258bd8578390ddebc12378495e5af551c1e650f5995a812f9bfe139163dffc","nonce":"0","blockHash":"0x5c457cf6eaf9b4ce024883068aefe949781fa1775fa25a243c06810f26d603a1","transactionIndex":"84","from":"0x00e2273b141bb8f22d16a82ef1522ff55d707480","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"385351","gasPrice":"40284993763","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000056bc75e2d63100000","contractAddress":"","cumulativeGasUsed":"6548494","gasUsed":"254150","confirmations":"1718627"},{"blockNumber":"13267195","timeStamp":"1632202107","hash":"0xa330fb2a3209ea25dbdf73a1b9aab2c2e21bba0bde0c9ea3d9bdf4e0c1d0d470","nonce":"547","blockHash":"0xae473e862f8ed46bba8806c3e7c630501f5378060d9a10488da160b1b9fe372f","transactionIndex":"52","from":"0xe6f7ffc5dcedc6fe25bf424a271cf548b6178fa0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"60424","gasPrice":"69594029903","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000cf08434d9138781967fa273a6bb8f2881642ae75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2213077","gasUsed":"46480","confirmations":"1738973"},{"blockNumber":"13166173","timeStamp":"1630850813","hash":"0xeb087dde82de9755234e78823987bd1a6b5213e309e52632f144b1d4aaa5b53c","nonce":"401","blockHash":"0x3601e8fd4b9294e0b30e966859061d660a81175a1120371bfa369b8efd57fbc2","transactionIndex":"212","from":"0x02bd4446d6cd972a2000ba6b7960b5e87e88266f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"824117","gasPrice":"88000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000001528389899c94a9de","contractAddress":"","cumulativeGasUsed":"14974935","gasUsed":"748014","confirmations":"1839995"},{"blockNumber":"13145710","timeStamp":"1630578454","hash":"0x4a5002f4e1a5d56db88067bbc03828e2892530594e555a4297e2e46823fc87be","nonce":"169","blockHash":"0x11e863db9d591f95adb81fe848995a07f4cfd523f3947c70043d02ec6fc0ee8b","transactionIndex":"345","from":"0x8d61eff2f1eed647a5948e630334975dab07ee6f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"98628897870","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"29894605","gasUsed":"46480","confirmations":"1860458"},{"blockNumber":"13141728","timeStamp":"1630525640","hash":"0x8a4c2f8ac7b2ff05c5f46a687fa9dd629b388d68793be39ee519b0a673b49e19","nonce":"33","blockHash":"0x43b9cdd162fa366f5aaad96e7a6c4cca78ac6541d733adc1f8aceb297b2e878d","transactionIndex":"14","from":"0xcc2aa1ad65dee9d2b936d69b62bf75f908b1ebfe","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"127642005880","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"849361","gasUsed":"46480","confirmations":"1864440"},{"blockNumber":"13126553","timeStamp":"1630322601","hash":"0x040fcd7c41ce07e3e12a5afda87611386dd5fbec427c61e18f0065eddce8337a","nonce":"16","blockHash":"0x4b47b3ab9d767f310c8e083ecbd800eb4e7927fd0fa219a5c0548b4b39befc99","transactionIndex":"119","from":"0x15bc9a4769b8dc859e7fccbc615beab7ca0e53e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"784527","gasPrice":"68500000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6628021","gasUsed":"138105","confirmations":"1879615"},{"blockNumber":"13126552","timeStamp":"1630322587","hash":"0x2338fae79e5619f1faef1f0de76d9ee6929e371aab542067258a5f44c45617e9","nonce":"15","blockHash":"0x1292a21fa27450a33a8473aaf2f2e38be9f21bf6dc8245b844a2e27e75999b6d","transactionIndex":"55","from":"0x15bc9a4769b8dc859e7fccbc615beab7ca0e53e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"784527","gasPrice":"69700000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3798598","gasUsed":"695067","confirmations":"1879616"},{"blockNumber":"13118359","timeStamp":"1630212843","hash":"0xfce313c1fad3035574e64cd3fb0b89b83c304a129897320f2168d1a6c85f8434","nonce":"19","blockHash":"0x44a27ddd5e9bba1205883ef8230386f6d587a197d5f40d66d13e621c5b8813b6","transactionIndex":"195","from":"0xe6f86af54d5de7096ccdc9bbf4f0e6040995546a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"842242","gasPrice":"63266415875","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"19710174","gasUsed":"748534","confirmations":"1887809"},{"blockNumber":"13076341","timeStamp":"1629652041","hash":"0xe0d78b7a8f69f2b41518bf5ce615c62961ece9b4de4a472e6ee526f60b532d38","nonce":"187","blockHash":"0x86a3b590968747ee6f5ec3c610197b82fa4bf2667947d45ba4f02e77a9a924e5","transactionIndex":"259","from":"0x381712d37b333164aee06f26293a45339359c140","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"58000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"17546408","gasUsed":"46480","confirmations":"1929827"},{"blockNumber":"13065489","timeStamp":"1629506231","hash":"0xca0811887d17249bd0bf3cecc60e6e21701edbff0b71dd615c1d5a877a07b860","nonce":"391","blockHash":"0x622990f75993f438346ad1be0bc03d80d347c97d07791e9b02c033220c7ab2ae","transactionIndex":"1","from":"0xf4e0e6d1d89a6d8f3dc97f6ce72961d00aecc428","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"46480","gasPrice":"51328780032","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"90591","gasUsed":"46480","confirmations":"1940679"},{"blockNumber":"12986931","timeStamp":"1628458591","hash":"0x46a6742cf50764e162ee40c0fa87dc584b0ae4d0981de8fb303b98cf4cb9f442","nonce":"289","blockHash":"0xca279a1b3ba10f922419dda2e913340c4fe62fa6cb8566ab9dc3039648dae56c","transactionIndex":"62","from":"0xa2cb3a850f4953b4c4890d686f5aafa3006e08d7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"33787","gasPrice":"38000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6305387","gasUsed":"29380","confirmations":"2019237"},{"blockNumber":"12974844","timeStamp":"1628298618","hash":"0x518dc9f94a0477cf97e8edf47ba20175e68a9ae363b5c59c4fd6fd5a04d517c9","nonce":"15","blockHash":"0x570759066526f392f112473dd747af3f68a01a97a1e5ef118443c8424097727a","transactionIndex":"98","from":"0xe6f86af54d5de7096ccdc9bbf4f0e6040995546a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"56097114488","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9345996","gasUsed":"46480","confirmations":"2031324"},{"blockNumber":"12954487","timeStamp":"1628022724","hash":"0xabefe212f33eaa2f1e9f2086dfb104d37b5223230a1841bc0048eec101eb6226","nonce":"9","blockHash":"0x3dc62be5c0b78c1746c828e97cd292692f8558ce72f3871e33961dd8001be844","transactionIndex":"160","from":"0xa18f9be7c1f41b10627b2b28f5021141c9479d93","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"37805129630","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9382302","gasUsed":"665205","confirmations":"2051681"},{"blockNumber":"12935348","timeStamp":"1627762374","hash":"0x2913842b8c125b49e7901443458514a88163f362faec8772bf623fc4a9bbdb7c","nonce":"70","blockHash":"0x9077cdc8dca4acdac6eed58ed311b2e64896cb8cfa06629a6b14ec2d094983e2","transactionIndex":"17","from":"0x568c26fe5ca02b92a2d7f775f8ac1ef4e78cf3ff","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1241234","gasUsed":"665634","confirmations":"2070820"},{"blockNumber":"12921117","timeStamp":"1627567540","hash":"0x553c278d47dc2f3bfcc68abc8ad22dd7568a3a589079ccd8d875bf7b9d378d2d","nonce":"372","blockHash":"0x893fe633eb2b11f0dc8c9468abeed767c450e794c63860e01183df84918f819c","transactionIndex":"59","from":"0xb8a6791318eb3e50c7cdc5b4f5a57cfe37d7f200","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"53452","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5103173","gasUsed":"46480","confirmations":"2085051"},{"blockNumber":"12920286","timeStamp":"1627555512","hash":"0xdaf416262bdae5d82669ac927812224c1beeaae6b37950c367ce827b68c42127","nonce":"45","blockHash":"0x79b18706436713af8d44cb7fbbca33a629432d04a06c02427b2fed395da1c419","transactionIndex":"93","from":"0x436f1a93ed2143162e932a86aad93ce2cedc2830","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"46216","gasPrice":"23000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000881d40237659c251811cec9c364ef91dc08d300c0000000000000000000000000000000000000000004a817c7ffffffdabf41c00","contractAddress":"","cumulativeGasUsed":"6619514","gasUsed":"46216","confirmations":"2085882"},{"blockNumber":"12910152","timeStamp":"1627417131","hash":"0x063f3ddd77d8075ce0c13bf454b166358c1ce4e2bbd488d3408d8b2760990c53","nonce":"188","blockHash":"0x153023c65fbc5efd04fa91e0c59014d382aa39b97faa9f9fd2ccbe135b26fe87","transactionIndex":"33","from":"0x0c49209dee1b14a8d36f51446f581680cb777114","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1161392","gasPrice":"31900000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3404792","gasUsed":"1010851","confirmations":"2096016"},{"blockNumber":"12896662","timeStamp":"1627233247","hash":"0xca14c83b85049b82771bc3744c795c1f9879b17ea075fd0202f7a6e3e44babab","nonce":"14","blockHash":"0xa3f3bce71cf118d280d60b77367a3e3bd11249cbeacbfb631eff5f6a31df1d1d","transactionIndex":"196","from":"0x68d3e2a5ce076b3e0bb550cc780ed4d3f4b22477","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"28600000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10992264","gasUsed":"46480","confirmations":"2109506"},{"blockNumber":"12839764","timeStamp":"1626463680","hash":"0xe0fbcde708a2b4ac8f68f81669dfebe7e76d2d482e93866d52a036130a61ef0a","nonce":"348","blockHash":"0x7ad4fc27b80d5f31bbe2882755e28ce44833efdf5bc93429f75551ad1309701f","transactionIndex":"160","from":"0xddf44ae54974ebf3c82084d122afd610591ebacc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"53452","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6920147","gasUsed":"46480","confirmations":"2166404"},{"blockNumber":"12827130","timeStamp":"1626292866","hash":"0x2558a15db60b38b6d9c9e2a893eb22fbb4532cc47e3d686043700819b0b6d141","nonce":"575","blockHash":"0x57561ae707e5bc5a2ad321b506b9225a32285a1c742c90d25792e43d3c7f2e07","transactionIndex":"106","from":"0xfa16b4019d0368366b97f2e9822046c6d4dcab47","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"29700000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7367582","gasUsed":"46480","confirmations":"2179038"},{"blockNumber":"12796883","timeStamp":"1625882944","hash":"0x51395d30babe518f4357c1aa8a5be259532ecd9b540982fb2a56cb2cf8300fb1","nonce":"358","blockHash":"0xb30fad7f15bb0a9c8645a014bfa4134c92bded58e2922d1c04e2a447d8d0a099","transactionIndex":"80","from":"0xb2b62e67a47a8c18e12613a447032c669b65260e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"13000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7839819","gasUsed":"46480","confirmations":"2209285"},{"blockNumber":"12772359","timeStamp":"1625553556","hash":"0x1cfcd1243db5a581bc9cdc2b8d15aeccd833fb66938f36664d1fafbfd73af960","nonce":"239","blockHash":"0x5fc22976866cfa70d68683f34fa410540f9cbe1a54fc4432e308932b4d70b0bc","transactionIndex":"140","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"10000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"13315651","gasUsed":"46480","confirmations":"2233809"},{"blockNumber":"12761076","timeStamp":"1625402548","hash":"0x9cbe452c1fee2494d45b565f363c34934afdbff582bf877214a1fde8de06c426","nonce":"366","blockHash":"0xa80d3c1a8820a71c9bac658bde45642a65f7707ff516f2f4e7793242c6e4ce71","transactionIndex":"132","from":"0xb8a6791318eb3e50c7cdc5b4f5a57cfe37d7f200","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"10000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8226430","gasUsed":"46480","confirmations":"2245092"},{"blockNumber":"12755814","timeStamp":"1625331628","hash":"0x6fb5f6e1ec7f6cff75752708a201ff9f7e476416fb95a5e2798074fddad54561","nonce":"10","blockHash":"0xc61e97f6c10ecaa201b1fd12312bbcd3298f11dc5d950a4a31a580b5957c5a2c","transactionIndex":"49","from":"0x20acbc6e858abeab42bdc4feabb36b04a51713be","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"755738","gasPrice":"12500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000a250ca92f745a27000","contractAddress":"","cumulativeGasUsed":"4831868","gasUsed":"686194","confirmations":"2250354"},{"blockNumber":"12749996","timeStamp":"1625252701","hash":"0xf1602c5de0a9bf8431823017df6486d2a87706e4a8d52058ed3cd125f616ff1b","nonce":"5","blockHash":"0x8c4d1a537c5ed8b6e984456e50faee9d55877cc8f57ab80cb2ffb50e8cbbac25","transactionIndex":"35","from":"0xa6defd477338508c76147822b2fb722717943b1f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"775564","gasPrice":"39000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a7500000000000000000000000000000000000000000000000e9e5c2fffb0ae4405","contractAddress":"","cumulativeGasUsed":"2679763","gasUsed":"76510","confirmations":"2256172"},{"blockNumber":"12726482","timeStamp":"1624936346","hash":"0xb89a6cfd14cb0a9fb44fb16f3a85b68fb57955281eac60dc8ba0fb50771e8ac9","nonce":"519","blockHash":"0x6c168c4bd6c24340522bb2458072066dcdfd997f37d1b6960a4571f37690f40a","transactionIndex":"284","from":"0x9380af5e997fe9ec94bac48aed1fcf3eed0f77fa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"19000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12974185","gasUsed":"46480","confirmations":"2279686"},{"blockNumber":"12717203","timeStamp":"1624812278","hash":"0x6306d7538e052153ad243b9072ac617f560ca4e2ce657524a43a8b7491bcb59c","nonce":"235","blockHash":"0xadf389edccecddc56e4e364ca503d3f3271df0a2b1c69db022dbb6c8dda4366e","transactionIndex":"17","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1136997","gasPrice":"12100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000c77e4256863d80000","contractAddress":"","cumulativeGasUsed":"4442172","gasUsed":"1033578","confirmations":"2288965"},{"blockNumber":"12716910","timeStamp":"1624808378","hash":"0xf9fc8f5b586c9f74164e8a675c9de7174e3876b7a360b7a021e571637750d9a5","nonce":"228","blockHash":"0x7a705667fc92bed937b441ea51ddab7f992651dd0ac176cbf83086aaae2c61ce","transactionIndex":"253","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1106391","gasPrice":"11000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000c3e70fa30db28c000","contractAddress":"","cumulativeGasUsed":"11917692","gasUsed":"1001538","confirmations":"2289258"},{"blockNumber":"12710649","timeStamp":"1624723853","hash":"0x2904e19a1d6f53cc09aacb6130146ec00e3aad8397c1723916d09f5e856eca4f","nonce":"2","blockHash":"0xcea8a6a377d97d02f885bd5a5d9dc8f22781a21339c3714c3a56cbe72798e86e","transactionIndex":"215","from":"0xfe25a3ab0497b182b416c53bf3a9f481b77beba2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"784624","gasPrice":"12600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14702322","gasUsed":"666372","confirmations":"2295519"},{"blockNumber":"12667098","timeStamp":"1624136176","hash":"0x490fe27261eab5da5dc794f33e66441f63a79f013f3029a2f3319f656ac7a639","nonce":"239","blockHash":"0xacfd924b32c3c3c189372ce53feeb57a49ff43b4a0e02ddd993c0d82c5a09263","transactionIndex":"41","from":"0x229fed4f4192ba3aba690e37088bb4a68881df3d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"100000","gasPrice":"14370000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3802493","gasUsed":"46480","confirmations":"2339070"},{"blockNumber":"12660379","timeStamp":"1624045348","hash":"0xe88e00af836f7fd960f9911ad35d5c239efab25c55111521b9a47af7bca97d0d","nonce":"113","blockHash":"0x59cf3ed154331841e63b0ed0d5df10019892ea5eb6348796adce84904428558e","transactionIndex":"153","from":"0x3d489b71a42067f31baadd4bc06f03ecefedc972","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"765626","gasPrice":"38600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"13232384","gasUsed":"649626","confirmations":"2345789"},{"blockNumber":"12651728","timeStamp":"1623929766","hash":"0xd0df4eee753c2305084a40e87e5fd51f6211691b233f363f36e3513695ef6dad","nonce":"610","blockHash":"0x969784ea73606bf02e723de760ffd7b5646f2f092b539a5fd9afbc880faab0b3","transactionIndex":"71","from":"0x8ba1346146f252179f612dfd15511f3ab961ac35","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"11000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5361386","gasUsed":"46480","confirmations":"2354440"},{"blockNumber":"12640950","timeStamp":"1623785220","hash":"0xf4cb5990d5b7b9835b841991682ba17d41edce564a6a941f8bc180769ce83a7a","nonce":"14","blockHash":"0xadf96dd5118a63608cb2f8f4ab16862573cab54900ac694c3ac76622c36fe946","transactionIndex":"111","from":"0x041982b2fee837c9f2d5448f7f22945868e267aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"928543","gasPrice":"37400000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000436f1a93ed2143162e932a86aad93ce2cedc28300000000000000000000000000000000000000000000000f81375349ecf743ffb","contractAddress":"","cumulativeGasUsed":"13342190","gasUsed":"619029","confirmations":"2365218"},{"blockNumber":"12638386","timeStamp":"1623751383","hash":"0xce1168f6b0cb69a6465905d7f8500095ccca0ae4e80478cc4f7163890bb988ac","nonce":"6","blockHash":"0x31323456b21d38ecabe2a2c348961d3372ea66dd9d8af573edff985a7a69ba08","transactionIndex":"78","from":"0x20acbc6e858abeab42bdc4feabb36b04a51713be","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"20500000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4997520","gasUsed":"46480","confirmations":"2367782"},{"blockNumber":"12635954","timeStamp":"1623718527","hash":"0xd15926cbe66371e97c8e336a25a1936e761e83825958431f4ed49560b6123dff","nonce":"7","blockHash":"0xf0ce6c4ebdc0e04d04f60824f7dd2cf4aaf7a5c7688e2706989171b5f58c1040","transactionIndex":"166","from":"0x0d6ae3f011914c159d17835f461fd91f7b8b59a2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"30761000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4790518","gasUsed":"665644","confirmations":"2370214"},{"blockNumber":"12634986","timeStamp":"1623705778","hash":"0x608a6948b3c6760921b44aae43f7cb1d228d10c27dbdcc2f9737a81e84e08e21","nonce":"99","blockHash":"0xa17c1ddde3f403816b7a1edb0e14dbbea8b1f76728c061d703b56a3688f672ae","transactionIndex":"107","from":"0x3d489b71a42067f31baadd4bc06f03ecefedc972","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"27000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12603836","gasUsed":"46480","confirmations":"2371182"},{"blockNumber":"12632363","timeStamp":"1623671028","hash":"0xf58874c60ef1f4e458dd52c81180573ea61bb1850e93edb85dd6f3f804463264","nonce":"716","blockHash":"0xb9df44ce5482c1f4a64ef38c3936818c0c1857182fa982e0cbc6d06515eac263","transactionIndex":"150","from":"0xb457f08b38c684736325bcedd23d69cad06af169","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"10000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10458091","gasUsed":"46480","confirmations":"2373805"},{"blockNumber":"12620464","timeStamp":"1623511788","hash":"0xc6be5794ed08368c7306e59520efff29ac2745f6d0310207b4ce870332df4828","nonce":"10","blockHash":"0xdf0095b220df7a2c6b5e1172a932a699b47a6a6676498fb24aadcb5afb576749","transactionIndex":"131","from":"0x68d3e2a5ce076b3e0bb550cc780ed4d3f4b22477","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"18190000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000e1a521e46d45357df2b9ae0522b814199b499960ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8593430","gasUsed":"46480","confirmations":"2385704"},{"blockNumber":"12617044","timeStamp":"1623464866","hash":"0x9f86130a28d69411fb4b53d86d831b091155a71b4bb4845eb10826a1e43fc5d7","nonce":"76","blockHash":"0xea282a861bf8c3557ae5b5eff5938f7608526dd4e959ed73ca3a06ff8cd7803e","transactionIndex":"154","from":"0x864e9ef223c2ac3f57bb12389bde47cb49d018e8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"25000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14850160","gasUsed":"46480","confirmations":"2389124"},{"blockNumber":"12597193","timeStamp":"1623199561","hash":"0x5d2bd79ed57c31eb0c4c95b061a403e4f6cecc005754b39dbd76bf2a12c71528","nonce":"46","blockHash":"0x8bb83626c9d0fa4eb7ed3141f5662529aa4191d08b5af31ef6fb2726b52b45b8","transactionIndex":"33","from":"0x13a5047b32aa9e7ce89c53fbf52632224c27067a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"948093","gasPrice":"12100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2353369","gasUsed":"814289","confirmations":"2408975"},{"blockNumber":"12591196","timeStamp":"1623118927","hash":"0x125bf48062fbe48591729a642577d190e01cb8f6983f71e2ecf1b0d095a5a517","nonce":"194","blockHash":"0x3e1ae42d3960aa3131a79155cdaa4a83da15f205a9684a94fa92097ce9327706","transactionIndex":"164","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1016463","gasPrice":"11000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000004be4e7267b6ae00000","contractAddress":"","cumulativeGasUsed":"13864333","gasUsed":"924940","confirmations":"2414972"},{"blockNumber":"12591074","timeStamp":"1623117375","hash":"0xc38169af284ef6c387a17bf566eaf71d8ea23e48f752c625bcf43728e8f8aa3c","nonce":"191","blockHash":"0xea65a7d03a1f99a42bd65268913666e86de8287b1f5cf08d509895c5faa9f596","transactionIndex":"30","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1045297","gasPrice":"11000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000004fb0591b9b30380000","contractAddress":"","cumulativeGasUsed":"3198971","gasUsed":"948529","confirmations":"2415094"},{"blockNumber":"12588196","timeStamp":"1623079615","hash":"0xade1d11a5d733f6276665ab23098d39c1415c3c98df8f0ea12010da40aadbf57","nonce":"186","blockHash":"0x4d58f9c421207ad6e41c46eed94b39cc5ff0ccc51a249eb0e8141d64f39831d2","transactionIndex":"118","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1039764","gasPrice":"14300000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000004aa5b6bc5760e40000","contractAddress":"","cumulativeGasUsed":"13284971","gasUsed":"946933","confirmations":"2417972"},{"blockNumber":"12579469","timeStamp":"1622963126","hash":"0xa4e88d92dc8150d079eadebd829931dbae3079df3cdb70b0646cb2b48691131d","nonce":"163","blockHash":"0x1208ac14eaabbaf4a57c0887c308412efff7f8d8fe1a5d015033123cbf38841d","transactionIndex":"17","from":"0xb50f74390506fb87b7847e6f6e562db9c7f741ae","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"945274","gasPrice":"14000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1590269","gasUsed":"811805","confirmations":"2426699"},{"blockNumber":"12573205","timeStamp":"1622879071","hash":"0xbccb27775a38f04cdf06dc61b2913bf8fb1bf60dc9c83d10cefa4b923c106a58","nonce":"114","blockHash":"0xdaeb31294fff442632b298872ecdcac528908f1e68e39a295d80f3544cce4355","transactionIndex":"71","from":"0x3d810993ebbce70e5d4147847e1eb5bb8896a397","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"841237","gasPrice":"14000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6281347","gasUsed":"717145","confirmations":"2432963"},{"blockNumber":"12570713","timeStamp":"1622845686","hash":"0x133b021576fb4ae7db9b320e3470bc8d55ea53bed22130dbf5695167400a725f","nonce":"56","blockHash":"0xdf791e1b77ee4c301694b60a3fe87df1f712add11091a3de9345f58423e0c2a4","transactionIndex":"131","from":"0x7504f0f60d5bbca6a5ccff8974f43820cb24f3f8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"782875","gasPrice":"16000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12673959","gasUsed":"665559","confirmations":"2435455"},{"blockNumber":"12562748","timeStamp":"1622739868","hash":"0x5a1038017c600215a9204b46f904ac5b65d4985961ccddb52381b2c250cdf2de","nonce":"153","blockHash":"0x28418afd3cb6fcdbeda9affab04f46e161fc6d99ba324f16b8a8feff19fcae57","transactionIndex":"100","from":"0x790a728c07b1f2fd6629986cd360acfe1e923746","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"36300000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7151420","gasUsed":"46480","confirmations":"2443420"},{"blockNumber":"12559672","timeStamp":"1622698347","hash":"0xd11880ba2a01bc14a85e28a1dde33acc47ddf41e34497d9564f4781f27e71e02","nonce":"102","blockHash":"0xe5f91aeb8c4150763ca75b71c993031518ded30bfdccfd12b8be3fbe12bd3b7f","transactionIndex":"46","from":"0xea1f881f9394851f9778c4f8f65e79e9ed85e21e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"21780000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2961798","gasUsed":"46480","confirmations":"2446496"},{"blockNumber":"12543083","timeStamp":"1622476888","hash":"0x89443ed1d079321331a574a85024f0a2d6f6f5741c389ad13d35bfaf4cf6c701","nonce":"216","blockHash":"0x857be178cf4df446f0ff530560e6c6406dc2e548d5e4832cd0577fd101f5e377","transactionIndex":"140","from":"0xecc072714365ee2fbd2e90c752c07a95641a5fe6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"32000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14700307","gasUsed":"46480","confirmations":"2463085"},{"blockNumber":"12541567","timeStamp":"1622456700","hash":"0x8e4a1eb591273418274830c674fb979c92170e1f2e7bcec6dc9f2b998f9bbfd6","nonce":"383","blockHash":"0x222a4cdaa1f2d0a455886980990c7e3966e8ce32e553612317b766027b8e0781","transactionIndex":"177","from":"0x7e7373b7ad044c03cb002277697771eab8dc5b6c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"18194000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14523047","gasUsed":"46480","confirmations":"2464601"},{"blockNumber":"12540542","timeStamp":"1622442791","hash":"0x800cf6a2c491d45381dca120a759452258372fb06e9f084a93b990f4a53617ab","nonce":"27","blockHash":"0x0e0d850a97b2876b9d9a6bc7441618c9ace5f7421d0592714abe438d9af6a3ed","transactionIndex":"148","from":"0xbcff6b6258fefa5c58d53da32d753463f408dbea","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"16000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"13171773","gasUsed":"46480","confirmations":"2465626"},{"blockNumber":"12536041","timeStamp":"1622381754","hash":"0x1aec67d706b01a842336b805c47d6f0678d8686cdaf15979d6afcb8d65f22c2f","nonce":"3060","blockHash":"0x3615c01ccc7a28caf9c1d240c5843220d880d36c1c3406e9fcae7667e7226296","transactionIndex":"187","from":"0xa5d223c176daab154a3134369d1c0478c5e6fecf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"25500000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14394339","gasUsed":"46480","confirmations":"2470127"},{"blockNumber":"12535168","timeStamp":"1622370371","hash":"0x5a4437900a240f1ef48cd848c2f455d2613d2517c5a6819937e56b9578b23124","nonce":"56","blockHash":"0x4c7ae81ec6b75bcea288ef29ddf10e146b70945817ea55fdfba2ea3847cea918","transactionIndex":"121","from":"0x5c27f44d6ec7a7a97a9690592dc59d9222c30f47","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"891983","gasPrice":"17001700000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9241187","gasUsed":"763670","confirmations":"2471000"},{"blockNumber":"12531531","timeStamp":"1622321599","hash":"0x62729f7eaa8bdf430a41362865bab2501713184fe263e2e124b59e3a418c0728","nonce":"177","blockHash":"0xbb67b1c7ac5318f3ba773310443b9377e40ee682404f952616975939bc0fe462","transactionIndex":"45","from":"0xb3866f8b4bf5a9bf6c44823e2795f9592a287cbb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1042435","gasPrice":"21000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000025f273933db5700000","contractAddress":"","cumulativeGasUsed":"9379049","gasUsed":"949172","confirmations":"2474637"},{"blockNumber":"12526945","timeStamp":"1622260515","hash":"0x0b4eee38d4eabe10d1b54c8523a8597bcfc1d745d96a3c4fb590c28f73d54986","nonce":"2561","blockHash":"0x19f4ea2bda320c08c447668c9b4b0fa1333ff4cf5616512ad895f4ffb6e49c0a","transactionIndex":"121","from":"0x5d4f25b080230976187e9897a4cbb4c284d7c390","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"28996","gasPrice":"30000001561","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180a0000000000000000000000000000000000000000000000000000000000000000","contractAddress":"","cumulativeGasUsed":"7695575","gasUsed":"14498","confirmations":"2479223"},{"blockNumber":"12524721","timeStamp":"1622230724","hash":"0xb787c678c3e7d41d6294d6fc03ccb77a4b4c1256202eb846d994529e97a41f43","nonce":"652","blockHash":"0x532cd7d022abaca565602f32404d02233248131361b5b7229c73510bda391450","transactionIndex":"107","from":"0x83aef2a3bda741114ec8cef95245b19ba595a645","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"949017","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10861161","gasUsed":"816174","confirmations":"2481447"},{"blockNumber":"12513321","timeStamp":"1622077382","hash":"0x0946b628bee707394a075c74a4e67e2c8df738b69444ac6286e21dd45438573c","nonce":"1282","blockHash":"0x925856aae6a7f138bd42f2b16d97490c88bda1aac9c19e5a28e69c12f101c15a","transactionIndex":"65","from":"0x04fb0de3af3fc10b14054c13046e9bb119e96238","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"30200000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11815984","gasUsed":"46480","confirmations":"2492847"},{"blockNumber":"12508176","timeStamp":"1622007757","hash":"0xdf5ed7731f71e964944b241f0899221ad0a57684f35412a2c9b1e6fb611cae42","nonce":"931","blockHash":"0xc5ebf1f1bb40321fe7336be5e88d353e8f01dcb3cf3fa9879ce1f1005d57f3af","transactionIndex":"18","from":"0xc5937e880b21560157e3a5c9e6f90a77005ab04c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"990228","gasPrice":"34000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1733240","gasUsed":"854454","confirmations":"2497992"},{"blockNumber":"12497764","timeStamp":"1621869599","hash":"0x722c072b284101365d2f60ab69b2cb7f23694e7d0638f976f7b04eb61fee6d28","nonce":"593","blockHash":"0xcdd0d6b537a3045d3f7e7c729855ae5007ae5a5b979edae818727f340e9b09a5","transactionIndex":"38","from":"0xbfc84e664702a8cfb0a4c137c6b7f3e9ab5239b9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1058406","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4009782","gasUsed":"914896","confirmations":"2508404"},{"blockNumber":"12493166","timeStamp":"1621807099","hash":"0x7dbd7efecb614f508f2185e12a66107baca0a2f89995d114c2ec3fa4d2a04cde","nonce":"106","blockHash":"0x3a1a40b2a4673898c2ce8fa850b0c35556ba6de3f53a5cdefd94a1507416a6a9","transactionIndex":"73","from":"0xa937f63ba1d69fd7e022fd50628b6d8fcfbde52d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9143234","gasUsed":"46480","confirmations":"2513002"},{"blockNumber":"12467663","timeStamp":"1621465332","hash":"0x7113afeaa496d62db2a6c28399545fb904777b59a2137abb873698f4b0ddf8c3","nonce":"1730","blockHash":"0x89b2350dee1cfd256bc1c5ca0f74beae88bb4a69112998cc87e9e26052c10fce","transactionIndex":"102","from":"0xde48537ce6df7f50daf3989e3202636b09b55f5b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"783202","gasPrice":"102000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10719748","gasUsed":"679766","confirmations":"2538505"},{"blockNumber":"12461821","timeStamp":"1621386758","hash":"0xc50ed17e41321636184a026e1b740872379582657504f85ec42b7c4b466e87b8","nonce":"239","blockHash":"0x4555a4a035ebe99ed13e7dd5117a51f791b4816987bb1face87094febbec23a2","transactionIndex":"131","from":"0x959f7ded64f2d97809190bdf89efe3996e9740aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"75000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10282274","gasUsed":"46480","confirmations":"2544347"},{"blockNumber":"12424906","timeStamp":"1620893524","hash":"0xbf964838b70c769fcb80d63c081f7f88278d313c122b97533767001523b72159","nonce":"734","blockHash":"0xc697e447c64505ccdfb784c8b1bd1b821470106250755c027afefcb27b229ae5","transactionIndex":"145","from":"0x334b796cae427cb30578be1708dac9e978705a7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1001751","gasPrice":"131000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11646202","gasUsed":"863819","confirmations":"2581262"},{"blockNumber":"12419971","timeStamp":"1620827665","hash":"0x03eeeac707526a0a742e1f75e728ee11fc549eebc545ee2c10498ca99c4daed2","nonce":"9","blockHash":"0x5bf1b04aa5f2b2cac26761b6e09ab86d11eb157106a79fb969746128d74c9912","transactionIndex":"119","from":"0x041982b2fee837c9f2d5448f7f22945868e267aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"53107","gasPrice":"285000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa2600000000000000000000000000000000000000000000003635c9adc5dea00000","contractAddress":"","cumulativeGasUsed":"12689512","gasUsed":"46180","confirmations":"2586197"},{"blockNumber":"12414975","timeStamp":"1620761027","hash":"0x857776acb220fd303d6a3f2b1999adfa70c0d3dc4c23df10ae9fba50305905f2","nonce":"2664","blockHash":"0x9afe236cfeea161e79f161838ebc2c032151f47818acb1bc92eb5749ae36e4dc","transactionIndex":"182","from":"0x8a83716acd66d9e1fb18c9b79540b72e04f80ac0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"839008","gasPrice":"265000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12855517","gasUsed":"715460","confirmations":"2591193"},{"blockNumber":"12402762","timeStamp":"1620598065","hash":"0xa5f6a1acb1a552092d0d4e48c51b19657e0016534d8d5adcf945260bc5b50c27","nonce":"33","blockHash":"0xb014dfe9fb17ac81044cf3e2489ab48e1fdb6038a2c82e9a566752ccff4ad86a","transactionIndex":"48","from":"0x1afc42aca1706dcb66f2134bb0fb0da1867b7780","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"121100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3544190","gasUsed":"764827","confirmations":"2603406"},{"blockNumber":"12395274","timeStamp":"1620498278","hash":"0xc7389ee42ac9d996a2c09c10198b223d15ba09c456fd5a4f675e04a80f4e3bde","nonce":"20","blockHash":"0x00da4b3f86d0359e48d634d80dcca46fa7e238d95772f5cdb9226a5e83fd6bc4","transactionIndex":"215","from":"0x50f1b2f76f6b4f7b08ea827ae4d7888ab6036353","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"848662","gasPrice":"157058000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000d8d726b7177a80000","contractAddress":"","cumulativeGasUsed":"13016877","gasUsed":"769150","confirmations":"2610894"},{"blockNumber":"12382505","timeStamp":"1620327573","hash":"0x02b51b94f8c5fb33daa9d0d562e2b51d9a22d283e2e43fc641e8fce9b282f06d","nonce":"951","blockHash":"0x4f5758cd83f0a41fdbb1d6ebeed3d9dc498c720414eef1c15c1910259743b2e8","transactionIndex":"107","from":"0x9432ea45f0cd4a7a703dfa64c0ed7b2035919833","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7045095","gasUsed":"46480","confirmations":"2623663"},{"blockNumber":"12379216","timeStamp":"1620283524","hash":"0x3e57257c1bccabc32c48f9b77b2c3238336fe4af3bc1ac2bb55bc9ef36082342","nonce":"684","blockHash":"0x57de918c8fb32257563fe1e5278a31f964f7588a9641b5ce4c5224f097be1805","transactionIndex":"111","from":"0x07dfdf8c15cd738d0d85830127646fb6b2e4cadd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"48000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4003460","gasUsed":"46480","confirmations":"2626952"},{"blockNumber":"12378533","timeStamp":"1620273986","hash":"0x19fe8be20a3e8cec3aaffb448d3ddcafe9d102235eb4dc5258e03c669477071a","nonce":"943","blockHash":"0x402c2bb7945c85403487acd2eb768ea794c686e1dbbfd787af16c325079166d4","transactionIndex":"147","from":"0x9432ea45f0cd4a7a703dfa64c0ed7b2035919833","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"68289","gasPrice":"36000000000","isError":"0","txreceipt_status":"1","input":"0x12c87c2d0000000000000000000000001031fc5bcad7b655d40928ed45435a0eb792e5cb","contractAddress":"","cumulativeGasUsed":"12056148","gasUsed":"25626","confirmations":"2627635"},{"blockNumber":"12378533","timeStamp":"1620273986","hash":"0xd2fcdce1e55c450154993a640e1368d5e44d8a0e8221f64d90086e6edc709ac9","nonce":"942","blockHash":"0x402c2bb7945c85403487acd2eb768ea794c686e1dbbfd787af16c325079166d4","transactionIndex":"146","from":"0x9432ea45f0cd4a7a703dfa64c0ed7b2035919833","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"68289","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0x12c87c2d0000000000000000000000001031fc5bcad7b655d40928ed45435a0eb792e5cb","contractAddress":"","cumulativeGasUsed":"12030522","gasUsed":"45526","confirmations":"2627635"},{"blockNumber":"12377464","timeStamp":"1620260505","hash":"0x457c03d60dbc9397fbf887de45bf26793c9fb6af1cb18a4aed5f113a796548c7","nonce":"238","blockHash":"0x3bd9787f7f100a39ae76ff79f86326c81dbaa9ed889709ed7bac524b3c4900bc","transactionIndex":"190","from":"0x60d0c36dcc921dc0990ee64d680d74d8fd8df72b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"53000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14678444","gasUsed":"46480","confirmations":"2628704"},{"blockNumber":"12369706","timeStamp":"1620157518","hash":"0xf58eee04273dd0eb45824e09ab31faa30293944c094cce53eb224c4eeee0fad0","nonce":"70","blockHash":"0xf1c56a4c621b9685e44a546d61a5da440d4ae09c61e8eb1645dbf7cd0ccbd6e3","transactionIndex":"196","from":"0xcfe15888090f13cdd99f0598b36f310bf6162ff5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"760885","gasPrice":"62500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12108337","gasUsed":"645097","confirmations":"2636462"},{"blockNumber":"12369571","timeStamp":"1620155763","hash":"0x19ce30e86151404b1b26d63d05d52cd52b73a6bf307cc77045ce9591a6455fdb","nonce":"60","blockHash":"0xfa309858f43cd83acb545128f9c0a2a54530b9c35c031c4f928489926b8fdb66","transactionIndex":"263","from":"0x47738f078844c73b706506584b1160dddb4d9c9f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"85000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10849823","gasUsed":"763728","confirmations":"2636597"},{"blockNumber":"12356602","timeStamp":"1619983377","hash":"0xd8a6d80815635a127452de6d14e7f828a2af90db716ddcb394d504ab855004a3","nonce":"263","blockHash":"0x7c87adf7c773eba40cc5adce409b8b3fb29c572c66ccf7aa28b0c9a7d76c313a","transactionIndex":"197","from":"0xa2cb3a850f4953b4c4890d686f5aafa3006e08d7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"46204","gasPrice":"38000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26000000000000000000000000000000000000000000000009e44b0e6599e6301e","contractAddress":"","cumulativeGasUsed":"14843795","gasUsed":"46204","confirmations":"2649566"},{"blockNumber":"12353828","timeStamp":"1619945950","hash":"0x516f7f5ecf63f9cc8d56032d558b8bd67a3c6376036e5b83202adefa586f6dcb","nonce":"35","blockHash":"0x7f8960b2379195c5f23f66f2aa10aa5a9844b8e900e6fcb09e8ec337854bfd77","transactionIndex":"182","from":"0xb3d478139e5f93f68c204d2fe51ee216a7a96384","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"28000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12282741","gasUsed":"46480","confirmations":"2652340"},{"blockNumber":"12352630","timeStamp":"1619929433","hash":"0xebdc88fcb531198f7e029c4081ed7a5ca43185bdda7a184e327f8ac329ef054b","nonce":"123","blockHash":"0x5a4379d9cf5e1b75831e99c691cfed3497f80389863cff8199d3057a4752a174","transactionIndex":"21","from":"0xb50f74390506fb87b7847e6f6e562db9c7f741ae","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"29000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1426154","gasUsed":"46480","confirmations":"2653538"},{"blockNumber":"12352244","timeStamp":"1619924431","hash":"0xe89708f67317686b10a6e4665557b52549924f5f259aabfe7985d966f6037444","nonce":"34","blockHash":"0x623ab2d4b0258f8dee1500621e33a0cad8f861dbdc545a6b560f02a59f6faf31","transactionIndex":"158","from":"0x4688befcfda722bdf6a1868d0a357a6d994760f1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"28000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9750798","gasUsed":"46480","confirmations":"2653924"},{"blockNumber":"12346476","timeStamp":"1619847704","hash":"0x3214bae4e777bacebeb0df888ec6d75546a4819fe51533dcb05f5f830b71dab9","nonce":"329","blockHash":"0x179ca95b916c6ff4f98bf95d460b0e94a0fbe082660f0f28674478b5fc0e56c0","transactionIndex":"83","from":"0x354c3c410cc7d05a3ff0422d15a5ea62ded99ba2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1010913","gasPrice":"25600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9917894","gasUsed":"872577","confirmations":"2659692"},{"blockNumber":"12346463","timeStamp":"1619847490","hash":"0x332e0b9109dc1b3074bb80c0f601f84c492f6fc5e0115b566841d4c1b89cdbad","nonce":"209","blockHash":"0xbec3a014f4534f2053d1f0868f5b417fdfe2baf30e5d1305e50bb916d95200dc","transactionIndex":"54","from":"0x177e3e1cba47340f3c24d1b3d4dc511099bffea8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"440000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1394425","gasUsed":"46480","confirmations":"2659705"},{"blockNumber":"12339041","timeStamp":"1619748182","hash":"0x6e83d07135c1bad123e8726c430db0f57b6c2366a56e17236ddd72dd9c195463","nonce":"128","blockHash":"0xfa5e2bc46a0acd16206cd94fb34efc340bc71ed878eaeee216d40850424d37b6","transactionIndex":"141","from":"0x05aa1f94d5bb95ca470a08919b0db8ce031b1e9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1016623","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11502961","gasUsed":"876968","confirmations":"2667127"},{"blockNumber":"12325077","timeStamp":"1619561533","hash":"0x25b9ea44317bb658c1520b7cda66b9b3403cdc85f3fb6519dbbb3576db35b52c","nonce":"168","blockHash":"0x0381fd41eac970fd491ab7cfb1f1a4df443e7819e904fba297b381748f849bdf","transactionIndex":"164","from":"0x7a8e7b7197e94d2cb194dbed7a80575c047a7575","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"56000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14902875","gasUsed":"46480","confirmations":"2681091"},{"blockNumber":"12324256","timeStamp":"1619550630","hash":"0x89314ef25abecfda73466535a81da344044d5d55db98ee6a8d720840cfc311dc","nonce":"20","blockHash":"0x3d0ec3ee05d6875ec456fd0e74d9fafb908b8c3488e11b4ef604c276d617c130","transactionIndex":"141","from":"0xbc3d8b1fefb652fca55dc10146e8909357273566","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"831862","gasPrice":"66000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10432541","gasUsed":"709165","confirmations":"2681912"},{"blockNumber":"12322124","timeStamp":"1619522887","hash":"0x4402d4757f8fb2fe0b5c2b802b618aa12bdc6b3cbc834e6c5d39605d805b4c00","nonce":"64","blockHash":"0x3d400f3ce316a76ba72729a9032d789cfaca8363b17a99cb6a92e0c6fc6cb431","transactionIndex":"164","from":"0xd1dc5c29f4aef0591fc355a88b314d780eb3389c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"783202","gasPrice":"44000000561","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12323304","gasUsed":"665848","confirmations":"2684044"},{"blockNumber":"12317550","timeStamp":"1619461297","hash":"0x0a5f27005f64a5089d00cb03657a20cd3d25420465387fa3f89c520e70381e34","nonce":"186","blockHash":"0x80734da00b32c461b14f2affafd301ba7e935d9097fc2ee476f5796798234145","transactionIndex":"177","from":"0x3fe97bd7b1a5ac53069f2824c0118a4d66870d46","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"51700000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14382957","gasUsed":"46480","confirmations":"2688618"},{"blockNumber":"12317381","timeStamp":"1619459239","hash":"0xad8c81183251b61cb627eb81e05d83572a6d28476e26169d76d33e56c60b031f","nonce":"322","blockHash":"0x6093d1624ed25f4c7dc2f9ef5ebb74230c8ef0e4c10c05d5e72b2a0b4cd2be84","transactionIndex":"117","from":"0x1b5a75086461d7896250f236b9433e7379dc7fdb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"927000","gasPrice":"64000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10160490","gasUsed":"796610","confirmations":"2688787"},{"blockNumber":"12315951","timeStamp":"1619440470","hash":"0xc3870f0ff21f646dfdbcfeee3d79d82d81fbd38b6ccbafa3b828d97622866293","nonce":"795","blockHash":"0xcae4211807538c8393a92ce499a57efca5ddc8997845dacb94f4198026004677","transactionIndex":"156","from":"0x36e0edc88cd1902f189ac922a4401cf4f389a110","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"51128","gasPrice":"49000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7037399","gasUsed":"46480","confirmations":"2690217"},{"blockNumber":"12315470","timeStamp":"1619434340","hash":"0xd0d1dd846641b7cba0c1e3f368429029bbd83e77cc842057753d782e6e1c7923","nonce":"126","blockHash":"0x658aa8129296d735cdfedf26e71d44318e4b5c7015bbfc9640d62768c25d651f","transactionIndex":"61","from":"0xbd09d89f8ba16b21cee9a0c22f5b3891b97a711b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"833713","gasPrice":"45000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3441502","gasUsed":"711141","confirmations":"2690698"},{"blockNumber":"12309277","timeStamp":"1619351310","hash":"0x4aed5fd9983cab3861dad5c1938f104f1c770442937375b07caefdd8e72af49a","nonce":"399","blockHash":"0x025c21ec4b4d0d6f6b1d1dfa21f391e5dadcd307d00ed5c8e4dca964b25362e8","transactionIndex":"60","from":"0x49a34938ae8362e7cff78dce3abb54840de79deb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1013155","gasPrice":"39000001347","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6092755","gasUsed":"872079","confirmations":"2696891"},{"blockNumber":"12308898","timeStamp":"1619346098","hash":"0xab3a08fc31bf613f381927516d79271f0fc418638543ffe1bc32c3ac04209a73","nonce":"1582","blockHash":"0x0754270b85d4a8bf96aa2fed2faf6b117be1b2c3f7fb8b86bff92a516dae522d","transactionIndex":"124","from":"0xe91cbc483a8fda6bc377ad8b8c717f386a93d349","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1064654","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"13311701","gasUsed":"920710","confirmations":"2697270"},{"blockNumber":"12308475","timeStamp":"1619340875","hash":"0x84c00651fe184ac034cfacb2c2020ac45825fcaff61fc9bb8aade297a565efba","nonce":"94","blockHash":"0xbca92a5d05872626ef65cd7cde815f71dda33c6164d328b98d33bc0dec546294","transactionIndex":"163","from":"0x3b88aa5336158dba041929a3e069b997ee95cc5d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"837587","gasPrice":"39000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9951672","gasUsed":"713854","confirmations":"2697693"},{"blockNumber":"12305378","timeStamp":"1619299519","hash":"0xe9f6255af715b75c89ce12db09ed487eeef292db9e55ff7dcffb9f3ddb4a9285","nonce":"2919","blockHash":"0x19760303e42ecbfaa80fb59278b170383f1d5338486d11a5d24c71c0fe17d2e1","transactionIndex":"75","from":"0xfd9a6cd1670fe8eb4012d8abb9cdf25741a6ff04","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"815282","gasPrice":"48000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7618047","gasUsed":"694915","confirmations":"2700790"},{"blockNumber":"12304724","timeStamp":"1619291101","hash":"0x2b5afeb6ce9a47f8615b936c9918051a471528eab5127de2f9db89e23d8665e2","nonce":"6","blockHash":"0xa685c8af141908090818886288735ef26229940701b0dc451772ce8dae421071","transactionIndex":"180","from":"0x0e080fba6a0ec42065f36c2ac7e916468260df63","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"781391","gasPrice":"56000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14092814","gasUsed":"664616","confirmations":"2701444"},{"blockNumber":"12303728","timeStamp":"1619277793","hash":"0x946278052ec3823b220e4ab350a8c51e1173aadf8c48c289f3b0c1e724ef074b","nonce":"456","blockHash":"0x076d7b985fc83d6795150c07518c021f483c2d6e50453f9dfdced0795e17ed5a","transactionIndex":"141","from":"0x98428fefe7ecc5d1b400dc05cbf2d515e0dc206a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1058613","gasPrice":"58300000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9290924","gasUsed":"915830","confirmations":"2702440"},{"blockNumber":"12303719","timeStamp":"1619277658","hash":"0xbc0a5e8c9638cf1e86ff9901767cb435a9d4cc4fd83157a6e72e1e77370d8ea7","nonce":"2415","blockHash":"0x8873ec1a11563c29a5dec68ce8c93750fb4b7dbbaf2ea28a6ade385e60366042","transactionIndex":"74","from":"0x5d4f25b080230976187e9897a4cbb4c284d7c390","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"834766","gasPrice":"72000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5117952","gasUsed":"711734","confirmations":"2702449"},{"blockNumber":"12303493","timeStamp":"1619274542","hash":"0xa41f2bb35717d17769e161be9081e322605558b22da6fdd94649a089cd3b1314","nonce":"431","blockHash":"0x0aeea56eb01a21f49b273b2af677ebabe7c4e6071a2db46fa3afca98b5b467c7","transactionIndex":"196","from":"0x98428fefe7ecc5d1b400dc05cbf2d515e0dc206a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1198690","gasPrice":"56320000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000010e9deaaf401e000000","contractAddress":"","cumulativeGasUsed":"14486689","gasUsed":"1090161","confirmations":"2702675"},{"blockNumber":"12299032","timeStamp":"1619214822","hash":"0x2a318a94db0e5e6c9402f5078fc09afae0ee72326d5e26e4f0ccff811be4661b","nonce":"40","blockHash":"0x2682249b1aeb4e7880bc7e7966517ed5446b643d7e2d6e97e6af8a3b0dd258a8","transactionIndex":"67","from":"0x6a7904f0ba2ded9c41a8b03a36b3880c174a5597","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"872851","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000465d5e5ae6b9080000","contractAddress":"","cumulativeGasUsed":"6505080","gasUsed":"793829","confirmations":"2707136"},{"blockNumber":"12289195","timeStamp":"1619083874","hash":"0x2cb831b9adb9ca75cca125e30c7d6322ea559dd6a409281a7e12ac07715711d5","nonce":"37","blockHash":"0x66e1415f8df7e52ea2fd3fe6460ddb081c1f405fa1d6e57c2e29b13a9ed54584","transactionIndex":"222","from":"0xd1e3d14ce91043888b5a9e0d7048353f73abb783","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"781379","gasPrice":"106000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"14675429","gasUsed":"663524","confirmations":"2716973"},{"blockNumber":"12247380","timeStamp":"1618525427","hash":"0x3667303057db62842c427cdf96fa5d6ce565de3f196e249d6c55136b47739dcd","nonce":"14","blockHash":"0xbf76afbc5cd45795b613ea988ef10b5b18172ca4a4b821133f0556f181da6342","transactionIndex":"80","from":"0x50f1b2f76f6b4f7b08ea827ae4d7888ab6036353","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"864465","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000d25cd7379d159b3e8","contractAddress":"","cumulativeGasUsed":"9862641","gasUsed":"783416","confirmations":"2758788"},{"blockNumber":"12246764","timeStamp":"1618517286","hash":"0x4bc0cc250e87ae093dade05379a63a2bd62e1a45cee3864dbc0bed21d2a57342","nonce":"62","blockHash":"0xce1e0f7c967f47049225643dded12a0539b1b1516eea42de9db62abf1a23ccc2","transactionIndex":"140","from":"0x38f9da55dc0b4306dfa8a124df3e2f9ad706fb24","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"29380","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12401541","gasUsed":"29380","confirmations":"2759404"},{"blockNumber":"12246133","timeStamp":"1618509133","hash":"0x2f6a553dc9d86a004c19ceb3d800cfa5c735fd5207637ae5a3f94dfcf71a0e79","nonce":"7479","blockHash":"0x335987f0a55249e489afdc25cd1fa57a119f29406db3d9cf7a81f5939b638acc","transactionIndex":"32","from":"0xa25a9b7c73158b3b34215925796ce6aa8100c13a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1334863","gasPrice":"62000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5780038","gasUsed":"1164497","confirmations":"2760035"},{"blockNumber":"12242264","timeStamp":"1618457745","hash":"0x0d4b89a3925e343b7b66b694096dae490695beecf7557bb1abc1689c43e709b8","nonce":"236","blockHash":"0xc93503c4a140ceddd1f62415c05cc67172792d2d5656fbbf8f57b9ed9970b07a","transactionIndex":"121","from":"0x70fb7a87512ec7cf701767463af2e5741a67ce3e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"921655","gasPrice":"91000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7708801","gasUsed":"790192","confirmations":"2763904"},{"blockNumber":"12236998","timeStamp":"1618386992","hash":"0x2cac64f9e83623ec56e225d6145659efe047acee8353798b9194d35e36b4ce7c","nonce":"1721","blockHash":"0x053d685167dcaabf0e8c51414961c8ab86f44994f01915033df36481532ace5e","transactionIndex":"171","from":"0xf7b18e107eb36797f4ce36de756630b9c30969ad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48805","gasPrice":"100000001347","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000e588097ee21f18859bf3dbe1416263e8b5a40200ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12304021","gasUsed":"44368","confirmations":"2769170"},{"blockNumber":"12226603","timeStamp":"1618249026","hash":"0x863d666958cadd44514417b565f675a457677b66b2f4c477383e8798b42c184f","nonce":"25","blockHash":"0x8a5b4df32d779599ab263796bb8eb50389468680b582847d7cf0518d2048be45","transactionIndex":"115","from":"0x5c2c1bf61c0183c6f070033b094b8c2200ae6673","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"122000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5817498","gasUsed":"44380","confirmations":"2779565"},{"blockNumber":"12226329","timeStamp":"1618245591","hash":"0xaa365c7036a98deb9eb3eabb7fb64bd20015ee3408c977ed9506902170a640b1","nonce":"226","blockHash":"0x851467962c9337a8e7cc0f2478b89db69912015b849945d2cff7b97cb82dbf98","transactionIndex":"171","from":"0x7ecb0f818cad02f60ee0f6dc4aa93341824c4031","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"164000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12351747","gasUsed":"44380","confirmations":"2779839"},{"blockNumber":"12225251","timeStamp":"1618230570","hash":"0x6dd7e5894201ff51b08ab23e64181d7e727fae14ffb9e27ebe97932370bd371a","nonce":"510","blockHash":"0x20db2dbae31963fb54b2a5733391e051cf5cb3abb01c49171b5d7cd261cc7ae1","transactionIndex":"95","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688677","gasPrice":"76000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9651540","gasUsed":"579145","confirmations":"2780917"},{"blockNumber":"12223486","timeStamp":"1618207099","hash":"0x3b9a43d44d01071bcbecbda8af1f89e91b6077239d009d6be90c3c4a2e4f90a8","nonce":"1655","blockHash":"0x09c751782c7872a2a91ed14ada421082c7a9cc3dad871656bb2665bd2b07f048","transactionIndex":"174","from":"0xde48537ce6df7f50daf3989e3202636b09b55f5b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"733129","gasPrice":"66000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000005150ae84a8cdf00000","contractAddress":"","cumulativeGasUsed":"11637967","gasUsed":"663683","confirmations":"2782682"},{"blockNumber":"12217503","timeStamp":"1618129237","hash":"0x1ec23bd3f1a8451076f90dcff5b01bcb305dbf584bee7ad3cc44ec0887a05725","nonce":"690","blockHash":"0x6efb33c082993fead2534fce833b3afaf5507f4e35cfeea87c35bdc48378e0b9","transactionIndex":"99","from":"0xfec2de8d9e77214cd219cd03c0e722d82b4de541","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"295849","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11836502","gasUsed":"235708","confirmations":"2788665"},{"blockNumber":"12216203","timeStamp":"1618111240","hash":"0xa9679380dc5ca1a36cc81f595272e1b3ef3d69dbb29fd8bfa63c608795dc893e","nonce":"1809","blockHash":"0xddf14966fe8091abf515bc6add5badaa2e5e0410292ccf5438fc9de5125784e6","transactionIndex":"123","from":"0x0be0ecc301a1c0175f07a66243cff628c24db852","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"279319","gasPrice":"67000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8412019","gasUsed":"220793","confirmations":"2789965"},{"blockNumber":"12213063","timeStamp":"1618070040","hash":"0x6b2c4e33b660c7ab5116aebba3bfeca3ded3313e3daa120e2961f5329243ea63","nonce":"48","blockHash":"0x008c4f89bfce3b12d537c2d85a2ebe4e3bfb9e2131681812a148fca15d35a2e0","transactionIndex":"223","from":"0x38f9da55dc0b4306dfa8a124df3e2f9ad706fb24","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"44068","gasPrice":"102000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa260000000000000000000000000000000000000000000000000de0b6b3a7640000","contractAddress":"","cumulativeGasUsed":"11922702","gasUsed":"44068","confirmations":"2793105"},{"blockNumber":"12211320","timeStamp":"1618046624","hash":"0x2785f144c77b8fd764e53033d1c3f2f6d218f24f2a79097a353ac0ff9f01a99c","nonce":"175","blockHash":"0x8ac6589e18c81fdebb8c83d48a5f800b54f87c827600db7f5a9a4b95c3f39206","transactionIndex":"58","from":"0x86834a65e12fc6fa4b564b8d0f6b98a4caf88f50","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"843680","gasPrice":"78000001347","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11094443","gasUsed":"613479","confirmations":"2794848"},{"blockNumber":"12209726","timeStamp":"1618025551","hash":"0x14dcb7e3519b9d907bfb74267376f7c38b2b68400dcef208d211b60c5be5e1a3","nonce":"2","blockHash":"0x1bed753602fe84e049e255954176ed8d01224488a13453ade2252bdabf62955c","transactionIndex":"153","from":"0xa6defd477338508c76147822b2fb722717943b1f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11608800","gasUsed":"44380","confirmations":"2796442"},{"blockNumber":"12206990","timeStamp":"1617989282","hash":"0x6c36392bbd6c18cb637a14c2217e501c8f2740240ceeb197d8c11ab334670fca","nonce":"81","blockHash":"0xd5b7ade7512dd3b4d444f570fb5476e79ba00546e7c23cfebf482bd8826b4044","transactionIndex":"79","from":"0x51c68d67789c607c395062bf4cf60c9ff8723027","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"671744","gasPrice":"110000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7899298","gasUsed":"563856","confirmations":"2799178"},{"blockNumber":"12201009","timeStamp":"1617909405","hash":"0x6fabdc572e730edb7cbe2c93716c6f2fa9c9b8b45b645836599578cfa0516bbd","nonce":"342","blockHash":"0xb0bb24a0407724cc3333b1795b5fda45688b0d502450aafdfa416fe939898ad4","transactionIndex":"99","from":"0xb8a6791318eb3e50c7cdc5b4f5a57cfe37d7f200","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"732515","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000113b4b760ebb645ad4d","contractAddress":"","cumulativeGasUsed":"8043746","gasUsed":"662467","confirmations":"2805159"},{"blockNumber":"12199849","timeStamp":"1617894220","hash":"0xb80bc6ca6e8f03357a3d9a6eee85f6c0530692dd32d0238d7859cd4a4f02b37f","nonce":"1113","blockHash":"0x403f363ac4a5e4e53ba8a0712e0152086903d94095049d9fdd56dd1209ca3918","transactionIndex":"74","from":"0x067018bacb704d9fb774fd00572d8eddb4adbbad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"811820","gasPrice":"132400000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000152d02c7e14af680000","contractAddress":"","cumulativeGasUsed":"7457520","gasUsed":"734769","confirmations":"2806319"},{"blockNumber":"12165690","timeStamp":"1617440642","hash":"0xaef072ef90f1d5e0e4accc3e64b36fd5baa071d24af941d9a5a806d9bfdf588b","nonce":"132","blockHash":"0x6cfd7744f842363b0544b52daf56e1d5c8dbaa5401e52f73cf0e6e201d1c9fbc","transactionIndex":"190","from":"0xab0b99541f753bbb491112ccdbf2b38c8865fb87","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"808782","gasPrice":"136000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8262975","gasUsed":"687149","confirmations":"2840478"},{"blockNumber":"12160984","timeStamp":"1617378875","hash":"0x1dd5e2ade5fe6df3b8a6c3bc683a107ffa8bc01255d455ee9d0234f854de0926","nonce":"17","blockHash":"0x4bd992b44065c31954521b3ce9c6fa24c5f07185c21e8a731437af34230b40fb","transactionIndex":"131","from":"0x1ff80c224cf7f42d715e4d7b2f6485aca06d54e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"44380","gasPrice":"331000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000011111112542d85b3ef69ae05771c2dccff4faa26ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9141572","gasUsed":"44380","confirmations":"2845184"},{"blockNumber":"12160948","timeStamp":"1617378357","hash":"0x9a053ac2abb64a72949d81e9f50879e51f7b4e1e8b2172fd9f44badcad20a7cf","nonce":"16","blockHash":"0x074751ec3c3d980f4cb4afa7888085b6b9193a8ddc4ac93c09d495871563707d","transactionIndex":"190","from":"0x1ff80c224cf7f42d715e4d7b2f6485aca06d54e0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66120","gasPrice":"310000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000b69f9cd6c9dfe547ff83c1eb153a8a0abd7adcd900000000000000000000000000000000000000000000000a4cc799563c380000","contractAddress":"","cumulativeGasUsed":"11076035","gasUsed":"44080","confirmations":"2845220"},{"blockNumber":"12133297","timeStamp":"1617009497","hash":"0xe16c63dd01cb922342c8d3bed536d888fa8e57b9607b0806cdd190abe876f90f","nonce":"57","blockHash":"0x79ef0ec1c06ea8037e029470cb6a7288860dddd0ac26303d386f9ca3eb2ef773","transactionIndex":"40","from":"0xd42b2c7b0604ff38072a6679e997e61ccc6a5a84","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"728642","gasPrice":"102000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5777568","gasUsed":"615075","confirmations":"2872871"},{"blockNumber":"12119612","timeStamp":"1616827626","hash":"0xdbdf328929367977b511918d4e00549cfe77b5214191c5d7bb932cfb1dff46ce","nonce":"46","blockHash":"0x04f0c4f065a299a3f74f1c2fe5d8bdd39cdc92429efbe596583a7a43470cad15","transactionIndex":"157","from":"0x5c27f44d6ec7a7a97a9690592dc59d9222c30f47","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"83000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12443897","gasUsed":"44380","confirmations":"2886556"},{"blockNumber":"12116658","timeStamp":"1616788215","hash":"0x694a75be31b8703a66bf7f92b1cedca040587d390d9a6f30e884e65831c1d12c","nonce":"22","blockHash":"0x6b1aa47ac28b5dbb5f1839465a38ae8876852503d6fa1ea422fee25797d8ca30","transactionIndex":"115","from":"0x8ca0ed0ae19188f1e7b54aec1ec0e9ad546c4c54","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"706305","gasPrice":"173000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000001d54fabe489bb72000","contractAddress":"","cumulativeGasUsed":"5499307","gasUsed":"636677","confirmations":"2889510"},{"blockNumber":"12107542","timeStamp":"1616667559","hash":"0x979e035de6a645dc777354908989151741111809c0417f22be7cdc41c6f19ec1","nonce":"379","blockHash":"0xb7166f4ea6af2addef99e00381e6efe0a71d1b042da0a9576a3b52fe2edb4c5f","transactionIndex":"140","from":"0x7ad7100117ee2554605f500007bada9d936a6052","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"135000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8660303","gasUsed":"44380","confirmations":"2898626"},{"blockNumber":"12096159","timeStamp":"1616516036","hash":"0xd5e0f2b4e3fd7f799486e699ecd0abea119a7362f37d72e7682e5aae19ae32a5","nonce":"2358","blockHash":"0x7f0b4e136b7a3989d96d3984b631e45256567a977dc81fa0cb18c3e201cafe11","transactionIndex":"135","from":"0x8a83716acd66d9e1fb18c9b79540b72e04f80ac0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"750515","gasPrice":"179000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000021a62df5e9ee0757598","contractAddress":"","cumulativeGasUsed":"8460581","gasUsed":"644122","confirmations":"2910009"},{"blockNumber":"12086207","timeStamp":"1616383794","hash":"0xade775b0b7bad9348949b03753e38da543b468b613da7b6b4d83c0961ff3a26a","nonce":"48","blockHash":"0xbc60d37c8610df3368f7cc4656bc86234426f655990ba5d8453efd212fbda114","transactionIndex":"25","from":"0xf9e6d7f3295b2cbd6ee6d010e3c5da65ec885910","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"718766","gasPrice":"106111000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000333c2666160426ae1d9","contractAddress":"","cumulativeGasUsed":"2169897","gasUsed":"650670","confirmations":"2919961"},{"blockNumber":"12076843","timeStamp":"1616259010","hash":"0x67e4be4e1a6fa64bfef697a920aef768f4b81edf5f3ce2ec4c8230083734a127","nonce":"507","blockHash":"0x2a0c5fd2c5b367837b0c01ff1c1af9f64aed9a30983ab4bb96848118d0528322","transactionIndex":"135","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"142000001459","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9603438","gasUsed":"44380","confirmations":"2929325"},{"blockNumber":"12067370","timeStamp":"1616132674","hash":"0x96c6711f822c02bd21a724d2327289877c66c0baa85164e571977909931164d0","nonce":"2858","blockHash":"0x9a4233d6b51aa2886777be8f47daa503e425ec9544b29f2e1c91cb007ffae0c1","transactionIndex":"184","from":"0xfd9a6cd1670fe8eb4012d8abb9cdf25741a6ff04","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"44380","gasPrice":"118000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000b2be281e8b11b47fec825973fc8bb95332022a54ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10162507","gasUsed":"44380","confirmations":"2938798"},{"blockNumber":"12066952","timeStamp":"1616127068","hash":"0x901b5220ed63cb0db8ef74cfe5caa7717d0313e6ceae075f7b94da5fadffcb05","nonce":"52","blockHash":"0x39d49a9c19697feb2bf15a20ad1e8f8d7a1e235f5710920e2483a43335f00469","transactionIndex":"216","from":"0xd42b2c7b0604ff38072a6679e997e61ccc6a5a84","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"26000","gasPrice":"193000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12502923","gasUsed":"26000","confirmations":"2939216"},{"blockNumber":"12066952","timeStamp":"1616127068","hash":"0x14f7da2171896784723a9a26a45b1438eb820779b5378b815c591ce91026b236","nonce":"50","blockHash":"0x39d49a9c19697feb2bf15a20ad1e8f8d7a1e235f5710920e2483a43335f00469","transactionIndex":"214","from":"0xd42b2c7b0604ff38072a6679e997e61ccc6a5a84","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"30000","gasPrice":"165000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12444427","gasUsed":"30000","confirmations":"2939216"},{"blockNumber":"12066952","timeStamp":"1616127068","hash":"0x542cd2f4b42ac7ee9bc3cccbced0873c5e72655ec38b10df0d98c8f6d3122c6a","nonce":"49","blockHash":"0x39d49a9c19697feb2bf15a20ad1e8f8d7a1e235f5710920e2483a43335f00469","transactionIndex":"213","from":"0xd42b2c7b0604ff38072a6679e997e61ccc6a5a84","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"35000","gasPrice":"150000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12414427","gasUsed":"34957","confirmations":"2939216"},{"blockNumber":"12066952","timeStamp":"1616127068","hash":"0x96f8d4939eaaa40c8bef67adc7a711eea936c7a9430aa9d362872c629c92cc55","nonce":"48","blockHash":"0x39d49a9c19697feb2bf15a20ad1e8f8d7a1e235f5710920e2483a43335f00469","transactionIndex":"212","from":"0xd42b2c7b0604ff38072a6679e997e61ccc6a5a84","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"40000","gasPrice":"125000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12379470","gasUsed":"40000","confirmations":"2939216"},{"blockNumber":"12062795","timeStamp":"1616072361","hash":"0xff29dc75eb3ba11294e810bdc0db3464aa255c44277a6d70fd05e7a7a5246edd","nonce":"1454","blockHash":"0x96ff368b686997e0d3241b490be421007b8599271711905deb62f68668131ffd","transactionIndex":"93","from":"0xe91cbc483a8fda6bc377ad8b8c717f386a93d349","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"891031","gasPrice":"137300001604","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000117410b0adb979220d7","contractAddress":"","cumulativeGasUsed":"9410991","gasUsed":"807581","confirmations":"2943373"},{"blockNumber":"12059284","timeStamp":"1616025445","hash":"0x59b98b7781dd1f5e5d18ef798b0f8711a4448826e2ffa2026d696f137ab128d3","nonce":"557","blockHash":"0x559803cefd2e26cc8c94b58f2edd3239d9e5e6a7fb269a7308c81837bbd492e6","transactionIndex":"119","from":"0xda874f844389df33c0fad140df4970fe1b366726","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"161000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10257109","gasUsed":"44380","confirmations":"2946884"},{"blockNumber":"12058079","timeStamp":"1616009579","hash":"0x93b24afd4a1b8027c64315649e468b1bf6203bae1481812360e4e1039ae53e25","nonce":"134","blockHash":"0xb6b32c7c52571aa3fadf3dd85b8066e9702d624a022c54a102e3f76feb5511b5","transactionIndex":"185","from":"0x93f27b8719aba7ebaeaa19ef6cc3b5962aa32e69","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689975","gasPrice":"256000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9276734","gasUsed":"578458","confirmations":"2948089"},{"blockNumber":"12054249","timeStamp":"1615958616","hash":"0xcc4c256ffc41dd4d55f725116b6b9e4ad767fe916520b2784ffa78fa97f0ffd4","nonce":"5","blockHash":"0xfc339ba28efa07017a6cdd160a7c1d772b16f5a254c56cfbac92630789423e02","transactionIndex":"15","from":"0xb2698c4793ed06ab156039de676d67994a39c52e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688408","gasPrice":"131500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1849788","gasUsed":"578533","confirmations":"2951919"},{"blockNumber":"12049931","timeStamp":"1615901723","hash":"0x96cb1879b436e357df2268fc2e6aa78af04eecba630136d59c7f0c7545365867","nonce":"504","blockHash":"0x7966d029b9e76cf49b669d6d474db6a3096de15159a041089e7791ea62ae2ce0","transactionIndex":"159","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"44070","gasPrice":"144000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3aeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11508172","gasUsed":"29380","confirmations":"2956237"},{"blockNumber":"12049805","timeStamp":"1615900197","hash":"0x951bf96bf89f923e28d477d85b4d98b6f206a3d597b2f795798e1ecde5e23457","nonce":"503","blockHash":"0x485e8a1612b42afa8d4ffea277fc4cf2eecfbd93abcf9b8fb9f8460a264c94a6","transactionIndex":"171","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66120","gasPrice":"150000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae000000000000000000000000000000000000000000000010c836a06704990000","contractAddress":"","cumulativeGasUsed":"7773549","gasUsed":"29080","confirmations":"2956363"},{"blockNumber":"12049803","timeStamp":"1615900185","hash":"0x5089e44488ced58d69c39b284f159f0bddbba71ea612a42d51e1b8527d9187a6","nonce":"502","blockHash":"0xf6dbbbf75dd256c093119353368e40e47a9b3648ed400cbf31cba62fecbbc836","transactionIndex":"42","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66570","gasPrice":"149000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3aeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2319774","gasUsed":"44380","confirmations":"2956365"},{"blockNumber":"12049776","timeStamp":"1615899823","hash":"0x217c923d0bb02b27434eec1a51b66ad224ca35ccb261c6bf7a505c0f3e0442cc","nonce":"501","blockHash":"0x434c9404534a0beedaa03956a77a2a977c65254f5b435afba661b042f8483c82","transactionIndex":"104","from":"0x69db041abf7220f972bd673a086b808623af2e7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66156","gasPrice":"137000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000095e6f48254609a6ee006f7d493c8e5fb97094cef000000000000000000000000000000000000000000000010c836bd3b23efb671","contractAddress":"","cumulativeGasUsed":"7383349","gasUsed":"44104","confirmations":"2956392"},{"blockNumber":"12049083","timeStamp":"1615890348","hash":"0xa2f72a42057f15471e3948c6c35d158bf5cadff8715a24d5c3b31c40b3e4a543","nonce":"1542","blockHash":"0xece0552a8d2c36b7896dffee94fe7647e6bff76c45e09a9533e571693707262d","transactionIndex":"130","from":"0xf7b18e107eb36797f4ce36de756630b9c30969ad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"145000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6710271","gasUsed":"44380","confirmations":"2957085"},{"blockNumber":"12048598","timeStamp":"1615883385","hash":"0x1124517ef828e2bda2ab44436076eb02fddaad30807d6a24ae551daaf57e8b66","nonce":"140","blockHash":"0x33e23aa12f43b831ee13dc41058e0a43735ea9a8f2506fa2852f1f86ff29d2de","transactionIndex":"75","from":"0xaf95ced3ef9e45077b4f785f1763a9f547d8c87d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"690377","gasPrice":"121000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12164091","gasUsed":"579196","confirmations":"2957570"},{"blockNumber":"12042588","timeStamp":"1615803520","hash":"0x1ac08062c83c724077723ada654c19bbf8af6b5fdc36b2482231aee5275c78f9","nonce":"483","blockHash":"0xa3445bee2df62ff1aeddc82f61d9373ebe2644905d5de8ec536b185114593054","transactionIndex":"125","from":"0x33f20da6f9af99e746c03c29ecaf75c1cf521bd7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"995399","gasPrice":"185000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10569564","gasUsed":"856166","confirmations":"2963580"},{"blockNumber":"12040894","timeStamp":"1615780731","hash":"0xc71d1cc8ec72c407aac1db38ef76b988747a6dab2120cd11deb97ab78097ef0c","nonce":"1531","blockHash":"0x6b49522c252512d2aeaba58d93291a4147150f0750a1ae59053af65be91e5b93","transactionIndex":"123","from":"0xde48537ce6df7f50daf3989e3202636b09b55f5b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"811974","gasPrice":"120000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000009e9f9f68074cd86000","contractAddress":"","cumulativeGasUsed":"10037231","gasUsed":"733558","confirmations":"2965274"},{"blockNumber":"12040493","timeStamp":"1615775573","hash":"0x0b5aac7f10a587a628ad50d4569ead78880110c52b060c6f458202d5e22985b8","nonce":"41","blockHash":"0x4ae487541bf6e4527e409449c9e3443968c75e3ca0912f262fdc3cad554f12db","transactionIndex":"125","from":"0x568c26fe5ca02b92a2d7f775f8ac1ef4e78cf3ff","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"144000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5417217","gasUsed":"578672","confirmations":"2965675"},{"blockNumber":"12039487","timeStamp":"1615761498","hash":"0x10d0bb8b4b02048c3542b2e68d754e6807676e04d5fd3c6fb3969ebf0679dee2","nonce":"339","blockHash":"0xdf72a8f4d7a31dfd4c0b5c5bbfc33589495a3a0acfda2415c7613854357aafc0","transactionIndex":"143","from":"0xc5937e880b21560157e3a5c9e6f90a77005ab04c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"963371","gasPrice":"132000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000049b9ca9a6943400000","contractAddress":"","cumulativeGasUsed":"10680125","gasUsed":"875263","confirmations":"2966681"},{"blockNumber":"12038658","timeStamp":"1615751192","hash":"0x0b3c74cefd18aee47dabc16ff01b0e8ed3cd2882f82c02af16ab7f3850771d0f","nonce":"220","blockHash":"0xbc44b94e4ee495d6cbbba55a0edbae86cbabfeccceb647d5aa2e3edf6bda9136","transactionIndex":"102","from":"0x679308c5d753c82d09a61d40fedf27e2659ccace","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"692126","gasPrice":"140000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11953299","gasUsed":"579261","confirmations":"2967510"},{"blockNumber":"12028670","timeStamp":"1615618772","hash":"0x408bdfc49407f7fea0a473e863cb6aa7e07a3c153b11d781b7b5f2a965ffd7dd","nonce":"2313","blockHash":"0x38400051268ae3753624e536727c2ba25fe716678a428278161ae971adbaa397","transactionIndex":"84","from":"0x5d4f25b080230976187e9897a4cbb4c284d7c390","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"117700000233","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7556078","gasUsed":"44380","confirmations":"2977498"},{"blockNumber":"12028533","timeStamp":"1615616947","hash":"0xa683dda7b0d0b08265bdb3de4957aca7f881d8a30078e779ead55d9b07c08a20","nonce":"108","blockHash":"0x4211c23dafc8a5725e92fa40188eb01ca34e7101b4d13a5f3d17ed5bccaf16d7","transactionIndex":"181","from":"0xbd09d89f8ba16b21cee9a0c22f5b3891b97a711b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"116000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11311969","gasUsed":"44380","confirmations":"2977635"},{"blockNumber":"12024007","timeStamp":"1615556735","hash":"0x9afc9a5538a8ed9584cbbfd6928b69f81ca78fbbbfb0c6e8984f186b08186f25","nonce":"5528","blockHash":"0xbcdeaf1786e4f4a6cddd3de6b56af3e480137f442a4481bef4968aa130ff7a9c","transactionIndex":"120","from":"0xcebaa26c11bdf4f239424ccc17864b2c0f03e2bd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688237","gasPrice":"185000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8855770","gasUsed":"577301","confirmations":"2982161"},{"blockNumber":"12023570","timeStamp":"1615550682","hash":"0x0ee2e9f21c3e5b05a3aa0da39010cce42c834631d855bcf557be5e7ba5f62326","nonce":"392","blockHash":"0x95e02f6b5ae481df12fbcfc82efe7ab2ef0e5423f64956227beb98d7183eb650","transactionIndex":"184","from":"0x6e93c2acd39dd928954f94af25f97023162e8e82","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"117000001459","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10725600","gasUsed":"44380","confirmations":"2982598"},{"blockNumber":"12022495","timeStamp":"1615535567","hash":"0x564f3030a58d329ebfd5f79a9f3ac3b6f598cbca4dfad94d918cd22ca473ee89","nonce":"1583","blockHash":"0x882b904f2cc947967976435bca3afa97befa77cfafeb9e1053a0e635abdcf5b3","transactionIndex":"64","from":"0xe3786bf25e15013fdda09dbe881529d44b9ca239","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"856235","gasPrice":"136000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9855694","gasUsed":"728225","confirmations":"2983673"},{"blockNumber":"12021371","timeStamp":"1615520797","hash":"0x4cde1351c00a1f0a72d528f8c4b17bdc9de1fada0f5d28b891447d1507e86bf3","nonce":"23","blockHash":"0x40b3eb5c2db2f4728728bcb0c92d0ab34cc9ac596d107f45e9a68d1dc1f1c701","transactionIndex":"101","from":"0x250340301bb8ba0d0d3b898815aa4bd2760b981c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688979","gasPrice":"141000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7698494","gasUsed":"578019","confirmations":"2984797"},{"blockNumber":"12016067","timeStamp":"1615449636","hash":"0x724a65194c025859365d4e63a68e35c434f90d4eb44cbab20e8b66fe4dc3edc9","nonce":"433","blockHash":"0xc4f29f724715047d28f9bed9316dc0d9726c36779ca6345b6a10789665dd1311","transactionIndex":"173","from":"0x3ef60ae2ace351dc6058b5b21fb566089d118137","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"102000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10444066","gasUsed":"44380","confirmations":"2990101"},{"blockNumber":"12010839","timeStamp":"1615379926","hash":"0xebcef6b5f168d4604656eadd1d0fe924eb99a4558b3c02a0b59b0658ec997eec","nonce":"1411","blockHash":"0xa308312c5c855c8bf7e601dede3bd52a5881c76dd17232457601e880d31b1248","transactionIndex":"175","from":"0xe91cbc483a8fda6bc377ad8b8c717f386a93d349","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"853525","gasPrice":"105000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000022e8214ef8cd4626501","contractAddress":"","cumulativeGasUsed":"11830030","gasUsed":"773109","confirmations":"2995329"},{"blockNumber":"12006535","timeStamp":"1615322602","hash":"0x457cfb06e36ddf7301b300b3d0a55a0eadee8326b1a50172641b2ffd8d95c6d1","nonce":"66","blockHash":"0xe1b3eb3797094ef66a23ff4397e7e77873451c3794ba6934f61ac82ff144fe9f","transactionIndex":"155","from":"0xfa09412c84283782c73b17b526c9640aa87cd989","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"111000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9185264","gasUsed":"44380","confirmations":"2999633"},{"blockNumber":"12003506","timeStamp":"1615282000","hash":"0xf8d4f464e8ccfbee282c8f5a4cc72d6ceafa4a711ea9ea944819da1bf74702c1","nonce":"58","blockHash":"0xadb3e38d04d82717bd930885e38cce655b31ce2553bc8725278a0518bd24d91e","transactionIndex":"62","from":"0x3b7fa29fb4c537fcd59ae08420117c2ace96619b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"687738","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11211922","gasUsed":"577954","confirmations":"3002662"},{"blockNumber":"12002386","timeStamp":"1615267242","hash":"0xbf50aab615cba1438d28f5731fe6b23ea3be03b5aa71f70c07decda7526017ef","nonce":"25","blockHash":"0x1e9c005dc5f68e599bb463520f4af5df2497c017cb56a48e56c3971b90c304c1","transactionIndex":"109","from":"0x62686aa71743abbd049c9d2606b36831ba9b34cf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"672120","gasPrice":"124500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6783154","gasUsed":"578822","confirmations":"3003782"},{"blockNumber":"12002373","timeStamp":"1615267064","hash":"0x314796fc6f5498e38c5f9d0e9f344f76f5fe26ff452b0dcdfa0c71000e497f14","nonce":"24","blockHash":"0x5afa04e767fc30e67228af8c3de1873a0bf9dd4abe7b967e0afe4c86f55d0ba9","transactionIndex":"130","from":"0x62686aa71743abbd049c9d2606b36831ba9b34cf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"67219","gasPrice":"124500000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11251834","gasUsed":"67219","confirmations":"3003795"},{"blockNumber":"12002367","timeStamp":"1615266967","hash":"0x7971fe7c0af381c8a044253cf28e490a6bda4cd3f417559ca913bcb7f3e9ad42","nonce":"23","blockHash":"0x7eef70f792d80ee5f79305e55de57e4c2aaf79e9212f980ca48a94d8a8b028f4","transactionIndex":"42","from":"0x62686aa71743abbd049c9d2606b36831ba9b34cf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"67293","gasPrice":"123000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3560282","gasUsed":"67293","confirmations":"3003801"},{"blockNumber":"11997508","timeStamp":"1615202111","hash":"0x64479e228ca29c19974394f261c822f9a2949ef2dce9f44c487dece2f88d47df","nonce":"12","blockHash":"0x6f4ef5c2469cf9653e3d8bcad7e00f034fe018917cd8fc635582bb4604d0e504","transactionIndex":"50","from":"0x1cd3503d2dca9dd4e736481f9067e0b66423ace0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"684410","gasPrice":"71000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5968468","gasUsed":"574742","confirmations":"3008660"},{"blockNumber":"11997451","timeStamp":"1615201501","hash":"0xb43186a080e515d044c4334e4d53318526ddbb1bfd989a9c856dca5058378411","nonce":"167","blockHash":"0xbebb1ea36b8d1b78eec0120995567d7a98ba1cb2fa25e1721d786978d0b0615a","transactionIndex":"88","from":"0x86834a65e12fc6fa4b564b8d0f6b98a4caf88f50","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"887971","gasPrice":"78000001123","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000152d02c7e14af6800000","contractAddress":"","cumulativeGasUsed":"7547596","gasUsed":"804830","confirmations":"3008717"},{"blockNumber":"11995987","timeStamp":"1615181368","hash":"0x053e6c481f4938c3949f4e7c102109feda67dcafda534d09138e4738d5ee2455","nonce":"502","blockHash":"0xc01cd311e27f2694a058c5c5f08784a11fe6261140c954957dded72863b66422","transactionIndex":"34","from":"0xfec310a0523c78ccb0681e5b88ce2de3dfabf12f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"728884","gasPrice":"82000001347","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3092434","gasUsed":"614578","confirmations":"3010181"},{"blockNumber":"11990569","timeStamp":"1615109689","hash":"0xa5b53433187a0403fc26185168ef26a5240175dc1b61243c050d062fa180ecab","nonce":"5241","blockHash":"0xe90262740af6019d3eef7c99a7326954b2acb02a3b361b42502dbf6e0ae8c3a1","transactionIndex":"114","from":"0xee2826453a4fd5afeb7ceffeef3ffa2320081268","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"90100000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6452972","gasUsed":"44380","confirmations":"3015599"},{"blockNumber":"11985570","timeStamp":"1615042704","hash":"0xbcbf814e5def670887699b7503486bd9a63dabf4fa7804e96ae3775f3177055e","nonce":"244","blockHash":"0xb18e027e92979af8c3f49041419fce9d675ecac93b4ba70e5d05601965f512af","transactionIndex":"170","from":"0xfc1cb94b856d8eb1fdee98cca2c286e091b5da8a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"765069","gasPrice":"66500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10661684","gasUsed":"647915","confirmations":"3020598"},{"blockNumber":"11971927","timeStamp":"1614862860","hash":"0xb841fc1701c0482559e82c0b09b4380091719d98e815d84098ab1a21ecf1b3e9","nonce":"577","blockHash":"0x6d3bf6d89cdd93e8c4dc9959bc1ef0236aa0f34f83021ed781b8ad267fc74ef2","transactionIndex":"313","from":"0x8928b26de9ecc59cacdba095c6ed6237f48ddbd2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"818045","gasPrice":"78000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12012458","gasUsed":"694563","confirmations":"3034241"},{"blockNumber":"11971802","timeStamp":"1614861053","hash":"0xc358b24258c35e3400d1d2e37dd017c04990899c443065f61aa7c7d49ca46311","nonce":"576","blockHash":"0xd487eb29e587779afef06387f1d8174d6e527026d6c7c2e241b21fd5a5f06cff","transactionIndex":"400","from":"0x8928b26de9ecc59cacdba095c6ed6237f48ddbd2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66570","gasPrice":"97000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000003fbcd724be54f0a66232c3c87141c7a00e12cba8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12151053","gasUsed":"44380","confirmations":"3034366"},{"blockNumber":"11971106","timeStamp":"1614851184","hash":"0xc1a117b33d352aaf3d0cd2dee5d00eb7e278ff4aa07fd3b5d47e83a873f44e19","nonce":"4005","blockHash":"0xfcde7d1eb6a05d9060fe556c5868b1047653836a6a160b377a73c7da5695df3d","transactionIndex":"190","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"840339","gasPrice":"92000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9004459","gasUsed":"717174","confirmations":"3035062"},{"blockNumber":"11970294","timeStamp":"1614841139","hash":"0xa223784fe8925ca27eccf6f5cbbb97146f6adcd91ff5396c66a6808a6c67f3c8","nonce":"1031","blockHash":"0x991a0f0b98292219244fd1a64c525502b79105613bbea9ab109c048ac4ce51ee","transactionIndex":"101","from":"0x7c1908d49266ba2999c41b07b0895c33821f53a9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"905059","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7542867","gasUsed":"772581","confirmations":"3035874"},{"blockNumber":"11968427","timeStamp":"1614816547","hash":"0x01906f5b160279148d0ffc8b0b3a1d23f1279190fceccb438a31cefb2d3e9b94","nonce":"4002","blockHash":"0xc4568cb626d2abc344d836b894360994d9533a616f834136c671db76c5800477","transactionIndex":"63","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"829703","gasPrice":"146000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000008786784cbbcdd6df7f7","contractAddress":"","cumulativeGasUsed":"3698085","gasUsed":"751605","confirmations":"3037741"},{"blockNumber":"11960870","timeStamp":"1614715020","hash":"0x91874d1f9ba93a5888b30a425723726503be80f6a355254b04cc2598f88ccfda","nonce":"25","blockHash":"0x887cf41d4627d5dbbe851e810da16c3e38ff81709d41b937a9ae9ec83f92f786","transactionIndex":"89","from":"0x8d11da7b584c9901cf8dd401e4b34e73a0520585","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"699286","gasPrice":"68000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12053334","gasUsed":"590357","confirmations":"3045298"},{"blockNumber":"11959495","timeStamp":"1614697121","hash":"0x6cffa4d00b04f1b1d158070dfd1ac5c072a4c71263d016c6af8600c9647f2c65","nonce":"47","blockHash":"0x9138db6295646da7fe8abf3004a456044302cd1eb7febe0b45b4707aac86a452","transactionIndex":"42","from":"0xf6429a861ae6ffc44467f232fc557ee9d1ea48e3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"295680","gasPrice":"119000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4457208","gasUsed":"235568","confirmations":"3046673"},{"blockNumber":"11958870","timeStamp":"1614689017","hash":"0x8afed4131d897bbefac9094c4f163e95cf76d7f5d922179fa330c4889df09f55","nonce":"41","blockHash":"0x65de61bb0577106e1d88fe80363dbd7d948e220ff6a7a18f5877486117cd6159","transactionIndex":"72","from":"0x614363221285b4517f61e3bf7aa3ea0d3b8a43ad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"805400","gasPrice":"77000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8170179","gasUsed":"684539","confirmations":"3047298"},{"blockNumber":"11957162","timeStamp":"1614666234","hash":"0x2ad20ee1b1227b4724cdb2fcc691765a1275e6bdc9745d6e2835224d2f4223d6","nonce":"1965","blockHash":"0xb7aebf14900ecb5d4b6c5b6e22ff52d8ef3891d1ff823269b319e541ab1f1e00","transactionIndex":"70","from":"0x74375faba79502580c2906144ac99117a4a3f3b5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"671611","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6505900","gasUsed":"564485","confirmations":"3049006"},{"blockNumber":"11953003","timeStamp":"1614610442","hash":"0xe555d0e90ed9bbb25f2379e1da55fb334375352799f51a6b437a648fb4686365","nonce":"480","blockHash":"0xc559120a207056ab5af91cebd25e70a35c718950337207da0452947591e58b34","transactionIndex":"190","from":"0xbfc84e664702a8cfb0a4c137c6b7f3e9ab5239b9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"93428410905","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10089639","gasUsed":"44380","confirmations":"3053165"},{"blockNumber":"11949690","timeStamp":"1614566144","hash":"0x5eeab21e7c146ad88ad762144f8bfd8e3b2675a81a52f35ddd3049b3edc0abdf","nonce":"135","blockHash":"0x05a1e7f2dfee6e90a0de26efc7bdb1e7ce1fdd31010ee8894f1abb59aa939017","transactionIndex":"173","from":"0x0c2ac9ed47868d6ab9710df9dd55a70afe4eb838","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689890","gasPrice":"73000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12217335","gasUsed":"578383","confirmations":"3056478"},{"blockNumber":"11949480","timeStamp":"1614563572","hash":"0xfcb9c8c0253d76c3f583a168a5ce6b6961860ff0083e580f0018b17bee13159e","nonce":"360","blockHash":"0xf9682400cbec1e76836a7d959ef24e2fa325eb0ffd55499d7f17d68f1ebbf47a","transactionIndex":"127","from":"0xb4c8cddc137f46348231c937c4d36b643320af22","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"70700000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12401557","gasUsed":"44380","confirmations":"3056688"},{"blockNumber":"11947214","timeStamp":"1614533853","hash":"0xe5049a5a5ddf1c471b1d22a0e80b24a3d17d08262a7c1e3a1082040bbbc5f6f4","nonce":"71","blockHash":"0x37adaa940b2cf5e61a992b8a805e6c453583e0ad82549f7f5511b6469185184e","transactionIndex":"33","from":"0x427cb33637759d8a2b40dde1ff9950e82897db1a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"727072","gasPrice":"91000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3226552","gasUsed":"613411","confirmations":"3058954"},{"blockNumber":"11945570","timeStamp":"1614512065","hash":"0x367daaf96ba02607da1136dd44c987910fe0fa90b37fc576c082f7895d91bf79","nonce":"670","blockHash":"0x2efdce79d6cbb42d8b3ed2636e55025c9c44c7c723f90ca3ec919b53c1778561","transactionIndex":"118","from":"0x1b3cc974dfb9f962f9448096df229e52184e4994","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"803030","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11441873","gasUsed":"683181","confirmations":"3060598"},{"blockNumber":"11933622","timeStamp":"1614352788","hash":"0x36a9ef2ae6ce738a7041a137904ecde857670a246447bf3a13fbc0b5c2f7e696","nonce":"506","blockHash":"0x8f6a6a6857bf86defe07736f84aabcf7dd5a31315c2155f12e97f6e68f4d9d34","transactionIndex":"271","from":"0x8f10ae3ffd993bfb0a71e58e1bb606439dd5b301","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"144000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10928461","gasUsed":"44380","confirmations":"3072546"},{"blockNumber":"11932414","timeStamp":"1614337089","hash":"0x02775cbe04963b8c51b9dd7a919c4efde8a6ea5fc329c6052998c98238a95879","nonce":"124","blockHash":"0x02690b6980dbe375d182f649f42ba90099d1d3157847a2acc77c48ce09f45ba7","transactionIndex":"44","from":"0x93f27b8719aba7ebaeaa19ef6cc3b5962aa32e69","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"742695","gasPrice":"111000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000034bae9b40f249dd7006","contractAddress":"","cumulativeGasUsed":"3777326","gasUsed":"671258","confirmations":"3073754"},{"blockNumber":"11922410","timeStamp":"1614204442","hash":"0x8f5e9cc8730beb3676950ab53dee57a26adfc89716a7dc554562490f431026f6","nonce":"106","blockHash":"0xd11e8c0a5eff2ae2d1c9e586af26d672c1e0166945e2a1d5b2eeefd7052bc303","transactionIndex":"114","from":"0x4cde06ba4049e6f5a4644647ad7a09e799683d65","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"724825","gasPrice":"145000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10704921","gasUsed":"613840","confirmations":"3083758"},{"blockNumber":"11919718","timeStamp":"1614168197","hash":"0x8c43479651bb70b571e5a610bf71eedc03d808da999a0fe4d9d882028308a0fd","nonce":"330","blockHash":"0x08869f98192291fb4b0e0e57534648802b78c525a96ca2b93d1c2ca6653b06f7","transactionIndex":"153","from":"0xfb5b5c9b2bc822f8e47c29f826ca610c0ccbc87b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"674855","gasPrice":"121000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7414454","gasUsed":"565877","confirmations":"3086450"},{"blockNumber":"11914991","timeStamp":"1614104957","hash":"0x27cd206e81c564dc5d9078750fb3acc783c737341c86d37f229d52a9c9c949db","nonce":"30","blockHash":"0xfc44ab80e18b76a9e31a1ec121e3fcd4520dede3601bbe49013c31d7a87bb9a9","transactionIndex":"105","from":"0xd1e3d14ce91043888b5a9e0d7048353f73abb783","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"199000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8971401","gasUsed":"44380","confirmations":"3091177"},{"blockNumber":"11883802","timeStamp":"1613691154","hash":"0xc0277977341a9847f5e6e892ae505992d2177a4379482466b27640a08e85f03e","nonce":"16","blockHash":"0x77a88d2d0c447af2de8212ccefadf1551c96d493342608b0864296423deb851d","transactionIndex":"212","from":"0xbc3d8b1fefb652fca55dc10146e8909357273566","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"130900000233","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11660346","gasUsed":"44380","confirmations":"3122366"},{"blockNumber":"11882619","timeStamp":"1613675172","hash":"0x1775bd2baf7cfcdf531e94c1899d27c02443f2352ddcc33e44170caa333e34e8","nonce":"757","blockHash":"0x341efa256b6db147d61a4d8f1e5b94f20b22255c8c56d9274382567a7cf68c73","transactionIndex":"148","from":"0x856565db827588a88780454863f98a4a323e13aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"766989","gasPrice":"139000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11836184","gasUsed":"648868","confirmations":"3123549"},{"blockNumber":"11879493","timeStamp":"1613633554","hash":"0xc9d7dec1bbca32179f4347d8ec52baba712e5eebe23d028c3d0f2d3050d7c797","nonce":"276","blockHash":"0xb267d1f3f72394da6c6ba3d43eeff7cef501c693d3827436044b3f1eb3bc6836","transactionIndex":"212","from":"0x07dfdf8c15cd738d0d85830127646fb6b2e4cadd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"972732","gasPrice":"138000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000001f6cc7b5ef1a40c0000","contractAddress":"","cumulativeGasUsed":"9346901","gasUsed":"881850","confirmations":"3126675"},{"blockNumber":"11874354","timeStamp":"1613564772","hash":"0x133d5f53ca7732b9f4ae5b067f7c4d71d76e3d11cc18693151bdb00e95bf4934","nonce":"39","blockHash":"0xd82aa3e5ab92aca0f7da965c93e53677ac5e795536033ec27af2627aa0e0b2a2","transactionIndex":"28","from":"0x7504f0f60d5bbca6a5ccff8974f43820cb24f3f8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"133000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2398077","gasUsed":"44380","confirmations":"3131814"},{"blockNumber":"11870866","timeStamp":"1613519059","hash":"0x79015afd8337b3f834615aec9af75d5a5b357d5646939d8145616385bac702cf","nonce":"196","blockHash":"0xd749c8c32ecaf02bc24dab397986d345b286b0710f1d458baba957a10436d840","transactionIndex":"39","from":"0x679308c5d753c82d09a61d40fedf27e2659ccace","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"170000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5789171","gasUsed":"44380","confirmations":"3135302"},{"blockNumber":"11863002","timeStamp":"1613413725","hash":"0xed4416bf2c5e5009d325814e304a05355d93d97ca35b25cfaaeceade196d6e2c","nonce":"297","blockHash":"0xa9dfddcced48ab9bac2b5d92d3e506d8aedc125bd415d2cd6945cea733a8fbdd","transactionIndex":"138","from":"0xfb5b5c9b2bc822f8e47c29f826ca610c0ccbc87b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"150700000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10163643","gasUsed":"44380","confirmations":"3143166"},{"blockNumber":"11860384","timeStamp":"1613379193","hash":"0x643150fbf218ced0877339e42de33501be10c21e9581ca436773276c02157414","nonce":"190","blockHash":"0xf213c3d413be54c03b5d7f038a370616b005695898be7ca262c84657c0376389","transactionIndex":"116","from":"0xa08d4ca03aa7e83785d6eaf386f0b2ddbefcb482","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"690388","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9598988","gasUsed":"578822","confirmations":"3145784"},{"blockNumber":"11855765","timeStamp":"1613318732","hash":"0x44fd184bfc31451fd86a0c22140b2c5b75de4c702159af01bedfec32add1bf8c","nonce":"507","blockHash":"0x60c4c9a45a8da32864642d5c39a6240533e4fc4387b934a8a7481a1ee82c18c0","transactionIndex":"130","from":"0xc5a61d56ca395fcb87f148532369595e31286d0e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"812070","gasPrice":"206000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000f5cb85c58d21efa3480","contractAddress":"","cumulativeGasUsed":"8140517","gasUsed":"734341","confirmations":"3150403"},{"blockNumber":"11854109","timeStamp":"1613296382","hash":"0x23bc153f2d83d1c6ebe9f19974d9b289ef02acb3b912a893d5f13452a91b67ca","nonce":"389","blockHash":"0xcb227a7bd38f3773269cb9807a0691b38ba7e24e09676eccae2545ebc0efe558","transactionIndex":"129","from":"0x49a34938ae8362e7cff78dce3abb54840de79deb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"108900000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8201340","gasUsed":"44380","confirmations":"3152059"},{"blockNumber":"11852608","timeStamp":"1613276425","hash":"0x7717626f82cc0e09692b8cb81a20924599ec4e2aeffaf213aa1d5dfe42ad5236","nonce":"282","blockHash":"0xdfb3e148a709d5641dffdb8b5eb08b8ac993b08cf67b48dfa10efcb8346ded18","transactionIndex":"57","from":"0xa8defb2e1fe760f02f39e3d07a2ba0605fd8eb28","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"128000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10138950","gasUsed":"44380","confirmations":"3153560"},{"blockNumber":"11851346","timeStamp":"1613260407","hash":"0x3b6d5ab51b0f0e0adaa620c8b9e88a5ace3c6a1c5ac6dbf0344f0e1a6dd173a1","nonce":"2894","blockHash":"0xd53a254adef88e55588df6e3fb83ab2595ce3c8aa11185e0251429cedb7e1364","transactionIndex":"150","from":"0x0e7af95de26bf10e6b9f00d846c22757aa582b9c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"107000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8254336","gasUsed":"44380","confirmations":"3154822"},{"blockNumber":"11848022","timeStamp":"1613215583","hash":"0x9d7139aa818355eb9238557e9f2c2f94c1b5a295909c37f6099654cdcac833fb","nonce":"44","blockHash":"0xa076e2dceca963e71b7b9ce8b6f80b9bff10eadeccd490a56a2ba991241434a8","transactionIndex":"164","from":"0x5c27f44d6ec7a7a97a9690592dc59d9222c30f47","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66570","gasPrice":"218000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3aeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11340134","gasUsed":"44380","confirmations":"3158146"},{"blockNumber":"11836990","timeStamp":"1613069455","hash":"0x7c28295f19bf679dec20f6d53951803b0959920e0fa39973ff0c71b667908e20","nonce":"96","blockHash":"0x853e8617f63fe5eb93040b3f26d80febc4bf148f145bce59832767ff40bdfc4e","transactionIndex":"29","from":"0x04934f28cbbe99d88bd38341aea841519160c4b8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"165000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2166277","gasUsed":"44380","confirmations":"3169178"},{"blockNumber":"11834390","timeStamp":"1613034889","hash":"0x600e2ca978a6250bb84756e4c0a56dc3ec2fe8932bf309435d9ac11bd17aadd4","nonce":"776","blockHash":"0x9d27aa12234abbae45076f8fcc27168e536ccc97f5502f1d48c931530de2818d","transactionIndex":"201","from":"0x0b4c1b15103a06ec41e9ef9572c5660ff22f926d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"101000001459","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12049334","gasUsed":"44380","confirmations":"3171778"},{"blockNumber":"11831210","timeStamp":"1612992534","hash":"0x6500f89de168475ab9511c2699051bd94d88b2088637a8c250ad47e03ba4edcc","nonce":"276","blockHash":"0x85cf4f1202ddd6061d4269cd01919de12fdf7cade7dd94a846516869414a3227","transactionIndex":"106","from":"0x5db10e4c89a5224aa74e928dcbe80a0b3d9ef292","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"729807","gasPrice":"111100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10852169","gasUsed":"614364","confirmations":"3174958"},{"blockNumber":"11818863","timeStamp":"1612828334","hash":"0x8706f65cbc08aa11ab9e9e8870c446c94a4317aae2ff60dc3b39894ef584ac13","nonce":"49","blockHash":"0x514222f284fdf41f35b41d2a939f2542bf8833d8ce2262098f75de78972d9c3a","transactionIndex":"139","from":"0x58821f50136b547655bb8ffe1f7ae1944fcb132d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"674357","gasPrice":"143000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7803802","gasUsed":"579346","confirmations":"3187305"},{"blockNumber":"11808861","timeStamp":"1612695614","hash":"0xc3538bcf598c9fd3f28e54d3db63fdb3847b2ddbedc4daad1699f4fc93674745","nonce":"60","blockHash":"0xef4d4c1c9203943d94bce7a4c8ee9ee32f5ca3422cd404fc25878ed325f8c467","transactionIndex":"140","from":"0xcfe15888090f13cdd99f0598b36f310bf6162ff5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"97000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8360808","gasUsed":"44380","confirmations":"3197307"},{"blockNumber":"11807482","timeStamp":"1612676685","hash":"0xeee138bb5ed9db75addcd191202126bc60cff0a43d03dfff3f13f47ffafdfa8c","nonce":"120","blockHash":"0x0e7382023fd43f39d05d6a221e042c4ef0c79316802e0e6f21923c643eecf4e8","transactionIndex":"200","from":"0x0c2ac9ed47868d6ab9710df9dd55a70afe4eb838","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"93989281792","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11581222","gasUsed":"44380","confirmations":"3198686"},{"blockNumber":"11805738","timeStamp":"1612654232","hash":"0xa8744b8be95d821a8f586695f6758e4198a0841cdd671b021909deddcc15ad23","nonce":"256","blockHash":"0xbd9adf93deb68a7eed471562231e4944712b3acee8352c2c042dbb5aa0b3fc59","transactionIndex":"102","from":"0xe1018480b5cf40d5de7756a70aabc912a302490a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"765494","gasPrice":"130000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10813809","gasUsed":"647551","confirmations":"3200430"},{"blockNumber":"11805224","timeStamp":"1612647758","hash":"0x4145246ab5097bb9ec6f4613a392575d61f5d1f6ffee92c4729bffcf61c312ab","nonce":"45","blockHash":"0xcb0e11e6b16e67ceb4030207497f08a767054ba7062a6d06a6c4112066f07217","transactionIndex":"127","from":"0xc8119b5c0f6fb063dcba1450c9eb9fee3c121489","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"767318","gasPrice":"128700000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8116271","gasUsed":"650249","confirmations":"3200944"},{"blockNumber":"11803565","timeStamp":"1612625177","hash":"0x9bbd28b0ca1a5642a740a5296b5ebb31757302ffc466b8d83af1df521d118fdf","nonce":"553","blockHash":"0x2cc57f72b34928fd8270bee7f5a8e8e283e6d36674626c48d61259638057ba0e","transactionIndex":"111","from":"0x13e1e72a57e58b710f60d801268c572e4283b551","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"116000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11251094","gasUsed":"44380","confirmations":"3202603"},{"blockNumber":"11793402","timeStamp":"1612489859","hash":"0x3191771f8afbe07114c4f907479c83e490e35fa50eba1af6d20135d6ea7fa8b2","nonce":"33","blockHash":"0x32ba17c83c4f8d8f483b91186257f1211532084658a58cc5bfc1dd4ffec73eca","transactionIndex":"152","from":"0xfd0069bfee8017a9056987bfee2a1fed4b267b5a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"125000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9503380","gasUsed":"44380","confirmations":"3212766"},{"blockNumber":"11787117","timeStamp":"1612406421","hash":"0x216ff3abd132f00f017e6fe417bff590a84e130d49a59d0f7b4e24b08fca6dac","nonce":"241","blockHash":"0x58cd3bb468dfd97af34c5f49c04ee2110834d8eadb00be9d4e42b35ef07de37b","transactionIndex":"40","from":"0x52b1004ec7c725998d9ad119ad9ed9c6d34343fb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"806735","gasPrice":"149000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3287877","gasUsed":"685342","confirmations":"3219051"},{"blockNumber":"11782314","timeStamp":"1612342256","hash":"0x384cc982ed42d7ffcac99ea8bbe39d3ab3def59b8466ec57ade5839aab92054f","nonce":"1324","blockHash":"0xa50535e48c8df9c9beaf3f4457d12621d96a5d74d2f9688b9e34dda1570b2222","transactionIndex":"115","from":"0xfc377aed5d0a379fcab2ddae735a7ea5369df8b2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900000","gasPrice":"112000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8566967","gasUsed":"765877","confirmations":"3223854"},{"blockNumber":"11781607","timeStamp":"1612332798","hash":"0xc5fc4a8fa6b33474935bb81a63b2317a6bead1483bbe9ab470108b6f6983af7b","nonce":"292","blockHash":"0x8d8c8c781461995b27ce545bdca8ab3e950611b916d93c4620095953d77c5386","transactionIndex":"117","from":"0xfcda475be963071ac315b0b44648b94322355d3f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"824479","gasPrice":"122000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6929994","gasUsed":"702274","confirmations":"3224561"},{"blockNumber":"11780485","timeStamp":"1612318214","hash":"0x6a29b1ab0cc0dcdceb6063d5c18a76a78e385fe3b6039208971059e34fb3df29","nonce":"25","blockHash":"0xd626f84434eaee73f0ecc2753262710f528a1a2dc5944ea0ed72e94083e194a1","transactionIndex":"148","from":"0xf5f4bbe86f173453a694762fa4bb82bf8b933945","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"280899","gasPrice":"145000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11306182","gasUsed":"220065","confirmations":"3225683"},{"blockNumber":"11778050","timeStamp":"1612285412","hash":"0x021ecdeefdee007ac206680ab714ac8357c344b986d516a6d2292d546a55392d","nonce":"4267","blockHash":"0x64be45230df6f65c977108b2011ce778286cae7cba4c14aaef2cfdb518d0bc2c","transactionIndex":"178","from":"0xa25a9b7c73158b3b34215925796ce6aa8100c13a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1256766","gasPrice":"201000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8237090","gasUsed":"1095671","confirmations":"3228118"},{"blockNumber":"11764117","timeStamp":"1612100313","hash":"0x57c502fed564946e646f0aa1d23caac32ca1fea236571beb0ef1c08b4935fe66","nonce":"7","blockHash":"0x5166ce4705d47fd9d3cae5bf5aa011a0d4bbe317a0db761cde4e58cf70c0f752","transactionIndex":"153","from":"0x78c526a3a46fcb55e29732f43a6a4d2216e1b7d8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688554","gasPrice":"91000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9618170","gasUsed":"577226","confirmations":"3242051"},{"blockNumber":"11763698","timeStamp":"1612094712","hash":"0x8293a0f204433dac40e06c392203c8f987f02ed467bdab633650890f2893cfde","nonce":"434","blockHash":"0xd3bb7d8344a648cbec2295c524fe6acd42bd4e2c84b2943124df0bfacc73ff35","transactionIndex":"140","from":"0x33f20da6f9af99e746c03c29ecaf75c1cf521bd7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"27698","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8011938","gasUsed":"25180","confirmations":"3242470"},{"blockNumber":"11763678","timeStamp":"1612094436","hash":"0x2d1b638085aef3d411392d1f6b3fb7000169e3ddda54162f8e13b7b6432263e2","nonce":"431","blockHash":"0xc3cdb844956a829702c18512ec780ec78e51353cee3597f98e6f061ba0527a85","transactionIndex":"75","from":"0x33f20da6f9af99e746c03c29ecaf75c1cf521bd7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"96000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3242424","gasUsed":"44380","confirmations":"3242490"},{"blockNumber":"11762946","timeStamp":"1612085205","hash":"0xdf7f0cc29b378d236454fc246e72783c46698b0938bdabb6ea9d933b077b3766","nonce":"114","blockHash":"0x31d491788f91103d1a7a8611bfa66efb00d5628a4a657df9ba599d164bc66002","transactionIndex":"14","from":"0x5fa6e0e05800093f90d371086aaad3cbba362c2a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"690377","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2204785","gasUsed":"579560","confirmations":"3243222"},{"blockNumber":"11747918","timeStamp":"1611884818","hash":"0x4d8ed3b4e4494b0e0758e46a06c7878d309b5f836524f83318a7f018c7ab092e","nonce":"919","blockHash":"0x79091275fc6490b5992ef5fe8b94ef5496f691c41811a09271d13ada5e64ef53","transactionIndex":"139","from":"0xbfb3c2cf90b17cabf40e73384e1fea5d64d83644","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"85000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11051003","gasUsed":"44380","confirmations":"3258250"},{"blockNumber":"11746697","timeStamp":"1611868327","hash":"0xe7e836e7b841c856c78adf4e1761b4348fd851281b1fe8234c4aafd60c263c0d","nonce":"372","blockHash":"0xf7aa303534de72de8136220a6c9a28335c54666d94034de86ab1f30b80745df6","transactionIndex":"150","from":"0x674f91a20834001f4fadc1a9eb8b4ac23a7ad568","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"60454900000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6212837","gasUsed":"44380","confirmations":"3259471"},{"blockNumber":"11745402","timeStamp":"1611851450","hash":"0x3dc3c3d5478ee22f3f3b1de35e7ce39d2020b8a8a976ab4fe17dbb49940fc784","nonce":"337","blockHash":"0x146dd90b7d7a0c096f8e467687d245f5f2f0c98f8027ad187d6dbffb54a2cb88","transactionIndex":"176","from":"0x98428fefe7ecc5d1b400dc05cbf2d515e0dc206a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"70400000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9064599","gasUsed":"44380","confirmations":"3260766"},{"blockNumber":"11744359","timeStamp":"1611837837","hash":"0x47cb60e85d20faa3187ceee3ff98bca0f6aa6e542d06b597e4efa5948991989d","nonce":"181","blockHash":"0xf94dcc362464d0ffe1b9dbf5b0c462dc02785500ffb6db5e7b85976ed127f45d","transactionIndex":"232","from":"0x41a792401694fc00467207cfeb9b5f09aa2b834a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"75500000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12239434","gasUsed":"44380","confirmations":"3261809"},{"blockNumber":"11744164","timeStamp":"1611835319","hash":"0x2c785dab3139c0058a7e7d3ab2d0e4d34a96e17dd021e3183fb6fa6260662a0c","nonce":"371","blockHash":"0x275d5daab2528aeae797662ba5ad30709e38df795ca3e3cfd7cabe1db67f0d40","transactionIndex":"110","from":"0xe1fb8745da4fdbe97afe825ade096383a6b2171a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"101200000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7692097","gasUsed":"44380","confirmations":"3262004"},{"blockNumber":"11741611","timeStamp":"1611800457","hash":"0xf03cd96fc08050dd3023eab7b44fcdfdcbbc978a586fc347d835baaf18720292","nonce":"80","blockHash":"0xd9a7c25e6f5b5e501c332f764bd5298edc6537e97d647d4ac13be1f03be2cf8d","transactionIndex":"41","from":"0x181fb2ce9405a8d19e94c990c3272605399e7d00","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"52500000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3594564","gasUsed":"44380","confirmations":"3264557"},{"blockNumber":"11740799","timeStamp":"1611789908","hash":"0xd037efdf70745aebba785aa28c846c0c30b06dda003d135c2d8f26c7d237af9e","nonce":"253","blockHash":"0x10dee2a9b561d5b045351f95fb752807feb11a70ccefd8d67af4f228ab1876d3","transactionIndex":"131","from":"0x599aa2feaeec1c4caa33da6b7fbd0e6578953c96","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"66000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000bcc4371cc40592794bf5b727c17cf7de37ac180affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12303688","gasUsed":"44380","confirmations":"3265369"},{"blockNumber":"11740559","timeStamp":"1611786548","hash":"0xe78dcbf0be41d9c3f279642213883f8fcd229346d46786d20c8c90ee14a8fa86","nonce":"10","blockHash":"0x1a5fc4bca117130fd58799463ab843565c8651bf7c9f0b0959a5516d2edad83d","transactionIndex":"94","from":"0x1d4ac7bfd99ab86cad0c455564e9e74f36f112e1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"702618","gasPrice":"55877500000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8788086","gasUsed":"590442","confirmations":"3265609"},{"blockNumber":"11733244","timeStamp":"1611689166","hash":"0x54935776ab1a96990a10f2df7dba88afa0bdd691c349333cad616815355edbe1","nonce":"27","blockHash":"0x3fd1ccc9bd94855da02118ddaae6d121bb99153d23f17834b63d394b2d0d4313","transactionIndex":"216","from":"0x607e302774a0683dc3459a3dfe6a9664dfe834b4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"802178","gasPrice":"87000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12230086","gasUsed":"682045","confirmations":"3272924"},{"blockNumber":"11717801","timeStamp":"1611484489","hash":"0xd63f2a95232210b01f7620a12627aefea7c97e6e703de665ba3f8d293f9bc976","nonce":"114","blockHash":"0x87a87babc29725a76db9f16626c3a90f65870172c89f39e870eb0f5596a61509","transactionIndex":"69","from":"0xf3fabe8cbed50015e778ab21f6c90902c2107d16","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"905737","gasPrice":"51500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8117166","gasUsed":"773786","confirmations":"3288367"},{"blockNumber":"11715157","timeStamp":"1611448859","hash":"0xfe78f4f3ece842a19604be2607fbc8a3ab3379d8cd6c0164d3e17eb7cfda56d0","nonce":"292","blockHash":"0xb679971571e6944ef84148bfd8d1c5f488947aeb4c5842729e85ac46862903cf","transactionIndex":"47","from":"0x9ce6e6b60c894d1df9bc3d9d6cc969b79fb176b7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686731","gasPrice":"61600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7520911","gasUsed":"576338","confirmations":"3291011"},{"blockNumber":"11713569","timeStamp":"1611428153","hash":"0xd40fff7abc051970807edf4332a34e22b83632615ef5d55beff00c985148c333","nonce":"1617","blockHash":"0x3ca30c3444a5958871943dc3a9079eaafbf638afc12a70b7aae2cc397221349a","transactionIndex":"106","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1005426","gasPrice":"73000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8111754","gasUsed":"882505","confirmations":"3292599"},{"blockNumber":"11709538","timeStamp":"1611374954","hash":"0x141bd09f6d1e6a4690af713d018db93b7fd058cf085f2007d2e606db0cdb4669","nonce":"267","blockHash":"0xe63541e1b42d1b29f62c39a24b252c69ab0bf0ff5415da2021b93f1ba1bd67f1","transactionIndex":"195","from":"0xa8defb2e1fe760f02f39e3d07a2ba0605fd8eb28","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"55000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000437f69a38ced1a3718315175a5edf3365b90f11fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11908937","gasUsed":"44380","confirmations":"3296630"},{"blockNumber":"11708261","timeStamp":"1611357783","hash":"0xfb729bacfd59c29b483d11fa4c25b488799eca6a1cdfc35ffdaa231ec0fe42b6","nonce":"152","blockHash":"0x7049856bc3cb4923666b485da96c98710022ec32c84cca57252122f322bf9646","transactionIndex":"127","from":"0x738671901affbc417fa370cf936e461bb5315bd0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685916","gasPrice":"82000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11829433","gasUsed":"576712","confirmations":"3297907"},{"blockNumber":"11707710","timeStamp":"1611350651","hash":"0xfc5be11658e6061a7b759d36c36a6a73a2261ca422dc3d0f13e9587ce75031f3","nonce":"1587","blockHash":"0xce9e987ff5590d15703a24d238c6739b95dc705bc5bd7e89ad9d3a0dd135c122","transactionIndex":"47","from":"0x548e03380244c85ddee22d8bb8dbbd82fa4531c7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"766893","gasPrice":"52000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4629005","gasUsed":"648429","confirmations":"3298458"},{"blockNumber":"11695194","timeStamp":"1611183317","hash":"0xbfacc79bbab30639f280047f8814c740e78661f608271305403974978fbf38fa","nonce":"535","blockHash":"0xb615db144d71851736869970cc34e73fd415f3df0bdca07fefa0183b5af15433","transactionIndex":"33","from":"0x768f2a7ccdfde9ebdfd5cea8b635dd590cb3a3f1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"803260","gasPrice":"48940000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10051305","gasUsed":"612598","confirmations":"3310974"},{"blockNumber":"11694129","timeStamp":"1611168956","hash":"0xe1906c1f83490c839404b893fc74a3f689161931ef38a1e693a92b461e475916","nonce":"205","blockHash":"0x174411779b7d8f7b5ee29d967374c48dd4f3f58be8e9bdd413ef2cce63eb7873","transactionIndex":"79","from":"0x3c092645d4beeacb8fceb76ef866401194cd4a01","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"816668","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7567294","gasUsed":"693331","confirmations":"3312039"},{"blockNumber":"11692901","timeStamp":"1611153708","hash":"0x5810b12c3278a716183466cc5195fda85481b793257961f90d80c83985d44608","nonce":"289","blockHash":"0x429748cd86e36b15169631b93277bf73b5219a1d918da8ed0cf79a1596ce2869","transactionIndex":"156","from":"0xc5327054b7ac55907b593a95fad73a5092ababd8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1025755","gasPrice":"51000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10903884","gasUsed":"882837","confirmations":"3313267"},{"blockNumber":"11691207","timeStamp":"1611131521","hash":"0xb5e9b643cebf785c14d3438bff58f71438e2f9a3454cbec06589ae780ebad068","nonce":"429","blockHash":"0x0f1a58dc0bdc31892a7bc8090eaed42a2734df5f627facc06ff142625f09c59e","transactionIndex":"149","from":"0x3ef60ae2ace351dc6058b5b21fb566089d118137","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"57000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10525804","gasUsed":"44380","confirmations":"3314961"},{"blockNumber":"11690911","timeStamp":"1611127692","hash":"0xc59bd2c43f52bd02577b6b86105cd218f6d67abe1d449c72d779a37e0233f967","nonce":"45","blockHash":"0xedb068be2fca6f1059d2a1ad2531701e16e3429cb526ae786ad9bb1f8218dde1","transactionIndex":"152","from":"0x58821f50136b547655bb8ffe1f7ae1944fcb132d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"719615","gasPrice":"47000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000001338ae1ffa63d35aa8a","contractAddress":"","cumulativeGasUsed":"10978845","gasUsed":"651969","confirmations":"3315257"},{"blockNumber":"11690620","timeStamp":"1611123752","hash":"0x0436f5bfb962b6b7f2ed7e39584375c8965fe9f0862dfc79daa502235f9263a9","nonce":"4","blockHash":"0x19c20cf99110f0b8d2be88679305381582e8780cefcc969558f6011bc847f726","transactionIndex":"48","from":"0x762345c039c8e6950215b2fab1d4270db6af6654","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689562","gasPrice":"80000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3422314","gasUsed":"573051","confirmations":"3315548"},{"blockNumber":"11690611","timeStamp":"1611123639","hash":"0x50ece9e7cabbde878c7d84510087c20c35c62518b0594e92277af65dadef07f6","nonce":"73","blockHash":"0x1a84375a498b3b56f69029d5c474530a3e26d0af2c44cde5738836e876d0db45","transactionIndex":"71","from":"0xc20786b6f77709d59881bb742e7def8ae923d01f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685247","gasPrice":"38000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10565414","gasUsed":"575096","confirmations":"3315557"},{"blockNumber":"11690557","timeStamp":"1611122976","hash":"0xa9efb28e7e2aa445f491f0f6e65dd463e5d3bdc16b67d76c319c514b36d3e2bf","nonce":"350","blockHash":"0xd68b745cb2fa97d2f854dcb926cb855cc0732c3af95d8580c25c15d0d140fda5","transactionIndex":"34","from":"0x674f91a20834001f4fadc1a9eb8b4ac23a7ad568","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"971064","gasPrice":"48400000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000156b96a2a2aaee466514","contractAddress":"","cumulativeGasUsed":"4089532","gasUsed":"878635","confirmations":"3315611"},{"blockNumber":"11690189","timeStamp":"1611118148","hash":"0xa745f412598c05d95465b1dac57ae662c475a5d5689bcb85dfb14ffc11f43e97","nonce":"337","blockHash":"0xbe2392b7eb4ebc132493ef8203b80e987746eeeb748ebd18044e9e0b9972a886","transactionIndex":"215","from":"0x3b6c244a3f728a217adc64fc18141fafedeac24a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"725079","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11550024","gasUsed":"609246","confirmations":"3315979"},{"blockNumber":"11690170","timeStamp":"1611117908","hash":"0x5023a51ce6439478541a1d5ab7e9d80b09f00a0d33ac4c41ccd8275c1c35abd7","nonce":"363","blockHash":"0x0a565e4fbe19d144cdf67d257c432c8b00ccfa992cbe2aa598110e09fe62b970","transactionIndex":"217","from":"0x02bd4446d6cd972a2000ba6b7960b5e87e88266f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"731051","gasPrice":"54439000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000034e44ec5feaf55b040","contractAddress":"","cumulativeGasUsed":"11065554","gasUsed":"662577","confirmations":"3315998"},{"blockNumber":"11689623","timeStamp":"1611110310","hash":"0x3aa9312ccd68ca71144a9afca5e9a345e4781bfe513450d19435ee1e66e928bc","nonce":"708","blockHash":"0xb204ae1c2f6af4c6e863d4236cb94fc30b6cb07c6eb20c818f12c9ff132e207a","transactionIndex":"192","from":"0x79852a2b8386587daad501d90674996dd19d88c9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"941894","gasPrice":"45000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11401015","gasUsed":"810421","confirmations":"3316545"},{"blockNumber":"11689252","timeStamp":"1611105348","hash":"0xd0fa7fc3eb4be47ffe10bb5526ac05f5a208c2c45726c13443a1131a75fe0afb","nonce":"1355","blockHash":"0xd0b2cf0e52efb3e135546dfc8404a8be494364af741cb2c7003b9420128d8bde","transactionIndex":"126","from":"0x478fa4c971a077038b4fc5c172c3af5552224ccc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"825047","gasPrice":"41000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8852624","gasUsed":"702831","confirmations":"3316916"},{"blockNumber":"11689000","timeStamp":"1611102087","hash":"0xc6502d4468bb191ee78d8fee491318c39d2c23dc9358aad7db46aa24bebf76bc","nonce":"9","blockHash":"0x1cfa2dcfc8e9355f463f01aef38b685b1e6197b4b22e3677dede323526de2915","transactionIndex":"148","from":"0xde67194cccfa42f65d133a604f1212ce4c08f031","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9120348","gasUsed":"44380","confirmations":"3317168"},{"blockNumber":"11688433","timeStamp":"1611094715","hash":"0xc35a0184c62817ca4fdeaa031f2a5d40981eed50e81531125dbd9da2952e0453","nonce":"856","blockHash":"0xd758ea9095eaf915f69c5e2cc904e3ddcbe025a13b2fd2ea9d645787e2e006d3","transactionIndex":"109","from":"0xb0eb9addf14bc5d5b094d4bd759befd28ecb11dc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"70400000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6333400","gasUsed":"44380","confirmations":"3317735"},{"blockNumber":"11688368","timeStamp":"1611093878","hash":"0x0f3b4b5a10fbe54fdead07f829d55f75da4c1a5002fa00e0f70a0b4ce21b9d02","nonce":"166","blockHash":"0x504db5350ef4c6d45a8ed614464a252736d8c35e3bbc0aeb326581639d14ccde","transactionIndex":"139","from":"0x629ff638a1c253bbc506ae36295df894234a47de","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"60000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11702585","gasUsed":"44380","confirmations":"3317800"},{"blockNumber":"11688192","timeStamp":"1611091618","hash":"0x2634945c4a3919c394d2f1777034c87ceeb6b21d21b2c3281e08a1114cd660a1","nonce":"1914","blockHash":"0x7302a9cf3bc5d45f1a4acb09f3b43ae10cfc69d4ca0525eb2444bf678c2b9049","transactionIndex":"67","from":"0x74375faba79502580c2906144ac99117a4a3f3b5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"655594","gasPrice":"62000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000022ecc3c99e016900000","contractAddress":"","cumulativeGasUsed":"8266602","gasUsed":"595172","confirmations":"3317976"},{"blockNumber":"11687394","timeStamp":"1611081399","hash":"0x6a60472c28369881f3c573b1989f0479d7208acd7bc202bef51c14757b926510","nonce":"112","blockHash":"0xfb1f610b69605f695b422a21ee7ac0686ed23aa0550d51d05f873ebae7d2c3df","transactionIndex":"42","from":"0xaf659d443802e651df0827d960f8bd5f8755b6ac","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"95000001459","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3424642","gasUsed":"44380","confirmations":"3318774"},{"blockNumber":"11687053","timeStamp":"1611076597","hash":"0x58c66b9b6e0946a514ec874b924c7fc8c7a7fdf55aefc85905426c446910ec61","nonce":"386","blockHash":"0xb447a56dc789b06041189a6a231b225084b98963264d4064ba4764ab1f870cf8","transactionIndex":"18","from":"0xae6dcd07fac9d7cccc98509120c1071048cdd8a1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"953352","gasPrice":"117000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000151f8dedc2dc7ef2b70","contractAddress":"","cumulativeGasUsed":"2168214","gasUsed":"864660","confirmations":"3319115"},{"blockNumber":"11685501","timeStamp":"1611056221","hash":"0xf2edc21a78bd14ecd89eb04453bb0ea03ba219d45b749056095be1e2d5fa302a","nonce":"166","blockHash":"0xb1dba078a9d126af65625bba059cb51e08c99245613c928c16fc34e6d07cee99","transactionIndex":"146","from":"0x41a792401694fc00467207cfeb9b5f09aa2b834a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"74600000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000c4d5b13bad662b2b06b40a1960123690ebfc0f64ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7126845","gasUsed":"44380","confirmations":"3320667"},{"blockNumber":"11685464","timeStamp":"1611055753","hash":"0xd5ed9a7f87224ae53b3f7320080abcbdb55901426de097d67b813fca9e26407d","nonce":"211","blockHash":"0x045809d4aa8d3c8ee71c31eb95413c43f1f15331f01c66706b92dc14169c3629","transactionIndex":"114","from":"0xfbaccdd8867fc5d6c3b4afc3b7edf1c72313ed98","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"687155","gasPrice":"72000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7324266","gasUsed":"576338","confirmations":"3320704"},{"blockNumber":"11685245","timeStamp":"1611052836","hash":"0xc7882a0ffc71a35e8fbe9b91cf484e19d438caff82094b96cede3feb662c973d","nonce":"208","blockHash":"0xa83301119e89b180c1908cbc8a7c2f8eaa95f0f71be1d12c674bf5a4627622fb","transactionIndex":"22","from":"0xfbaccdd8867fc5d6c3b4afc3b7edf1c72313ed98","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"729969","gasPrice":"100000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000002a57794e379a31a40000","contractAddress":"","cumulativeGasUsed":"2025876","gasUsed":"659552","confirmations":"3320923"},{"blockNumber":"11683895","timeStamp":"1611034873","hash":"0xb8bfaac7566d845ea4a18d021aa264d872a3fa29e81b7671d9fe9e79c6bb3393","nonce":"366","blockHash":"0x12102764a0b38ab2155e34c73293484d66db1ac3e728fc28e3a8e10976650282","transactionIndex":"199","from":"0xdf5e61e7b0ed5e489263a182ce12c1aaf54cc89a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1086289","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9171467","gasUsed":"939203","confirmations":"3322273"},{"blockNumber":"11675848","timeStamp":"1610927760","hash":"0x1a777cfccaa1fd6d900c9854a1c52108c9080f67ee05487fe158a87b679a4a9a","nonce":"2400","blockHash":"0x73abdbf812ec23627b6a86750b2df9a02abdaf519368775043e285e257e7205a","transactionIndex":"83","from":"0x764f2d4a12dc310ba34a359358bfd313b503cfd3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"935465","gasPrice":"47000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10676907","gasUsed":"803639","confirmations":"3330320"},{"blockNumber":"11675558","timeStamp":"1610923980","hash":"0x1b3fafaa332321d46ee9803de33e1cbbdbed3d1c088ad394d9273da831560fe9","nonce":"207","blockHash":"0x954547ad7bb87707f5172754a9d18ddf3fa20577b54762565af290648b8f6265","transactionIndex":"71","from":"0x14219351ee88ad9a0e447370a6bbdac03ca0502e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"670530","gasPrice":"48000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6867570","gasUsed":"560620","confirmations":"3330610"},{"blockNumber":"11675331","timeStamp":"1610921132","hash":"0xffdb3cd8b4bfa12f42eed17f9622cdd324251278b0e5cbab15b92d46dfc95264","nonce":"3363","blockHash":"0x8d80e698f96c70564bd0cdf828d6ae443d341c6cd8e5c387594cb1d58c45137d","transactionIndex":"58","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"895074","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6121405","gasUsed":"767153","confirmations":"3330837"},{"blockNumber":"11673619","timeStamp":"1610898946","hash":"0x303fa677467deec4fbccdafca29fd18d5c0ac6eb1ceba4618c19d59f1ed26f4e","nonce":"3354","blockHash":"0xe4bc3113a7dfc59be87e1697f52547af3d6748d655355f5c0c7fa1b91a4fc560","transactionIndex":"179","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"882450","gasPrice":"58300000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000004c1579a5f034be00000","contractAddress":"","cumulativeGasUsed":"12287984","gasUsed":"799495","confirmations":"3332549"},{"blockNumber":"11671713","timeStamp":"1610872999","hash":"0x00427b5ab5e1d9c4923fa681891db5a64ac4b324265360884c67f6c5d4cc18f6","nonce":"262","blockHash":"0x11b59afd70dfe0c9503d8c285187087e4355696edf2ac61afde7ab3fccc75993","transactionIndex":"18","from":"0x16d6b3955e850c7f2edd20dc1c4fd08660261446","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"670116","gasPrice":"35000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10999059","gasUsed":"560974","confirmations":"3334455"},{"blockNumber":"11670284","timeStamp":"1610854448","hash":"0xd442d6757fd2d22ee7ef1c97ecbcb5a027ca9edcd0ebda90b57d14f1103e9135","nonce":"130","blockHash":"0x030956ff772c163cc08af35956b3db064dc09ae9083bae0319847779d89a4635","transactionIndex":"114","from":"0x8d30e4b4c8d461d99ee3fd67b3f7f0ddaf9d3dd6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"763111","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11615022","gasUsed":"609386","confirmations":"3335884"},{"blockNumber":"11670240","timeStamp":"1610853807","hash":"0x37cafaa5c77347f18c97ba40c7b31b35bfc82f68f07c70c7f27508b4f9a5fbe6","nonce":"125","blockHash":"0x7cbe39ccea0750e71ba442585bdf7d1465dd64442b632308f887394cbaa67d14","transactionIndex":"30","from":"0x8d30e4b4c8d461d99ee3fd67b3f7f0ddaf9d3dd6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"807145","gasPrice":"60000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000001eb4773b6d1318a00000","contractAddress":"","cumulativeGasUsed":"2372838","gasUsed":"731074","confirmations":"3335928"},{"blockNumber":"11669549","timeStamp":"1610844328","hash":"0xb66566d6bd2e42792792a86dd8017355692e383a0aebd70e7612194f8a9dc6e5","nonce":"278","blockHash":"0xbe05647ed1b9e939956ab1afaee180f2f1269946f246968082ab94c0485743da","transactionIndex":"266","from":"0x9ce6e6b60c894d1df9bc3d9d6cc969b79fb176b7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"729270","gasPrice":"81400000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000644d12f0a23bdb74348","contractAddress":"","cumulativeGasUsed":"8884981","gasUsed":"661711","confirmations":"3336619"},{"blockNumber":"11669454","timeStamp":"1610842818","hash":"0x96a20b6b802c77682db7f02c0fcac265ccd2185f3a3393420ba7a3ac248ab70b","nonce":"286","blockHash":"0x3469eb3f9d15742d15fb427ce29fa94b73a97c153122d48329a36d9a8760268e","transactionIndex":"160","from":"0x3d3804161f1e2aa2c837d31d73552d1e8246f167","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1102312","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11872209","gasUsed":"953957","confirmations":"3336714"},{"blockNumber":"11669383","timeStamp":"1610841826","hash":"0x439a7f3e8a96ae633a552ef5c3f1ba3d1a00029815ca4fcdc83dcf9f0af99101","nonce":"200","blockHash":"0xcd478f4b01ed85dee7a2cdef043727fc309bb73c98e0f4cf1a48ceec14a7423f","transactionIndex":"144","from":"0xfbaccdd8867fc5d6c3b4afc3b7edf1c72313ed98","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"732970","gasPrice":"83000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000002a5a058fc295ed000000","contractAddress":"","cumulativeGasUsed":"10298479","gasUsed":"664273","confirmations":"3336785"},{"blockNumber":"11668386","timeStamp":"1610828687","hash":"0x980d821ae3d94c6d5c875ec91cd23deffd098d6af756939c493c9b565c6922dd","nonce":"201","blockHash":"0xa6970e34ca06ec7747135adb023db6da477e0d8e4bec439361edb028469e7992","transactionIndex":"21","from":"0x5b60117255df27fdd885629c0210d9dd975ff975","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"746048","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2728709","gasUsed":"562151","confirmations":"3337782"},{"blockNumber":"11666253","timeStamp":"1610800220","hash":"0x1f557e5a6812bfd32fb09d7ded35ecba73964322e518cbe9005cdd6a77203c39","nonce":"188","blockHash":"0x2a95b3775dccda5f9595486f7446322500b9ead3b4bb988668e5f11e76a75be8","transactionIndex":"70","from":"0x74ee3460f575bce35d681df9501322a82df53739","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1091717","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8387184","gasUsed":"942219","confirmations":"3339915"},{"blockNumber":"11664162","timeStamp":"1610771914","hash":"0x3456111f14580b7343607aab9f367b855d1845a07f1b8436ce6df3f47989c051","nonce":"293","blockHash":"0x618555423b9c89039f2aa8adf4c0ea7468dcd9acad06dbeadbdc8713e375d79b","transactionIndex":"91","from":"0xb1b3119408ec90e276e3ffbff262e6c43e8b90e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"911802","gasPrice":"44000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6864348","gasUsed":"776070","confirmations":"3342006"},{"blockNumber":"11663633","timeStamp":"1610764855","hash":"0x1597ac974e75ed0954798f6973b0d68042750aaefc1d7c91007b7f3ca1790a49","nonce":"335","blockHash":"0x9f86807464ea3defb2a562c6927080f3327d215a9aca08197efabaa97c543563","transactionIndex":"71","from":"0xe14475023852b17530813376e9e9d1ee04c494fb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688152","gasPrice":"37001000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8151353","gasUsed":"577580","confirmations":"3342535"},{"blockNumber":"11662783","timeStamp":"1610754148","hash":"0x2f090f7c8f91c18d854ea681724d2ddc05d65a5c062573fa7381fa6fd3c04ac6","nonce":"504","blockHash":"0xd2fe8c817ae3fd0e4fe9f281ca9e1dae59e5a895264e91faa3b0fb90a3575450","transactionIndex":"127","from":"0x8efd9addd8de6a4e64664d1893dec51f8c3339e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"946111","gasPrice":"54200000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11245943","gasUsed":"827537","confirmations":"3343385"},{"blockNumber":"11661723","timeStamp":"1610740161","hash":"0xb981108686a31207c69a2c860a3cc9627e034a0479f5d17bec38a1f6599cc3b0","nonce":"503","blockHash":"0x031d973d6fecc0c30de1b421149b696c54a06378b7eaf6e7f8f47f7e777a4122","transactionIndex":"137","from":"0x8efd9addd8de6a4e64664d1893dec51f8c3339e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66174","gasPrice":"41000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae00000000000000000000000000000000000000000000057bc947dbd0967f188e","contractAddress":"","cumulativeGasUsed":"9887930","gasUsed":"44116","confirmations":"3344445"},{"blockNumber":"11659798","timeStamp":"1610715063","hash":"0xe5e16bbd7d172e33cdb7b3b7c344e3d2dd87353a93ae6369ba683f99297e9fc1","nonce":"578","blockHash":"0xcf23546959e8e8ebb511b14237b4bf261fcdcafbfbc13c975f043eb6497a76d0","transactionIndex":"156","from":"0x9b091cab92cb6b62eb4b205631e1d987d62ff83b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66570","gasPrice":"86000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3aeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6635190","gasUsed":"44380","confirmations":"3346370"},{"blockNumber":"11658593","timeStamp":"1610699212","hash":"0x768bad3f118634001cb998c67024be417fffd38bd0bd56c6044061393447b5c1","nonce":"198","blockHash":"0x96d9a91eb7e86e43de29107abb0b595d37b9e0d5814082594aa97ec42a15f31e","transactionIndex":"110","from":"0xf6dde84e514d3642fa8b111ead8321dbdf3bcbbe","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"669461","gasPrice":"60000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6286217","gasUsed":"562580","confirmations":"3347575"},{"blockNumber":"11657778","timeStamp":"1610688877","hash":"0x6d25fb70bb0e6b6d4f88def61eb51c9d5ba38c79a6c70b93676f39e6a05f5239","nonce":"76","blockHash":"0xa1f697f0d38bd611424bb0d95abb7722516583872b5bbdafcd47a1e9e47f98dd","transactionIndex":"91","from":"0x28536849054f408949ba3c839c1b89dfb606eedb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"671622","gasPrice":"38200000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7558102","gasUsed":"564111","confirmations":"3348390"},{"blockNumber":"11648172","timeStamp":"1610560729","hash":"0x409ee41e6b9c1a9b421483c93f0767cc06f5fc3200f1f4ae7ee4ff04342e2ea2","nonce":"1847","blockHash":"0xf6fb882aa24ca28b45ab85caedfbceb21134f8c63ec81e2a849158ec7a8bffa4","transactionIndex":"74","from":"0xf365e9da50dad1e91d198c3b9f7f1312eb0190b6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686232","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6149751","gasUsed":"575181","confirmations":"3357996"},{"blockNumber":"11648056","timeStamp":"1610559313","hash":"0x5ee92cc38700f6bd3d87229428a67676837f85484c970f68ca23f86a14c2aaec","nonce":"313","blockHash":"0xe35a2fc9f65caa14259daac61f18214c0b3f5bcedee1d84d775468c7b5c6eb34","transactionIndex":"50","from":"0x9b857c2c8d4c7318e496c96ec282250e532d64a4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1092280","gasPrice":"47300000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3465691","gasUsed":"943327","confirmations":"3358112"},{"blockNumber":"11647395","timeStamp":"1610551021","hash":"0x8d1ee2edc67c6fb1f22a6942deba21aed8de991ccbaf4c2f14482026f74b6cd8","nonce":"1838","blockHash":"0x7b6a116afb20e0b187188e7bc47b907b00c03193f1da1537d99d8c5b163abb15","transactionIndex":"50","from":"0xf365e9da50dad1e91d198c3b9f7f1312eb0190b6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"100000","gasPrice":"70000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3181607","gasUsed":"99242","confirmations":"3358773"},{"blockNumber":"11646210","timeStamp":"1610535612","hash":"0x391d66ce4bc5a0aa9de5fe11f42ed408d9689ac0efba3283ba0d47d7ba4b7796","nonce":"365","blockHash":"0xca31d949c7a0488b07d47d8921975e8d820eb4fe362450060035b76c92a2baf3","transactionIndex":"242","from":"0x334b796cae427cb30578be1708dac9e978705a7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1064047","gasPrice":"45000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11784528","gasUsed":"919407","confirmations":"3359958"},{"blockNumber":"11635745","timeStamp":"1610396097","hash":"0x7f1fc3e4e1fa614f4ff4627468fac0a057808e203d1ef34a034b2c668ea0a769","nonce":"128","blockHash":"0xa417b271337f0d48a85379c5ce9f5092b011a469a79501bcc23b1bb21ac326c7","transactionIndex":"66","from":"0x09aae7650feda7654a31b664afadb0cd5c531821","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"687823","gasPrice":"89000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7525757","gasUsed":"576413","confirmations":"3370423"},{"blockNumber":"11629075","timeStamp":"1610307671","hash":"0xf2ca9173020ad00498ad167e9fa1325b14c2e057a35d14505c2e9875d6828976","nonce":"1775","blockHash":"0x7b58775c121372c1d561b565d2c584e9911cf49d4eaef493917575c532ecd46c","transactionIndex":"145","from":"0xa8d25c5a6f832a9423038c86529391aa7b7f91a0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"726281","gasPrice":"54000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12156883","gasUsed":"612638","confirmations":"3377093"},{"blockNumber":"11627412","timeStamp":"1610285764","hash":"0x72168443d607aa67d0405a267602cda989a4a76ea5d64bf77d12e53715be56e8","nonce":"46","blockHash":"0xa0136ac9dc5bda162280228ffc59e51783cbbb93a278717682a08225a980868a","transactionIndex":"104","from":"0xdd72e6ed9359e920ab36079879d9bb9a48b67f2d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"907082","gasPrice":"54000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6154008","gasUsed":"777317","confirmations":"3378756"},{"blockNumber":"11616499","timeStamp":"1610140991","hash":"0x1878c3fa55bca19caee015dc0d320ad1bf7993151dd567c38706ce4d2696fc72","nonce":"5","blockHash":"0xd7c2519b985414966db3c2fda4dff607094ecaccc2c41b45951731cfa991dca1","transactionIndex":"123","from":"0x41a7408e3c18fbb323abfd78919e249912b09a99","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"702205","gasPrice":"149600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4291515","gasUsed":"591170","confirmations":"3389669"},{"blockNumber":"11613442","timeStamp":"1610100595","hash":"0x95f13535f420b9b28781f6bc68a69868c7b322fcad9fe40891d24b78a6d0d403","nonce":"242","blockHash":"0x83b250102772172452a0baa0d8d47b2aec5d59a086f49baa639844e10611f43a","transactionIndex":"34","from":"0x6af0c2cf70435ac563747a0dd73c91c7dc09af50","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"868743","gasPrice":"105000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1675147","gasUsed":"742872","confirmations":"3392726"},{"blockNumber":"11613117","timeStamp":"1610096546","hash":"0xc005ff26683721e19612a49664c8005899045267b43ea1cec2af2f1ffd79bfc2","nonce":"412","blockHash":"0xe891447ccc916d9992261659632de9d2e9eacfda832e545f026278e699660bc4","transactionIndex":"70","from":"0xd1706f945a85bcae3cf170bb30e848f277fba918","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"858261","gasPrice":"75000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4745274","gasUsed":"732429","confirmations":"3393051"},{"blockNumber":"11613098","timeStamp":"1610096224","hash":"0x10a406ac81c44141629a7d7d03239de7cf484f5303c415a2f5758e66170af144","nonce":"505","blockHash":"0x182b95fba0f287e34c86660107105092b2b58d2699d9e589a2960300abdfa5d6","transactionIndex":"17","from":"0x85ccdcf580caf8a3674d94f3d6c63304674a8e09","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"977027","gasPrice":"101000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1952332","gasUsed":"840295","confirmations":"3393070"},{"blockNumber":"11613031","timeStamp":"1610095463","hash":"0x2274a85ed797805d0599426888fc1cab1f5e16b14f1c5c662135003622a22ac9","nonce":"182","blockHash":"0x897e56e575f4e5a05b45e30007f01e8ef3b669d9f04ab80048b74e7b2e1ad94c","transactionIndex":"116","from":"0xfbaccdd8867fc5d6c3b4afc3b7edf1c72313ed98","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"725873","gasPrice":"73000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000005743d2b8e484b6640000","contractAddress":"","cumulativeGasUsed":"10439124","gasUsed":"656515","confirmations":"3393137"},{"blockNumber":"11612949","timeStamp":"1610094393","hash":"0xb55282f4b8e26188e0fc59c53866e35069bc98255328dc00ab58b0cb0cfc0ad4","nonce":"126","blockHash":"0x60008fed6e610a643c15e7ebf2b4c7afb65a89be7934ef465560dccd134a821f","transactionIndex":"135","from":"0x2d44988f48d651ea649df93ea83fffe2e1f777d2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"687410","gasPrice":"79882000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6271624","gasUsed":"578393","confirmations":"3393219"},{"blockNumber":"11610108","timeStamp":"1610056939","hash":"0x8fb9d5451f2204945d926a42b6c5229b07671aa266b41404451d62621a90f043","nonce":"105","blockHash":"0x799f3690a87957e17d3da5a2ce0eed316d3d5634125e924ce1e1a393f07020e8","transactionIndex":"108","from":"0x32cddc0fd91fd496516f2091ced622095f189451","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"728142","gasPrice":"73000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9445461","gasUsed":"614289","confirmations":"3396060"},{"blockNumber":"11602353","timeStamp":"1609953538","hash":"0x7407ae0b125d2f8f3f9a4d674df06e02faa072764515bae54a6dacedd59aaeba","nonce":"613","blockHash":"0x87c1889e93f43c6c82113078b4ff8e623b235fcf936cdd74931c80b411d66c67","transactionIndex":"200","from":"0xbbedafd5f399be88dac7222ce1caa9dd7cfd7481","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"943808","gasPrice":"101000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10545942","gasUsed":"813002","confirmations":"3403815"},{"blockNumber":"11592397","timeStamp":"1609821955","hash":"0xd82aa6414adc170e96fd47f8e1e16b1ad4c6052adb104d0b22af92bed77b1519","nonce":"547","blockHash":"0xa1f0980520066b49d073110bd7a8936f8776a0f2e5f8898fee911cab0ba05b8a","transactionIndex":"129","from":"0x40f3cbc8f1a5265bfe7ee35d05f79e2828fb6120","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"934563","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8653449","gasUsed":"802176","confirmations":"3413771"},{"blockNumber":"11582177","timeStamp":"1609685636","hash":"0xaab3e27ba50b72fd57900c2c715af4287c62f5ad3bb68b5306c9b31e268f08f1","nonce":"545","blockHash":"0x296bff8fefd123385d837ce64f61200981f0a71c5a0a6cfa5efecb6008794b5c","transactionIndex":"201","from":"0x40f3cbc8f1a5265bfe7ee35d05f79e2828fb6120","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52939","gasPrice":"350000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000000a87c89b5007ff406ab5280abdd80fc495ec238e0000000000000000000000000000000000000000000017a2082ec1dd5f0e4f9a","contractAddress":"","cumulativeGasUsed":"12161171","gasUsed":"44116","confirmations":"3423991"},{"blockNumber":"11569516","timeStamp":"1609517896","hash":"0x05cc8a796f8af28efa5f6e2f78d6150b42aa89f653fefc81fbb909c2ebb3c847","nonce":"109","blockHash":"0x81ea010332a56b4506b02ee862dac260610e5f4b9c5443917a7f359b77533f4d","transactionIndex":"34","from":"0x8bc646d9c87396d81bc42485984b48937dd2280f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"744724","gasPrice":"82000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000002f24f3821569b69e6cb","contractAddress":"","cumulativeGasUsed":"2279575","gasUsed":"670538","confirmations":"3436652"},{"blockNumber":"11563776","timeStamp":"1609442440","hash":"0x2a1f6da186868e1aa828868693f60687150c412f986ab715479b1c830c652c22","nonce":"1255","blockHash":"0x4f8e065384ad32be59e76e8bbfb0dc603f31b16c4b79cc845329a3520120b8a5","transactionIndex":"103","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"990345","gasPrice":"56000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6882697","gasUsed":"860133","confirmations":"3442392"},{"blockNumber":"11560020","timeStamp":"1609392736","hash":"0x416e9a83726beaf34ba7d8ebba55dbe2d7a49d4bc8beef27102491be1e6e1af3","nonce":"850","blockHash":"0x1636585501c0b4e613e1f0351f0ea663a1dd907ef7cea02e7808ec10afe22667","transactionIndex":"101","from":"0x20074277f892404ee413753e01bac21a4f8d98c4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1001849","gasPrice":"55000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10409295","gasUsed":"861023","confirmations":"3446148"},{"blockNumber":"11548000","timeStamp":"1609232681","hash":"0x7033a0b46de692d04b1432483f60a0e4bdf181aef2f6f1d5cb972e00e20e2a27","nonce":"12","blockHash":"0xe1ad28190c3c2af5e6aab62fc01e489842b09dfe0cea8710c98531ffe9139311","transactionIndex":"185","from":"0xd3ebba6e3854e1f0ca0f8a57ed2629f4d4b6b9a6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"786647","gasPrice":"60000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12119211","gasUsed":"667143","confirmations":"3458168"},{"blockNumber":"11537939","timeStamp":"1609100025","hash":"0x3e8fac60130b88f12e0ff95ea1ca86e0b61af20f045e9b59c0a8427677330af7","nonce":"1112","blockHash":"0xb78d57c15b4495e57af1cb5df373145b3aa2b358fa8947d722e430137bec6617","transactionIndex":"91","from":"0x35d04f4f70f39d402ba2c2a93180e700b0a5611c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1012701","gasPrice":"40000001347","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7113539","gasUsed":"868383","confirmations":"3468229"},{"blockNumber":"11531614","timeStamp":"1609016351","hash":"0x58595a16fe03df46e3b889d101a8589b5586b9cc0e70906eb2fa45677d77f898","nonce":"136","blockHash":"0x1f0ca6d4d6fb3ae94ccdbf892f41e67a1d37531526b5b693d9c93f03ee48e3e6","transactionIndex":"225","from":"0x75990d8b4640e21e724b4a4a2e779e1fbd9a9219","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"765154","gasPrice":"54000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12083957","gasUsed":"648354","confirmations":"3474554"},{"blockNumber":"11528793","timeStamp":"1608978693","hash":"0x0168ae9473b228ff6936cb0213e0e9d3dd27cd25a4d48924441569a290f37617","nonce":"1408","blockHash":"0xba3cc080bd6145a3a09d534ce93a14aa2c2cc327ace5decdca5b3e9fe03f26cb","transactionIndex":"80","from":"0xd87ecc6c74f486b044824a222326a96f696fcfa2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"804657","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8288429","gasUsed":"662431","confirmations":"3477375"},{"blockNumber":"11528793","timeStamp":"1608978693","hash":"0x6e58a2849b77415b52972aee32ce7e250636d304d732f201a5b994dba83821ac","nonce":"1355","blockHash":"0xba3cc080bd6145a3a09d534ce93a14aa2c2cc327ace5decdca5b3e9fe03f26cb","transactionIndex":"78","from":"0x0f45156f109e474295913d78036fa213b1745d5a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"883336","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6910705","gasUsed":"755368","confirmations":"3477375"},{"blockNumber":"11526063","timeStamp":"1608943566","hash":"0xc77b5319c740fb735bb763752948721c8736267b0b04310d5932dafd87bce447","nonce":"932","blockHash":"0x3a50547a625cd4c761a8ee6635d0ed51a237e7c858111e2b52f609cd862e13c6","transactionIndex":"82","from":"0xb145ed57fdf5b6f4fc7d8ec9a2f03026a218f000","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1041032","gasPrice":"83000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6942990","gasUsed":"905918","confirmations":"3480105"},{"blockNumber":"11514632","timeStamp":"1608790709","hash":"0x09f8c4a1867bc7439b762a06bdc04bf72d297b6726d364490ff19cccad8fd48e","nonce":"22","blockHash":"0x58cb01afcfaa97ded417c2eb2cf5971aa3ea470b7018c8b6fa6e3ae34e40d962","transactionIndex":"118","from":"0xb0f1f63ccd06d29aa2659f7c58747a8746a29f09","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"724751","gasPrice":"71050000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11805997","gasUsed":"611281","confirmations":"3491536"},{"blockNumber":"11512044","timeStamp":"1608756217","hash":"0x58e793ee1aa0c9c5b1c62446fec86da042543ddc9fd7b0a573a76b57484fde10","nonce":"19","blockHash":"0x1fb09deb1c9ed6c737281d2df92c935f4dd7cf1c5af4924e1b3a0276bd7e6948","transactionIndex":"86","from":"0x5bfe84c738b1d65eb56c6a7acb2b70d112729c90","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689137","gasPrice":"61000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7243716","gasUsed":"578832","confirmations":"3494124"},{"blockNumber":"11498927","timeStamp":"1608582777","hash":"0x2f09e0c0c44f94f6f4b68032104834181270a0a26075d06fe50512b0941c3e81","nonce":"213","blockHash":"0x646d8af1bfcaf6a1954725dc2f34aa1b0ab10835cc9cb6a7e1c9c83fdc989033","transactionIndex":"85","from":"0xc2f833639b69d46422db24000d81ae3ab49f2bb4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689647","gasPrice":"31000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11931896","gasUsed":"578533","confirmations":"3507241"},{"blockNumber":"11485167","timeStamp":"1608400641","hash":"0x938ea13fa1ed9e48d69cbebada3bba918a6b5f3216ef98932de396d333f2d5b1","nonce":"353","blockHash":"0x8ed8d58e936fbe343297fd04edc80657fc6b83ca8e6cc65abec99a95bb28e623","transactionIndex":"97","from":"0x8efd9addd8de6a4e64664d1893dec51f8c3339e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66138","gasPrice":"73000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae000000000000000000000000000000000000000000000fe1c215e8f838e00000","contractAddress":"","cumulativeGasUsed":"9255238","gasUsed":"44092","confirmations":"3521001"},{"blockNumber":"11471634","timeStamp":"1608220591","hash":"0x0b97ce35acb0649df20ef6d40626928e45aeccc9f5c56f5a5d7a6c49873cace2","nonce":"84","blockHash":"0x9a705674396df6aabfc38367d29919b678331638098b60774edbcfd213d318b5","transactionIndex":"168","from":"0x7267168be3688b533b4e815fb8c38389b33e34b5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688067","gasPrice":"96000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11542797","gasUsed":"577141","confirmations":"3534534"},{"blockNumber":"11470106","timeStamp":"1608201220","hash":"0xdec243b7ed1b2edbc1ed38789f83c642bbf18f1853a3380c7a2ead4f8a4ce465","nonce":"103","blockHash":"0xd0bd8d3af8a38b882af65710cc2fb5d928b23da59601c2218f5c5ae999d81342","transactionIndex":"26","from":"0x3d810993ebbce70e5d4147847e1eb5bb8896a397","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"70000","gasPrice":"100000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2243013","gasUsed":"70000","confirmations":"3536062"},{"blockNumber":"11469389","timeStamp":"1608191747","hash":"0x240c3d47585e1b4624fbfe01529efe6e0a7cb8088190a5b8abe74a0cc502d9ab","nonce":"10","blockHash":"0x9d8381652ca2fdb21d73338039739c17ab4c2390aec14cd8c6757882f7a3d0d4","transactionIndex":"169","from":"0x069ff586a1acbc33a7ad3e789be7cd319988ceb1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"673520","gasPrice":"121000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000e8b957d2b60ff40000","contractAddress":"","cumulativeGasUsed":"8732856","gasUsed":"610599","confirmations":"3536779"},{"blockNumber":"11447116","timeStamp":"1607895542","hash":"0x11d57cf37e1056af2fabe2f6e4cde595da705ee7c1f2fc38e48ab1f599fb3375","nonce":"317","blockHash":"0x3d1c9956b8426198c2c76972cb38fb08e2d32818c7b22e43f7bdf4cda15a1163","transactionIndex":"185","from":"0x8efd9addd8de6a4e64664d1893dec51f8c3339e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66138","gasPrice":"48000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae00000000000000000000000000000000000000000000043c33c1937564800000","contractAddress":"","cumulativeGasUsed":"8131798","gasUsed":"44092","confirmations":"3559052"},{"blockNumber":"11446236","timeStamp":"1607883439","hash":"0x6b39a88b117e719eabf64001f3d62b99dfa887857e90860c9ebe027bb7413381","nonce":"1071","blockHash":"0xe3fdc5e24f8874b9e5438da0b7bbb4e4c124cb4bb36bb7d842a0207fc59f15c4","transactionIndex":"88","from":"0x35d04f4f70f39d402ba2c2a93180e700b0a5611c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1020453","gasPrice":"19000001123","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000060d5833dcadedfde5d","contractAddress":"","cumulativeGasUsed":"10339410","gasUsed":"926227","confirmations":"3559932"},{"blockNumber":"11443429","timeStamp":"1607846285","hash":"0x3a595f380b2bb8d125f168e51ee5870baaee0440dab6e01df0c9b45e6e8722fc","nonce":"288","blockHash":"0xb4b330424aea21efd8c2ac0d592f066d736fdabd21dd6bc7ddd30e72ec797502","transactionIndex":"101","from":"0xd90c52c92570bddb19dd174203f173a9134ee8a6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689064","gasPrice":"16000000729","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11894620","gasUsed":"578747","confirmations":"3562739"},{"blockNumber":"11436007","timeStamp":"1607748196","hash":"0x5713b574309b5e9e298a04694c00c445377b724bb7e5c0862ab5113cea2701eb","nonce":"209","blockHash":"0x9a6d55ca740d2376afa517b1346266b828b742f1aa8b408fa73a48879533cb6a","transactionIndex":"135","from":"0x2471a0dc634c8961719e4ad5bdb7e401f5d09bbc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1051656","gasPrice":"20000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10630110","gasUsed":"909572","confirmations":"3570161"},{"blockNumber":"11425933","timeStamp":"1607613655","hash":"0xb0404cbb09d20755e8f572813dc1774b8646f974ee7cbb06f7da2a6c29eaa9dc","nonce":"380","blockHash":"0xf5a5df24da924bc14f7f537bf26c96fc0c85a598897f7e53791e47f29aa03792","transactionIndex":"202","from":"0x2ff2c6b09da200b3af5dee6d1c2656210b203f1d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"832972","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9625281","gasUsed":"708489","confirmations":"3580235"},{"blockNumber":"11422281","timeStamp":"1607564488","hash":"0xeb80a58ff668022b460e79f1900c88e51511fb033d3a5b3590199c6cf25ab0fb","nonce":"1409","blockHash":"0x815620d93f1c7fb173b0ef962b32755f0b0d7931311dc954190ee5907efb06fe","transactionIndex":"51","from":"0x0be0ecc301a1c0175f07a66243cff628c24db852","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"892997","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5924514","gasUsed":"765848","confirmations":"3583887"},{"blockNumber":"11409164","timeStamp":"1607390884","hash":"0x72974a621704c420fd724567324b8c48adbf882420b8caa91e077f8f11102a2f","nonce":"6","blockHash":"0x1462f9363399af72015a42243b5de85d57895b7e6d3e0757e5b3ebf3411ba947","transactionIndex":"55","from":"0x2c6c3860700f53af390031f844b6bd618581bb40","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"37338","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae000000000000000000000000000000000000000000000004902fb6a9a89fc000","contractAddress":"","cumulativeGasUsed":"3824732","gasUsed":"24892","confirmations":"3597004"},{"blockNumber":"11409162","timeStamp":"1607390849","hash":"0x2c2d131d4815f1795bf68bc17b181cd1965823d635c60794b5e15c2e8930024d","nonce":"5","blockHash":"0x3bcdb783f0e658915afa62412d6404a09c44c658c5436a74a6a8985364bf34b9","transactionIndex":"115","from":"0x2c6c3860700f53af390031f844b6bd618581bb40","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"66138","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000111111125434b319222cdbf8c261674adb56f3ae000000000000000000000000000000000000000000000004902fb6a9a89fc000","contractAddress":"","cumulativeGasUsed":"8186136","gasUsed":"44092","confirmations":"3597006"},{"blockNumber":"11408047","timeStamp":"1607376064","hash":"0x97125622e001389ebd0e84f42f95acf600839b7300acc03ed7005ac661faaf18","nonce":"1446","blockHash":"0x9afbebddeb4e14af88fd1c0bd05a8776e08d17517a09d9925b4e7fb883d74a65","transactionIndex":"54","from":"0xaf616daba40f81b75af5373294d4dbe29dd0e0f6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"19000001459","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000058fe1462c0ac55ce1e814e856903b2158a0bc1f8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6834285","gasUsed":"44380","confirmations":"3598121"},{"blockNumber":"11399989","timeStamp":"1607268284","hash":"0xa1d91431964066b417fbf62a98be76914e37ddd8e908a7cfd83f3b8328a270f8","nonce":"210","blockHash":"0x760cfd12d2f33c97dcdc75a47a371f5a1629f95d046c38566066fc98c6c53d92","transactionIndex":"21","from":"0xba2623982db69635ae1e92eeead6a4204d7ae251","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1025583","gasPrice":"22000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2100706","gasUsed":"885467","confirmations":"3606179"},{"blockNumber":"11399974","timeStamp":"1607268059","hash":"0xb76a4f96bd5dc589b241c9ff79eb9e0901d0a0059f25f93d8e081f403a4b54b0","nonce":"73","blockHash":"0xd00fa29b0e0e6fcfbb6123bce277d9d0c4ecb1b8fd3b3e16f294a8583f8f5054","transactionIndex":"110","from":"0x69ed1de1c888f616e62555221846b42297ad32e2","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"240522","gasPrice":"21012995715","isError":"0","txreceipt_status":"1","input":"0xa9059cbb00000000000000000000000007da768fa122c31f36399dea5bb9c12fce0a75a600000000000000000000000000000000000000000000006c6b93f9ab476da7a7","contractAddress":"","cumulativeGasUsed":"8181569","gasUsed":"160348","confirmations":"3606194"},{"blockNumber":"11399402","timeStamp":"1607260554","hash":"0x8e2bfbc27460893789f303ee03b03dbc7c187e47c522c960cb4b2e4273401e2f","nonce":"361","blockHash":"0xe5a1dc5e47070b52212db10e05e32fab35cc8ea3c13bd28ff1c99e901befa972","transactionIndex":"119","from":"0xc1fc5d1a80bb4e8ea0195ff87cc514bbd6bea8e7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"905260","gasPrice":"12000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9615930","gasUsed":"774411","confirmations":"3606766"},{"blockNumber":"11396666","timeStamp":"1607224835","hash":"0xd641fe10ad04cab2ee6ead4d4db9deac738123082348c92b0cd8c3e3b7a342e3","nonce":"2821","blockHash":"0x6229c70fccc49da1ee1e531998cdfc587c09b583f3cf29acc5e70abbbd78379f","transactionIndex":"145","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"902111","gasPrice":"22100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7629004","gasUsed":"771333","confirmations":"3609502"},{"blockNumber":"11394251","timeStamp":"1607192646","hash":"0xbe3eec4c3dee20e953ed457df2199a1e74951e96edd655e440a0d11d17a52d7d","nonce":"2589","blockHash":"0x8d7e46e6d9291027abf38021df60d6ff373471bcdbbbc7222cddfd4ec81ce721","transactionIndex":"146","from":"0x3a3355805181ba5752cb52cebe8c95c0f3ed3d61","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689879","gasPrice":"13330300000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11890686","gasUsed":"576563","confirmations":"3611917"},{"blockNumber":"11392247","timeStamp":"1607166021","hash":"0x677890f31fedda8c16f7bd707fc8f66bc5759ec2805f821e9f234eb40ea38420","nonce":"455","blockHash":"0x95c8519aa6a6cddcb25c747725abdc02d94ff4612af688a2631f6a6bacfec2e0","transactionIndex":"51","from":"0xf663532633d1ab40999a7ab9ac4be4a93b88cfcf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"672936","gasPrice":"15000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4067590","gasUsed":"565278","confirmations":"3613921"},{"blockNumber":"11383442","timeStamp":"1607048928","hash":"0xd3520179222a80b66379d3aba1b497758325444f30b814fc285a5415f08f7006","nonce":"285","blockHash":"0x8686d412d584f18f6d2aea3b6c697e761c72b22c4cefdead1643739d8ee5ed49","transactionIndex":"159","from":"0xebcd0106fc565e8e8229ff3c8fa22ef514bdb4f4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"25000","gasPrice":"33000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75000000000000000000000000000000000000000000000002ff590c0629276bb5","contractAddress":"","cumulativeGasUsed":"11306677","gasUsed":"25000","confirmations":"3622726"},{"blockNumber":"11378155","timeStamp":"1606978826","hash":"0xc40841e0514459e1b8f297643120ce9a9bd21c7f9dc0f3e52fb3112bc867d82a","nonce":"200","blockHash":"0x6c638cdd4dd6eec58b939d25a86640d8fcd6d62978ed1e029bcaf33e6d394d54","transactionIndex":"148","from":"0xf3ab84bddfd1536d421dca2f1eb7198c5cbb6990","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"855119","gasPrice":"21000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11885739","gasUsed":"725630","confirmations":"3628013"},{"blockNumber":"11377138","timeStamp":"1606965527","hash":"0x8b459eff7a36c745ac6f175a8a1cf4332d3fe696811c0957117f25e9c5f73d4a","nonce":"121","blockHash":"0x108117ef3ce8af922ec20fea00b12366dd11851e9b37eab33ab2a46764d9ba56","transactionIndex":"133","from":"0x827e2244086565cf8fd7039eb12eb855f56ef167","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"900554","gasPrice":"22990000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10091863","gasUsed":"772216","confirmations":"3629030"},{"blockNumber":"11375788","timeStamp":"1606947707","hash":"0x2569ab4ed48cbec2012ccd2e62f7a396615aa388621c11e9fcbc50dd7105617b","nonce":"667","blockHash":"0x0d518aede76ab711bb93d47860c067a2b1cd3ad4eae184c62a49dbe38178d00e","transactionIndex":"100","from":"0x73c972781b276893e7cb26a4ba00abd26c829137","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"891231","gasPrice":"33880000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8793763","gasUsed":"762664","confirmations":"3630380"},{"blockNumber":"11369176","timeStamp":"1606858700","hash":"0xf72e9e471a0bd8b3da36c478bbb1c169b2105b252918781d078011f37bd6e646","nonce":"1316","blockHash":"0x310e2bc6c07ed40e898545a3e718bd3b0f3a4c0b7acbb9cc1ac252f0b0e5b5d5","transactionIndex":"286","from":"0x0be0ecc301a1c0175f07a66243cff628c24db852","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"20800000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12360325","gasUsed":"44380","confirmations":"3636992"},{"blockNumber":"11367385","timeStamp":"1606835288","hash":"0x99846580a54750f0c6148435449098a75dae80faf841fb1353d79beb03234400","nonce":"2653","blockHash":"0xfb1ade16100742c23c3ff8fd7a926ee76755f6db3f33cacb2388492020805b21","transactionIndex":"108","from":"0xf748879edbe8cca140940788163d7be4d2a2e46a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"886266","gasPrice":"114000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7946276","gasUsed":"756570","confirmations":"3638783"},{"blockNumber":"11345885","timeStamp":"1606551531","hash":"0xb9842221d78adc7f93fdcc48b88dd96123d5c701d2a93815b259a962fff67c8c","nonce":"650","blockHash":"0x3782a30e8211ca9baf30526179de91e198799db63ffe7552da133b1f0db2a1bb","transactionIndex":"123","from":"0xa381cc8915a1a6715a098236861e32632c6b0cbd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"861916","gasPrice":"14000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6695709","gasUsed":"736633","confirmations":"3660283"},{"blockNumber":"11344052","timeStamp":"1606527355","hash":"0xbd96ea6172d482724fd606412b360322ff57c2390f69f0e109c3d7a52db34f35","nonce":"5186","blockHash":"0xa230347a0af19419c6575e4ec59b1e4e2a087ba08213579aec84457ea76e8346","transactionIndex":"11","from":"0xce2a3294f800b1bf9a907db3c7e377cf9486a456","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1194331","gasPrice":"17000000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000a381cc8915a1a6715a098236861e32632c6b0cbd0000000000000000000000000000000000000000000045af5d45b01ed32c55ae","contractAddress":"","cumulativeGasUsed":"1479277","gasUsed":"796221","confirmations":"3662116"},{"blockNumber":"11343165","timeStamp":"1606515535","hash":"0xbc40320a2b04d5432616843d2338971f0f29d00baaf6cbf90553995a7dbe0891","nonce":"83","blockHash":"0xcc503c1dcbdca049c9129df13b2edbdbe142477d7cfe22e8ca00cc5723353dcd","transactionIndex":"19","from":"0x2f70642a50d74111be3460f97c604359bc245da8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686414","gasPrice":"15010000101","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11984319","gasUsed":"577515","confirmations":"3663003"},{"blockNumber":"11342047","timeStamp":"1606500728","hash":"0xd1f9636c32277b41a91c071d8e74d90268b1049fa7f0e029426b0352a3390f27","nonce":"1153","blockHash":"0x3952a0a154d6c5f95b4c3148fec31ae2c1b5748b4ff82940ae8c07d18194e4d6","transactionIndex":"101","from":"0x1d7a9bfe89a83e89bb70411ad851c49997183659","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"816862","gasPrice":"24100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5987100","gasUsed":"696429","confirmations":"3664121"},{"blockNumber":"11328443","timeStamp":"1606319875","hash":"0xac42bf1a1564493f1a8779ffee1e0ed3f33746f158920c92d395d588ae74eaf5","nonce":"2625","blockHash":"0x68ebc5f62417122c60dfcb1318454dfa11ae177082c99042c16b66570f9c2f4a","transactionIndex":"171","from":"0xf748879edbe8cca140940788163d7be4d2a2e46a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"907661","gasPrice":"68000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000a65eee47bdb9d40000","contractAddress":"","cumulativeGasUsed":"10525900","gasUsed":"823140","confirmations":"3677725"},{"blockNumber":"11323128","timeStamp":"1606248774","hash":"0xaa449ddcd76f0e3ac7e90b2cb6ec2ba4571adf4b87adf85c4d03cbdb8a31f0e2","nonce":"43","blockHash":"0x3a7ea3e04b6b7ea040394958c9484c8a006714d5343abe86c198eabbf61f7b7f","transactionIndex":"108","from":"0xba2623982db69635ae1e92eeead6a4204d7ae251","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1026006","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11798212","gasUsed":"884878","confirmations":"3683040"},{"blockNumber":"11319858","timeStamp":"1606205426","hash":"0xdf4b88d5c43f850dcf1aba7f8aa2f4d20b25edb14a133be40f4789f81a1ce392","nonce":"3694","blockHash":"0x36bbe126ab53967ee759cd48d372abc516b598ccb9b750f6efc2933d9c0d71c0","transactionIndex":"129","from":"0x82e8936b187d83fd6eb2b7dab5b19556e9deff1c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"726732","gasPrice":"62100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9360790","gasUsed":"613765","confirmations":"3686310"},{"blockNumber":"11317585","timeStamp":"1606175709","hash":"0x2da96752f97b21a71b54ca7703c85bff05877647bca8d4a4d5676f99b61d7ade","nonce":"1785","blockHash":"0x8efb952df3c26a0ac38c5e04a1ae117683ed875cc51294b0bbaa1a4c7d5e3e4c","transactionIndex":"70","from":"0xa5c071916bd1dc65e4defa553aee4c2822bf5b30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1090073","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11989031","gasUsed":"943764","confirmations":"3688583"},{"blockNumber":"11317410","timeStamp":"1606173348","hash":"0xaf96dc4bb1909e83fcff137269562b22971ef75aab67381b7b8f9c7717e7a6bc","nonce":"23","blockHash":"0xdd5e691c74e027b173fbf4f4a2c46f0e9ca07322ccf317ca5466cb128ce6d306","transactionIndex":"139","from":"0x58821f50136b547655bb8ffe1f7ae1944fcb132d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"717682","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000054b40b1f852bda00000","contractAddress":"","cumulativeGasUsed":"12025350","gasUsed":"649172","confirmations":"3688758"},{"blockNumber":"11317095","timeStamp":"1606169489","hash":"0xe8c354693774c148a6c8916d04c540c41bde58ca1d933ded967225ba64c6e550","nonce":"353","blockHash":"0x619b10d2a430949d0516fe9b603f1a8658be16755e60b7eeaab55fc0f5beede3","transactionIndex":"119","from":"0x20074277f892404ee413753e01bac21a4f8d98c4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1022320","gasPrice":"45000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9071004","gasUsed":"881380","confirmations":"3689073"},{"blockNumber":"11315381","timeStamp":"1606146465","hash":"0x59e23534848bcee30847adb4c23cab246818bf1198f338cf43d519024d05e317","nonce":"72","blockHash":"0x741752f7e9330fd4c35492d4b7e1028be4903bf8c089c81e20bb13005ab8da0b","transactionIndex":"42","from":"0xea1f881f9394851f9778c4f8f65e79e9ed85e21e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1019890","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5024983","gasUsed":"846071","confirmations":"3690787"},{"blockNumber":"11314486","timeStamp":"1606134342","hash":"0x94c19cef9b46dbe81976593bd224478817a1f55a21b9d3c4b1a1cdb456c87031","nonce":"1587","blockHash":"0x99606c5c4332dafa8bd4a7359e42d75b7f93394375b0330c5364b0d8cbb6f6d5","transactionIndex":"102","from":"0xa25a9b7c73158b3b34215925796ce6aa8100c13a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"981329","gasPrice":"74000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9939178","gasUsed":"810581","confirmations":"3691682"},{"blockNumber":"11306231","timeStamp":"1606024186","hash":"0xc3ec2afaad48deca6a3cc1b6eed9b46a541cdfca58ef14c979efe955ca189950","nonce":"777","blockHash":"0xabf3b7d34ebc065e61d4064ad0d5d60100957c9e7a065e894a54c63adc76e6dc","transactionIndex":"75","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685320","gasPrice":"55000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5780736","gasUsed":"575460","confirmations":"3699937"},{"blockNumber":"11306161","timeStamp":"1606023237","hash":"0xfaa0b74553e351c58d4351e654d1faee153a032cb408af2fe9e8734886c04da8","nonce":"774","blockHash":"0x1a5b68fb306f9a007033fe5215ac19f52686977a56605027f8a073d62dfcf6c0","transactionIndex":"18","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"726896","gasPrice":"65000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000009ad82a88c6d26580000","contractAddress":"","cumulativeGasUsed":"2060886","gasUsed":"659642","confirmations":"3700007"},{"blockNumber":"11306075","timeStamp":"1606022214","hash":"0x44008ef76e04fe023e8eab8c122954bcff70c053fbef99047825fad718442dbb","nonce":"771","blockHash":"0x0a251f5303bfb576d00bb247b9d18ad34c76e6234bf3dd53eca5f28df5852078","transactionIndex":"65","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"722520","gasPrice":"55000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000c0635d48bb9c0018b2c","contractAddress":"","cumulativeGasUsed":"3968099","gasUsed":"657053","confirmations":"3700093"},{"blockNumber":"11306054","timeStamp":"1606021924","hash":"0x7ecf4aaa0fe0bb69d9098e320efa1aa55c5885ea9e6f74cca19b85e7a0267547","nonce":"768","blockHash":"0x9c743ae8cfe192f57255827b979f72d28130184ed963296f829adcbc205c5ac7","transactionIndex":"58","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"733927","gasPrice":"49000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000008ccb242293ca9536f07","contractAddress":"","cumulativeGasUsed":"4306682","gasUsed":"665112","confirmations":"3700114"},{"blockNumber":"11302344","timeStamp":"1605973371","hash":"0x7b0a1bfb19b2c43a24b523b58742f79b0ff1f28e764b0da4e0ae226c7325c034","nonce":"216","blockHash":"0x32f6490410306e050447918a87bd6a28a7f24aeeb1833913fe65488ff94dbd29","transactionIndex":"71","from":"0xcec422f780a44046d4416b31f11308329578ddcb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"670699","gasPrice":"78000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8739509","gasUsed":"562226","confirmations":"3703824"},{"blockNumber":"11296366","timeStamp":"1605893760","hash":"0xd0911dc0fb02f4ac3baac1f88b7865a0157acd520dd20e99b5a53350a0ba5e14","nonce":"257","blockHash":"0xb9a3335e04b9409740f6dddaa823954484501df80506fc2b26920fadfb79a76c","transactionIndex":"122","from":"0x8efd9addd8de6a4e64664d1893dec51f8c3339e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"945065","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000ba58e545582d4600000","contractAddress":"","cumulativeGasUsed":"11650444","gasUsed":"855939","confirmations":"3709802"},{"blockNumber":"11290244","timeStamp":"1605812431","hash":"0x5572983456accf4f488efac731b58620c3b135625a71204c6e5a9f3edf0cf8df","nonce":"98","blockHash":"0xba26089ca70d79d15f43ed6e1bd293a6e136aa51b0b024692b8a95af4d447b99","transactionIndex":"35","from":"0x3ad52bd199a008ff001ccce55fa1d997e46cbd4a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"835897","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4017666","gasUsed":"711540","confirmations":"3715924"},{"blockNumber":"11289093","timeStamp":"1605797502","hash":"0x7f1ea555a28132aa01e4abc96ec8430de0c11de3efde5cd74c4a06e136ebdd03","nonce":"1528","blockHash":"0x06fec64c8596008bdbb9cdcdb3b6e5f265875d6180c26ea6b111fff6503711b2","transactionIndex":"63","from":"0x8a2ff4f48a2aef354d96339946b03fd740293bce","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"944229","gasPrice":"47000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10957644","gasUsed":"811451","confirmations":"3717075"},{"blockNumber":"11285677","timeStamp":"1605752684","hash":"0xb78d2334b2831cd46cf11c5ef5e58f686cb7f56186a1f919c37b84e19e71c1ca","nonce":"320","blockHash":"0x90336650de124869ab927ae422b96e733910302dd5b566d48956ae73e2f751e2","transactionIndex":"163","from":"0x00ba8ccbf0c1ce62834d72706fe3236387f5da35","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"727475","gasPrice":"24831183297","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11680433","gasUsed":"612673","confirmations":"3720491"},{"blockNumber":"11278972","timeStamp":"1605662983","hash":"0x69a318a1d46ef4e0fbc706ab57788776bf1b97ef87209d78bd079a1f26ebaaf9","nonce":"20","blockHash":"0x6436bcfc6d355dec01a824349cd7dd926702d6946113c01debbd2c044fe310ba","transactionIndex":"290","from":"0x301ea7d3ed31e6ee8bb9e5deb74c50f06d238776","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"729799","gasPrice":"79000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000015dba8e55dbfff2532","contractAddress":"","cumulativeGasUsed":"10259330","gasUsed":"661485","confirmations":"3727196"},{"blockNumber":"11272452","timeStamp":"1605576765","hash":"0x63eb00f79ed96aeb954f4cc29a76183b978fb6ca60155103725343a702111b6a","nonce":"201","blockHash":"0xa370941b24622d23b975652d4fba2da7487e97d2f515a7a7c9398389254ecc39","transactionIndex":"134","from":"0x6a5e52ced7a8305f61d5cb908ea91812b0198a0d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"780080","gasPrice":"54450000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7815729","gasUsed":"661889","confirmations":"3733716"},{"blockNumber":"11269240","timeStamp":"1605534648","hash":"0x5c4990e0373b8ac2e296c8f321d8bcbb1217780cd505ccdb0fc2d4217453fc67","nonce":"93","blockHash":"0x3992ad746446357198cbb9e8b4a53ca9bc6d8bfe168a4d65d5ed6a0312ccd31a","transactionIndex":"128","from":"0xace98df8e5a2d40e0a7b9ecf268d458a0baf6083","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"726245","gasPrice":"35200000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6450623","gasUsed":"121315","confirmations":"3736928"},{"blockNumber":"11269240","timeStamp":"1605534648","hash":"0xa4e62bfa9c09bc2af742b175b3e2cab9800191d81d90c8149a7cafbc5001a198","nonce":"92","blockHash":"0x3992ad746446357198cbb9e8b4a53ca9bc6d8bfe168a4d65d5ed6a0312ccd31a","transactionIndex":"127","from":"0xace98df8e5a2d40e0a7b9ecf268d458a0baf6083","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"726245","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6329308","gasUsed":"577226","confirmations":"3736928"},{"blockNumber":"11263314","timeStamp":"1605455613","hash":"0xc4fda789e76f36187d8019d6d0f1a40baba8040cda6abd096e701efea7cc13bb","nonce":"11","blockHash":"0xc2af6759637cb837158e4729d63c2c90de855087cead513ea87f663b640dc7dc","transactionIndex":"63","from":"0x4b3fb27101de828ba9023b3c4a5115aed22bb749","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688226","gasPrice":"37000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4844785","gasUsed":"578383","confirmations":"3742854"},{"blockNumber":"11260852","timeStamp":"1605422775","hash":"0x0a39eae6431fd513040e323719909307830ab6d87ce632405d8701e67e896998","nonce":"2","blockHash":"0xb0422033acb649cf66db20ef6be7abd6a3dceb33d96dd242de6feb6b0be1d549","transactionIndex":"136","from":"0x861b7cb039da909a61fe713546a4aac43b870102","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686232","gasPrice":"18271000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10567697","gasUsed":"575181","confirmations":"3745316"},{"blockNumber":"11260753","timeStamp":"1605421489","hash":"0xb61930f19956b870664bdef3f73e18329af0057002325478401b4c523f899863","nonce":"131","blockHash":"0xa0ba685ea0d5e7847118ec2647a07d7f036fad56b8ebf7db4f83e86d1e43bbfb","transactionIndex":"139","from":"0x6a2235c31311a3efd207d1e79a14d1b9ddca9eca","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"298510","gasPrice":"16610000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8835808","gasUsed":"237678","confirmations":"3745415"},{"blockNumber":"11249466","timeStamp":"1605272050","hash":"0x029877bdf3ffc7dc4aaca2d7fd1e9068fd08be83052d92a388b237c76c8da934","nonce":"423","blockHash":"0x22c85dce8254ae352f698054b54089da8bb9cef33602eda9fc19081031e58956","transactionIndex":"208","from":"0x94f939704e811d9e65fc57d11c836c4809cd116c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"865235","gasPrice":"60000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9343765","gasUsed":"738563","confirmations":"3756702"},{"blockNumber":"11249067","timeStamp":"1605266671","hash":"0x2bd361995dfdf75909f8415c5abe4a0085f3e38432d7ac98189d44ff24505841","nonce":"249","blockHash":"0x600804054bbc773bea2c127679c64d524e47ebc310a1c482fe3c547891b0784d","transactionIndex":"71","from":"0xeab8aa960bed683bb31895d802dd71cf6aee4545","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1337581","gasPrice":"45100000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb0000000000000000000000006a2235c31311a3efd207d1e79a14d1b9ddca9eca000000000000000000000000000000000000000000000086b8462bed759d1954","contractAddress":"","cumulativeGasUsed":"5903649","gasUsed":"892439","confirmations":"3757101"},{"blockNumber":"11232078","timeStamp":"1605041962","hash":"0x792396a4357d4d413e7f435b10e8ef5920f3039783469bd311037539e823b237","nonce":"1936","blockHash":"0xaf4dac2ffe48eaa3d7f8f358d989f06413fde0f620d6cad8ab8191562a0aa12b","transactionIndex":"90","from":"0xfd9a6cd1670fe8eb4012d8abb9cdf25741a6ff04","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48818","gasPrice":"16500000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10032847","gasUsed":"44380","confirmations":"3774090"},{"blockNumber":"11225585","timeStamp":"1604955282","hash":"0x809fa794db5945273091d291e8b5dc9e0075baa70260509400b709ca9859076e","nonce":"113","blockHash":"0xa13b618902cbbe923d0aef1bc51438961f164342a89abbd44ffb39f7f821938a","transactionIndex":"101","from":"0xc8a4621b8ebf65c92e57bc04bbad7be42656b5c4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689793","gasPrice":"17600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9313768","gasUsed":"577301","confirmations":"3780583"},{"blockNumber":"11224333","timeStamp":"1604938820","hash":"0x828c4f9976ee20e52fec55f90981e49c27bafed7d7b1a16202fd8d02e378e55e","nonce":"743","blockHash":"0xa275dbf56615adbcb37e2fcef9ca5b8aa06eed1606734bd7e6487c9666ef3b6c","transactionIndex":"134","from":"0xa65ba816f1f01ef234b8480b81a2ed5b3544c61a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"295435","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11354365","gasUsed":"234626","confirmations":"3781835"},{"blockNumber":"11220124","timeStamp":"1604882507","hash":"0x3f3609fa36fa7d348eda4f615941d1a31f9d431fb4b2642c9aaf235ffb0d6ba5","nonce":"1325","blockHash":"0x647913cc2934ba776b3055ea32abf8ac69019ed7a217f4166603282e1b57ff7f","transactionIndex":"112","from":"0x764f2d4a12dc310ba34a359358bfd313b503cfd3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1131392","gasPrice":"22000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9628876","gasUsed":"981602","confirmations":"3786044"},{"blockNumber":"11216119","timeStamp":"1604830098","hash":"0x69cf64df9360b04b4dca7f27ffbc4e7b71db88250fc28f33e6fe0c0eb707a6d1","nonce":"4668","blockHash":"0x560c2c92cd6480969ee44fe48d183a6d44e29c96033ec2ffe5284c4f5e645e85","transactionIndex":"65","from":"0xce2a3294f800b1bf9a907db3c7e377cf9486a456","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"964231","gasPrice":"17000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000017b7883c06916600000","contractAddress":"","cumulativeGasUsed":"7588686","gasUsed":"874238","confirmations":"3790049"},{"blockNumber":"11211708","timeStamp":"1604770688","hash":"0x0fa726fe328bf2058f43751ed9e939185e7da9068a6c42ee0aec8d4184676849","nonce":"726","blockHash":"0x3b336bbeebc108e03926058d74a73910a3e7520aab67c03bd2fa281b5145408e","transactionIndex":"73","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"764382","gasPrice":"43000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000043c33c1937564800000","contractAddress":"","cumulativeGasUsed":"6321051","gasUsed":"693119","confirmations":"3794460"},{"blockNumber":"11211691","timeStamp":"1604770479","hash":"0xc92c955a6b62815254e702aa96082594e9b96a6834b62d1fa1cb03eb17ee611c","nonce":"723","blockHash":"0x349d637bd2c1be299da8aa08e00833d5c0d06e7e994b200575dd5770a4b39968","transactionIndex":"13","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"774846","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000065a4da25d3016c00000","contractAddress":"","cumulativeGasUsed":"1771051","gasUsed":"702001","confirmations":"3794477"},{"blockNumber":"11211100","timeStamp":"1604762904","hash":"0x4267b2b9e7d899dca253ca0b2cd5009bed15686edda16d87cd554fb317ed53a2","nonce":"719","blockHash":"0x69cf48f23c17d0fd26a8ce6f63b702998b5cc196be5c25d3d117255a14c32edd","transactionIndex":"130","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"773258","gasPrice":"120000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000039992648a23c8a00000","contractAddress":"","cumulativeGasUsed":"10206631","gasUsed":"699827","confirmations":"3795068"},{"blockNumber":"11208832","timeStamp":"1604732567","hash":"0x7630b0b20b15d1878732d0f35f01037a99cda2e08163f81d91ece7b2f0d75c48","nonce":"542","blockHash":"0x61022edea11398abaee79d5f319b8cafec72d2e371fa1c2cf4090cee968d9ba2","transactionIndex":"72","from":"0xba47cac45ac62c5ffce4f83cf8e13013851a6b33","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"957865","gasPrice":"24600000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4558226","gasUsed":"824334","confirmations":"3797336"},{"blockNumber":"11205943","timeStamp":"1604694696","hash":"0x4d7aecc808f8f11ad6bf6f9f4645a13031b76ca60662c940e4ebb68cbd9a1f10","nonce":"701","blockHash":"0x1435817bcea89e1af79ca7c67a8844a25342818eb5de2986c976125415d1c74d","transactionIndex":"127","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"772080","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000007d5c6261d992d200000","contractAddress":"","cumulativeGasUsed":"6958957","gasUsed":"698445","confirmations":"3800225"},{"blockNumber":"11205504","timeStamp":"1604688556","hash":"0x4ac8b4b553791395ae2ade850ed762da1a520cd36b0e6c4b0e53361e38f60cdc","nonce":"44","blockHash":"0xd847f238a061a46bcc03be7a41c5f227aa038c828f648da1cbe8d7fc0e3b198b","transactionIndex":"156","from":"0x0f2181f9fd5c7512058476d1c4cada62f5a13cb5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"688387","gasPrice":"24200000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11727636","gasUsed":"578308","confirmations":"3800664"},{"blockNumber":"11200292","timeStamp":"1604619797","hash":"0x4a3103de71b0c520d72ad41064d961676a1d7fa47d406174ddf3b27b2858610d","nonce":"918","blockHash":"0x7ebcae1931c0fa1270ecf6b9b9b3d1c2e98b5b8f53f0777e9c2520a441217391","transactionIndex":"47","from":"0x1d7a9bfe89a83e89bb70411ad851c49997183659","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"890898","gasPrice":"20300000255","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12332708","gasUsed":"798245","confirmations":"3805876"},{"blockNumber":"11199644","timeStamp":"1604611169","hash":"0x23ed06f4b4b2fb58e0274326f582a1b74e3b70f6300e745105e2ae43c584311d","nonce":"72","blockHash":"0x77853d72ea9a2e37f8918e224ec2997090831b4c9f381d3b05a40793308e2eda","transactionIndex":"15","from":"0x82aac1f3e90e3d01a430ba11be55e75e41345c46","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"728895","gasPrice":"17000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2694816","gasUsed":"614568","confirmations":"3806524"},{"blockNumber":"11195904","timeStamp":"1604562382","hash":"0x57169beb67971368ea638377daa007aa421b220a414ed38d7b18e18407475205","nonce":"615","blockHash":"0x940413f8b65b9b477941e1d1293a3ddad48d3d36b12e661a0f6e74085ebcc0c5","transactionIndex":"316","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"891629","gasPrice":"28000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10492125","gasUsed":"764049","confirmations":"3810264"},{"blockNumber":"11195884","timeStamp":"1604562082","hash":"0x43ddefe0205fab3c680ebad7cf78815d0eeb872d50a8e746930309438b85953e","nonce":"612","blockHash":"0x722da3dc4d0798bfdae567962275ef66848845f0a3ffc2389a0c66afc4dfb0d8","transactionIndex":"60","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"878174","gasPrice":"29000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000a968163f0a57b400000","contractAddress":"","cumulativeGasUsed":"2239139","gasUsed":"793290","confirmations":"3810284"},{"blockNumber":"11195867","timeStamp":"1604561822","hash":"0x7b14003fa8992098379aeffad1385be996a3a25f6df4b8acf4efb00ac81af9a5","nonce":"609","blockHash":"0x04180db85f0de66bbb74d3c52f639651b33321b8f9835d759a216fabe7c6b121","transactionIndex":"240","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"841614","gasPrice":"29000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000a968163f0a57b400000","contractAddress":"","cumulativeGasUsed":"11095327","gasUsed":"762790","confirmations":"3810301"},{"blockNumber":"11194399","timeStamp":"1604542157","hash":"0xd42201db65b1751d33158329a3dcbd9a2c32beb45364aec17d286b02047921c3","nonce":"591","blockHash":"0x333e9a2d83f6084716e866b75afd87769ef6f3f69a5420606035b6b3e199d42b","transactionIndex":"8","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"843305","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000ba2c776cf87f5293e65","contractAddress":"","cumulativeGasUsed":"1277985","gasUsed":"763458","confirmations":"3811769"},{"blockNumber":"11188628","timeStamp":"1604465285","hash":"0x8c4c75924a393cb15ae13309fa829edbbc1b04f0aad14c40cf6a9ee76a953ccf","nonce":"551","blockHash":"0xbcfbce203a8d59df03fc16ef2fe94470e487fae39704a831e9544f02fcc22e5f","transactionIndex":"10","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"830700","gasPrice":"18000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1427293","gasUsed":"707737","confirmations":"3817540"},{"blockNumber":"11188604","timeStamp":"1604465049","hash":"0x99d521afb0c6a3508ecf44b0c3459ddaef0d40a00b565f765054e6ce965cbdd9","nonce":"548","blockHash":"0xfd1001d4c8181036df7e223c0138b9b4eb6968c3980f23bc883657c523c60d27","transactionIndex":"103","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"814499","gasPrice":"18000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000a968163f0a57b400000","contractAddress":"","cumulativeGasUsed":"7559154","gasUsed":"738210","confirmations":"3817564"},{"blockNumber":"11187419","timeStamp":"1604449267","hash":"0xd0ef8a85f5bd81207473cb0541d28ec5b3aaa696bc417abdbe9ddfc258a4473e","nonce":"1231","blockHash":"0xdffabe96bb296a8808e44d319c46d233c6742432767b9e7c82f4a1988ce2c17a","transactionIndex":"80","from":"0x764f2d4a12dc310ba34a359358bfd313b503cfd3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1169334","gasPrice":"26000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5798429","gasUsed":"1015014","confirmations":"3818749"},{"blockNumber":"11185335","timeStamp":"1604422238","hash":"0x916bdb2d568ae0c20169c635cdd598dc1b9b0a69c2fb6398edf8a09ad057a7ef","nonce":"2343","blockHash":"0x1019673fa35eeeea6792fcc34a0739d61eb9f9352f142f9b01a71b4d8e5fcb57","transactionIndex":"97","from":"0xf13e6802b15c7809244eec7e07793777ffe1d0c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"956289","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6344526","gasUsed":"819573","confirmations":"3820833"},{"blockNumber":"11182337","timeStamp":"1604381847","hash":"0x41b557d62b5c89cf4735702d9d595bdc0aa98bf7d48d560c2166797247c2f15f","nonce":"81","blockHash":"0xfda14d576f7b964b1bf7ab54a79c90aae61796676616573acbade206d894a36f","transactionIndex":"115","from":"0x07c02e53f05dae5b9317ad179181e0a2d931f057","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"667466","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7765255","gasUsed":"575106","confirmations":"3823831"},{"blockNumber":"11182173","timeStamp":"1604379551","hash":"0x44d43fe6fd53dfb97a1bb0ca97781641148ca7b145b95d6e344b0b932daec47b","nonce":"20","blockHash":"0xbc34ded1aa09b4f6f2330483435e855cb292dbfee5620cd7424de3857d6e2bf9","transactionIndex":"112","from":"0x065067288e8398d2886f19365fa6f5b9255c3150","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"725248","gasPrice":"50000001561","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11403430","gasUsed":"612448","confirmations":"3823995"},{"blockNumber":"11181824","timeStamp":"1604374787","hash":"0x9bea6a03cd5cbdbaf069c791965a8541af09552cade22e4003b7c9ca843f1116","nonce":"487","blockHash":"0x628e60dd496996f26b6764ec1fb62ad440441053482dce600c7cb365c1e17d88","transactionIndex":"85","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"819629","gasPrice":"43000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7123210","gasUsed":"698612","confirmations":"3824344"},{"blockNumber":"11181806","timeStamp":"1604374589","hash":"0x0c751a301251bb0b8375f65cce5db1ab417d823df51f8c83c08b2354b2782a9b","nonce":"484","blockHash":"0x9f10c0550eee3b74efc023ef98adcdefe4ab4b13653cf198b16e71ba44d8dfae","transactionIndex":"152","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"810812","gasPrice":"43000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000f2bc3d22168ec94a8f4","contractAddress":"","cumulativeGasUsed":"5612246","gasUsed":"732860","confirmations":"3824362"},{"blockNumber":"11155931","timeStamp":"1604031050","hash":"0xf5738281858f042453876c36808e0d34302abd1b5d2d718cecdbc426d5710cf9","nonce":"508","blockHash":"0x6d4b11e500af7dd1322c1789ac84f7928ff0f52dd69ae5a21f1f244df634f0d8","transactionIndex":"118","from":"0xdf9b3fa71f9c560b71b1a983e91ea72d2985e67d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"687144","gasPrice":"31000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8785474","gasUsed":"575620","confirmations":"3850237"},{"blockNumber":"11155720","timeStamp":"1604028230","hash":"0x8bcea417bb789ffdf1e14cb4501f1dd32b77eb7914c08714bbdd793cf5b6b47d","nonce":"83","blockHash":"0xc7a7e4477a3aaba9d912389177e15591bd41cb7bb65f0fa136ad328877bc5ec8","transactionIndex":"33","from":"0x65105784cf6596242aaecec1b0e9e02b4bfa7223","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686826","gasPrice":"65000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3780775","gasUsed":"576413","confirmations":"3850448"},{"blockNumber":"11155374","timeStamp":"1604023739","hash":"0xe8b7b0581b9b47c53a5c895bcc72b1faf437f405d07f54480b2171155f1055d5","nonce":"1509","blockHash":"0x804cffc0c12a5e066a7fdd783d7de992d44719424a00af87a425c62bca5b9ebd","transactionIndex":"141","from":"0xb0fb4f19b4876ea60a7e9c508b8d8647be963cd4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"891356","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10076365","gasUsed":"762400","confirmations":"3850794"},{"blockNumber":"11150135","timeStamp":"1603954317","hash":"0x32cebbd7778e6b8cfad881319028937cd84bccd4f03d1bd1bcb945aaad1b19a5","nonce":"206","blockHash":"0xcb594a72e8b67cf7a6818b0fa49d95f123d6cba1df615de356a549a33ca261cd","transactionIndex":"49","from":"0xac460028455f70659a3fdd750fd7b030b3c6b589","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"728069","gasPrice":"29000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4075682","gasUsed":"614568","confirmations":"3856033"},{"blockNumber":"11146610","timeStamp":"1603907102","hash":"0xb790d2e704ce1b1f96b644d431e1bcf4e42eb77e31daf5293eaea77f36a8e696","nonce":"479","blockHash":"0x26f274316572facea7133311be8a70e4d9e40c09ddee1501da300299e26e7035","transactionIndex":"180","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"813522","gasPrice":"41000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000878678326eac9000000","contractAddress":"","cumulativeGasUsed":"12289407","gasUsed":"735636","confirmations":"3859558"},{"blockNumber":"11129741","timeStamp":"1603684336","hash":"0x8a52b80611fa1cbaae564af1de502a2b14ef3fb3316df46335151aeaa539e6e6","nonce":"410","blockHash":"0x0b23924afd46ef549ed4161e1f616b6a398b2219887473a2b4e162efce99d871","transactionIndex":"71","from":"0x2f74044a9560d62c8e5ac362b1bdc6baf79b7660","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"712868","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7387528","gasUsed":"599357","confirmations":"3876427"},{"blockNumber":"11122739","timeStamp":"1603590742","hash":"0xd448c56ee939d4277800b42c965a2aaa531b5c3ea1413d30dc1902614cbefccf","nonce":"16","blockHash":"0x36784ab3b8cbb3c385697419c8e8ca0d1c624498d0789d656574036cce35b702","transactionIndex":"96","from":"0xb947c60f9eb7822c424a13758dfb051a6383b137","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"742133","gasPrice":"22000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5272793","gasUsed":"642525","confirmations":"3883429"},{"blockNumber":"11121176","timeStamp":"1603570240","hash":"0x2efa638fa1747f8a106973a0534386d4806c5c42a2e914d467a1c548a93df011","nonce":"653","blockHash":"0x0c506a033f92381aa217d7bd9fb3ad8d8357ee5a35104f691b5c777504b1d3be","transactionIndex":"13","from":"0x8d8b1a6d04ae59e505e0f5557d977bb603365f3c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"960232","gasPrice":"19000000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb00000000000000000000000036e0edc88cd1902f189ac922a4401cf4f389a1100000000000000000000000000000000000000000000000547a9b9d77061d79b8","contractAddress":"","cumulativeGasUsed":"7683045","gasUsed":"640155","confirmations":"3884992"},{"blockNumber":"11116558","timeStamp":"1603509689","hash":"0x2ede86560c8cb12a456121ab32d65cb8af52fcbf151ebb713fcf5d740fec99de","nonce":"32","blockHash":"0xb601e972ccc7772396ee82f832ebed70218282c8c719cde092308863f91e3da7","transactionIndex":"52","from":"0x764b3973f0980ecd8c3242a868f223f5d125249c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"712312","gasPrice":"23000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3582564","gasUsed":"600268","confirmations":"3889610"},{"blockNumber":"11114256","timeStamp":"1603478509","hash":"0xa162f95d18bc7c0f36c6fd0a64dd250f0142f4813e34ae9f9865ae6627001d5a","nonce":"211","blockHash":"0x7fdb0996f5b310a5dfac8bd50c983d1b191feabe00d581acbb83114149713f68","transactionIndex":"83","from":"0xc5a61d56ca395fcb87f148532369595e31286d0e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"670742","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9503514","gasUsed":"562916","confirmations":"3891912"},{"blockNumber":"11113779","timeStamp":"1603472251","hash":"0x0ad9399e784de171c023d708f1572a3a11be6dc89852c1a117c29dd265f2fb0a","nonce":"434","blockHash":"0xb877aaee6d6953a2f7fce55461777a6a3e977c5422d87061e3659c7ed7489c4a","transactionIndex":"97","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"710902","gasPrice":"96000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9998251","gasUsed":"598652","confirmations":"3892389"},{"blockNumber":"11113382","timeStamp":"1603467412","hash":"0xfe268b00546cb77e34f22515b5c995edd967e84b5da46d395fe424fbbda808f6","nonce":"420","blockHash":"0xdf5a60ca7c5bc93a84d843dc3a2bbb5b1d720020fbfa14401613a310184ee108","transactionIndex":"83","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"830580","gasPrice":"75000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000005b7ac4553de7ae00000","contractAddress":"","cumulativeGasUsed":"5029633","gasUsed":"752795","confirmations":"3892786"},{"blockNumber":"11113270","timeStamp":"1603465925","hash":"0x33992e08cce3f56c0de4b9ef6a2b6c0ded1226633267d78361f6edacdd874142","nonce":"415","blockHash":"0xd3ab1858e3a926f2afe17b9cec23500b0ab963393b9908cc426bb417a0f00752","transactionIndex":"62","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"833714","gasPrice":"70000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000f668ddbca416c766860","contractAddress":"","cumulativeGasUsed":"5488947","gasUsed":"754784","confirmations":"3892898"},{"blockNumber":"11096860","timeStamp":"1603248596","hash":"0xbe98c11949190a25957867a12d6c0794dd6299a3588e7b5f1aeb5ed0d485dafe","nonce":"205","blockHash":"0x8d9d87fe0b7b8c32b965033374db4851d5e7d8bac82da5773c5dc78aa9767a05","transactionIndex":"143","from":"0x9929af6d39ef15b3179e1b058f9010cf09de1867","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"672883","gasPrice":"47000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11854109","gasUsed":"564437","confirmations":"3909308"},{"blockNumber":"11095287","timeStamp":"1603226789","hash":"0x95446421d465c0b63bac84d274e7831645877216db52dac04dbab6373caf8c12","nonce":"29","blockHash":"0x3b2a721d2add0fca34fecf368292964d1a6dd8de6a76c6e588e5c1a93b3398d1","transactionIndex":"82","from":"0x51c68d67789c607c395062bf4cf60c9ff8723027","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"693785","gasPrice":"20900000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000878678326eac9000000","contractAddress":"","cumulativeGasUsed":"10718895","gasUsed":"630090","confirmations":"3910881"},{"blockNumber":"11095258","timeStamp":"1603226427","hash":"0x73025f1fc3aac3ccda06b456daf3d01ef0fd24fd7d770e569326e2ff2ecc6e77","nonce":"28","blockHash":"0x19bd7f35647b8b439fd80be6440623890137306d147c045acdaf8c549625440d","transactionIndex":"22","from":"0x51c68d67789c607c395062bf4cf60c9ff8723027","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"714554","gasPrice":"17600001235","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000a968163f0a57b400000","contractAddress":"","cumulativeGasUsed":"11069567","gasUsed":"648454","confirmations":"3910910"},{"blockNumber":"11094603","timeStamp":"1603218143","hash":"0xa885cc5f5478ede4ef4bbd79598694e87b4be04b40e3cca1ad8fda107dd35122","nonce":"2289","blockHash":"0x73908eb6e609eb91d0ac2b506a560be9fbd70dd2692ed51bcdb66eaae06690c7","transactionIndex":"112","from":"0x8f9f67770c8cbfff7d5748d15996dc1cfb2fc5fc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"752060","gasPrice":"25200001587","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9624986","gasUsed":"635286","confirmations":"3911565"},{"blockNumber":"11091818","timeStamp":"1603181306","hash":"0x8a392b7e4b368c22b33acfc030135d4349e52b55b749ecd24ef88230e5320afb","nonce":"797","blockHash":"0xa1109694c864d1d5dcb7bf4da42868f0a7551841f4d0c007f5830eb667275440","transactionIndex":"72","from":"0x0fb5f93aa31a9e061230a0b06bfba734fa16ab90","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"843304","gasPrice":"59000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3386203","gasUsed":"717613","confirmations":"3914350"},{"blockNumber":"11091044","timeStamp":"1603170547","hash":"0x6ba91815cc2dddd2c83ee53b17878fb6df164c74e00d1cfca2dcc95ccba74be1","nonce":"341","blockHash":"0x151b13554e1157307bccc1c91289c5036b3aecf205da9c00fbe1d67f76921998","transactionIndex":"96","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"828039","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7032919","gasUsed":"704758","confirmations":"3915124"},{"blockNumber":"11090111","timeStamp":"1603158792","hash":"0xfd031dbd3ef6945e1aa1f1446e2e5c0ca84a299ded131d9207ef68f09673efb1","nonce":"222","blockHash":"0xc5494722f6995e09062d2925528173ad130f460652c46cf99c8f9ff9b88c6c67","transactionIndex":"37","from":"0x176d72db6786a5fa2d25cdbc673366f5b4b954a7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"736984","gasPrice":"24000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11133034","gasUsed":"622961","confirmations":"3916057"},{"blockNumber":"11074423","timeStamp":"1602950803","hash":"0x0f0b2e165854d1ae98b605e1eea05e49082a3ac641efca782f9abf1e88e4fe76","nonce":"316","blockHash":"0x33e048aa28afd9e6fc60b328c0af39400c9d636ecf8f27acf8ced933f97551a7","transactionIndex":"50","from":"0xce7f3464b423c4d045c371c5b231e3f047daebca","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"658549","gasPrice":"31000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10232938","gasUsed":"551016","confirmations":"3931745"},{"blockNumber":"11072305","timeStamp":"1602922599","hash":"0x32769ed5223fe50be1679d28deab2298acba9c94d3ad2b6ce11178fde1933cc7","nonce":"158","blockHash":"0x14b6af69ddd6bfdbc00a9db4c32ab937243fd977d35637f8d901421df46a983b","transactionIndex":"107","from":"0x7e655f4cf388267be54ccd66302457569887c274","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"873299","gasPrice":"20000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10882640","gasUsed":"808440","confirmations":"3933863"},{"blockNumber":"11071936","timeStamp":"1602917551","hash":"0x11db3c237d20cfcf80658a4fb4e1c795003cff37fa668d56c691212505d349e4","nonce":"146","blockHash":"0x0d4df414bd4f89aa78c08722087443c36a2dda365bed7a3031eb66b81976a399","transactionIndex":"176","from":"0x7e655f4cf388267be54ccd66302457569887c274","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52925","gasPrice":"24000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000000a87c89b5007ff406ab5280abdd80fc495ec238e000000000000000000000000000000000000000000000035ac8d21caa2cee04c","contractAddress":"","cumulativeGasUsed":"8651748","gasUsed":"44104","confirmations":"3934232"},{"blockNumber":"11066966","timeStamp":"1602851416","hash":"0xd51ae69d01a3d230444444757881b024c1c8483f9cd9af8a1f54295294b318b2","nonce":"2181","blockHash":"0x13d9523465127b9423fd7e156a583d780e266a26c5057a9317453b85d6ad28b5","transactionIndex":"22","from":"0xf748879edbe8cca140940788163d7be4d2a2e46a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"812904","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2169220","gasUsed":"691741","confirmations":"3939202"},{"blockNumber":"11065085","timeStamp":"1602826995","hash":"0x91e556735491d929de888c03eeab1cb3d327f4983dda5e475a88da140fc9ae6e","nonce":"278","blockHash":"0xd8addc7cbc126b634357518890edade880d02774c19bf638171c5526f97732c8","transactionIndex":"94","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"817533","gasPrice":"58300000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000152d02c7e14af6800000","contractAddress":"","cumulativeGasUsed":"5921418","gasUsed":"740805","confirmations":"3941083"},{"blockNumber":"11062853","timeStamp":"1602797271","hash":"0x555f0fcc84351e8573a8a9d79ec83c853720334123e6ff5446f8c0b5c95f6fdb","nonce":"2","blockHash":"0x2b1d50cc5536aa18a64663f4c1d7effa706f55b0b2cfaaa4aca42a04b51f188a","transactionIndex":"146","from":"0xea77dcaf3e10fdd61f3d8e2ef34333cd6c9a5051","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"617364","gasPrice":"20000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8615233","gasUsed":"536530","confirmations":"3943315"},{"blockNumber":"11057605","timeStamp":"1602727981","hash":"0x59e84b82c683874c50cf465ed75fd4785d93dc32479c6757c2703b1ca244ecfa","nonce":"271","blockHash":"0xa3648573934e5f09ad4095726add72d20f1c28432ecbe3726dcae6a14a965fc8","transactionIndex":"14","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"822994","gasPrice":"80000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000012fd74414997b8780000","contractAddress":"","cumulativeGasUsed":"1601882","gasUsed":"739298","confirmations":"3948563"},{"blockNumber":"11044748","timeStamp":"1602558631","hash":"0x84ab2f39b61da340d75d57703c0bd9787f2cc12d12de0ffdf724a7ad5b926391","nonce":"3852","blockHash":"0x4ed9b33e011d3796498b78b9bd3383dee1791ad92ff54b18a02fb5af785698cf","transactionIndex":"132","from":"0xce2a3294f800b1bf9a907db3c7e377cf9486a456","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"976499","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000010f0cf064dd59200000","contractAddress":"","cumulativeGasUsed":"9675269","gasUsed":"917421","confirmations":"3961420"},{"blockNumber":"11044213","timeStamp":"1602551481","hash":"0xd902333751c2e328acd3926ba72d1a9943d5ffdcc3f3bf51daf11ba705b1dfb3","nonce":"89","blockHash":"0x6f24e51709bdc055866884277eb8701598afe0ef20b8eca4557c4ce97d9e8e79","transactionIndex":"85","from":"0x7094ca1f897498536720cd301bfadcdfd737172e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1210000","gasPrice":"27000001235","isError":"1","txreceipt_status":"0","input":"0xdb006a75000000000000000000000000000000000000000000000000024519803aafd000","contractAddress":"","cumulativeGasUsed":"9730903","gasUsed":"68266","confirmations":"3961955"},{"blockNumber":"11044133","timeStamp":"1602550395","hash":"0x03178846799b35ccea401f525b5ecbe6cf85e49f321b9de3965d58a6da0761c7","nonce":"255","blockHash":"0xb311e1e14654d43a8886848128da205ad2ff175ec91b177820a68ffa9ae79f4e","transactionIndex":"52","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"742987","gasPrice":"84000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000001969368974c05b00000","contractAddress":"","cumulativeGasUsed":"4476711","gasUsed":"672709","confirmations":"3962035"},{"blockNumber":"11040293","timeStamp":"1602499294","hash":"0x78311b97e2b893b3f102f203da76872504d81cb8bdaaf28c3813bd97a832a81c","nonce":"27","blockHash":"0xc431e9a15836d2b09316a1096d87a45b0b3b921e3b4c1ce1ccacff7c01afa128","transactionIndex":"200","from":"0xe71f8089dae9bfb68e1dcebb5b47fd486f50a395","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"775309","gasPrice":"57000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11807591","gasUsed":"656798","confirmations":"3965875"},{"blockNumber":"11030742","timeStamp":"1602372633","hash":"0xa233e607d427ae54838ff521629b104589471f4357a39caefda3956308ecc251","nonce":"773","blockHash":"0x431fc83c96c2ed28b2b309da87351a9bd1137a1f55a24783ed0f7a205027a505","transactionIndex":"50","from":"0xe073182d644ebb5290cfa6915ba94312fc73a679","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"757868","gasPrice":"30000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5995572","gasUsed":"640696","confirmations":"3975426"},{"blockNumber":"11030657","timeStamp":"1602371578","hash":"0xe4fc384bfef7b1db2adf7244c8b689707ce3f49a72f7e0b661edec7584c6284f","nonce":"1315","blockHash":"0xe3ecc2f0c2234725ca034abfbd6c1521a8bf5f78aa9defb0167935f2802570e0","transactionIndex":"85","from":"0x4d955701d1e24cb1df0a32e4460766ae0dee4a91","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1152615","gasPrice":"31000000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb00000000000000000000000020074277f892404ee413753e01bac21a4f8d98c400000000000000000000000000000000000000000000009c67ae300945a78d83","contractAddress":"","cumulativeGasUsed":"8247825","gasUsed":"768410","confirmations":"3975511"},{"blockNumber":"11029023","timeStamp":"1602350856","hash":"0xfff27d78d4df583c2ce4826a0679dc31b24a1fbf50d069a907f53588814dcdea","nonce":"181","blockHash":"0x1dd4288d87353349e62af13c9bb88d078e489439d74bf1b821ee3ba076d60c78","transactionIndex":"124","from":"0x0d86064c8a0949b7ffc59c82d7ad49c993487e42","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"677064","gasPrice":"50500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9987914","gasUsed":"569124","confirmations":"3977145"},{"blockNumber":"11026754","timeStamp":"1602319726","hash":"0x0551b86fa72dfd272276e3b74de8c5f1e20e8749b0f3c7b45572a990b3a1846d","nonce":"566","blockHash":"0x5402702e08038ca98ec18134af626aa491b23e59d4a87daa6b90b25ec945c233","transactionIndex":"111","from":"0x85162b355eee83ed8d29c3cada25b80ca86e80d1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1011633","gasPrice":"43000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000012a85be92c11428aac8","contractAddress":"","cumulativeGasUsed":"7491677","gasUsed":"918472","confirmations":"3979414"},{"blockNumber":"11022495","timeStamp":"1602263141","hash":"0x7ec7db2db658ca51b77f3df117b1f54b63daabef8917bf7a85e90e5ed27a2ed0","nonce":"252","blockHash":"0x7f44da24fcebdca2f2a9009844a73465788a6df5c62479cb5a85337d55373154","transactionIndex":"21","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"742925","gasPrice":"112000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000043c33c1937564800000","contractAddress":"","cumulativeGasUsed":"1578988","gasUsed":"672345","confirmations":"3983673"},{"blockNumber":"11017077","timeStamp":"1602189795","hash":"0x28c0d7d0e17478f28bbca77282ed9596f6796342ddd107e637d782dd9f7ca113","nonce":"136","blockHash":"0x3e6046f4ee8a7b80bdcb62ad44818087845e9c63a1d87134aea64edd77b0d954","transactionIndex":"159","from":"0x5b60117255df27fdd885629c0210d9dd975ff975","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"758454","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000ed2b525841adfc00000","contractAddress":"","cumulativeGasUsed":"9951611","gasUsed":"687859","confirmations":"3989091"},{"blockNumber":"11016041","timeStamp":"1602175051","hash":"0x038fcca5b327887207cefe252baab85ed0fb75d586e860ea067f30548201acdb","nonce":"3639","blockHash":"0x87a6ad2f093f05bd3172dde38310fb3cdb0d19743a54cc5bad4cf49f4dda1ff5","transactionIndex":"86","from":"0xb109b37202440206af692df4b17aef885668844b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"637704","gasPrice":"103000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6007270","gasUsed":"531273","confirmations":"3990127"},{"blockNumber":"11016008","timeStamp":"1602174537","hash":"0x36f6201eb03a93d65039dfbe4e4bae51cccb24864899cba8c66f4a047e71ba2e","nonce":"3636","blockHash":"0xb12d74ba28852b9cdf3740c2d2469074dc3e80c2f6c49b5768e3f81d74af1fb1","transactionIndex":"183","from":"0xb109b37202440206af692df4b17aef885668844b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"689735","gasPrice":"99000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000fe1c215e8f838e00000","contractAddress":"","cumulativeGasUsed":"10513537","gasUsed":"624755","confirmations":"3990160"},{"blockNumber":"11015992","timeStamp":"1602174332","hash":"0x3ae2212ca78be63a095f53b34b8e2c695e4d007c28d075419d1b36eeb1afc92a","nonce":"3632","blockHash":"0x78451716022623058e573bc8e9cfd55d5d0c18630d7c82cfbfdd0b9edea26667","transactionIndex":"118","from":"0xb109b37202440206af692df4b17aef885668844b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"696256","gasPrice":"99000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000a968163f0a57b400000","contractAddress":"","cumulativeGasUsed":"9132060","gasUsed":"630526","confirmations":"3990176"},{"blockNumber":"11012720","timeStamp":"1602129926","hash":"0x6d19375b5d2fba0e94f6cad0b2060c753a7d864b44db4188ed87bf7078685378","nonce":"127","blockHash":"0xc65fd58f6403e9ad7de1fe6408bb76ffc886529a8c49c9fdbf1b6ed481f3d525","transactionIndex":"34","from":"0x74ee3460f575bce35d681df9501322a82df53739","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"727868","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2187817","gasUsed":"585165","confirmations":"3993448"},{"blockNumber":"11012697","timeStamp":"1602129579","hash":"0xce1c2b7b0a603b1ae67a15aa205b4bf14b74fbb6a6717c1cb16cdbc8f541e619","nonce":"246","blockHash":"0xe9116c9efcb95ff5741d761c8ee7624d8353f8f7bc19b3b84c9c95803ce6fb3d","transactionIndex":"33","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"775107","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000878678326eac9000000","contractAddress":"","cumulativeGasUsed":"2028490","gasUsed":"702325","confirmations":"3993471"},{"blockNumber":"11008525","timeStamp":"1602072791","hash":"0x4ef5e968c05835faf7f6070124cc86d6d48cb498b623b981829bbb3e7718e553","nonce":"721","blockHash":"0x8dd033eb9cfd90cf864e6b5c241958fb6ccd4b22b31a59678883e4cf7cfd25b8","transactionIndex":"64","from":"0xe8b6f13765466e733c96a64ef0490bf6a9fa7b04","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685088","gasPrice":"85000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3600103","gasUsed":"575205","confirmations":"3997643"},{"blockNumber":"11008150","timeStamp":"1602067785","hash":"0x156525ba8d1ffec8ef0f10bca591edd450166ea1f8805264d5bcc738e887a754","nonce":"214","blockHash":"0x43b1ebf8e9255ccf74b273fed915834d8b454886d4896af52e61e4af7600732d","transactionIndex":"84","from":"0x1223f9446ffdb6b35c2af3d81c0e7c0171965bc7","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"763721","gasPrice":"49000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8679929","gasUsed":"646744","confirmations":"3998018"},{"blockNumber":"11005934","timeStamp":"1602037455","hash":"0x698d6d75d0b455d2d0aa2e86c2a90f7f5cdc3ff736ef78c6dbf6240016455eff","nonce":"556","blockHash":"0xb377b27a4452d088f842d0b4f214b214829fa5b53a7e68fc9952d65b14632f0c","transactionIndex":"129","from":"0x85162b355eee83ed8d29c3cada25b80ca86e80d1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52939","gasPrice":"97000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b30000000000000000000000000a87c89b5007ff406ab5280abdd80fc495ec238e00000000000000000000000000000000000000000000012a85948da5e7f9fe6a","contractAddress":"","cumulativeGasUsed":"6333290","gasUsed":"44116","confirmations":"4000234"},{"blockNumber":"11004413","timeStamp":"1602017079","hash":"0xbcc5eefd50b14d42385c80023c8f37e0a9948f191381739563f1077ca2269eac","nonce":"132","blockHash":"0x9f6d06c600c3b7c2bc5bf1d699487218f88c435091da904ab83fd787ee1ea221","transactionIndex":"101","from":"0x1b1a26124380a728608859b0624d7f038db66e2e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"766723","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000f6429a861ae6ffc44467f232fc557ee9d1ea48e30000000000000000000000000000000000000000000000865351a4f2b2fdb22f","contractAddress":"","cumulativeGasUsed":"10360027","gasUsed":"511149","confirmations":"4001755"},{"blockNumber":"10985920","timeStamp":"1601768083","hash":"0x6b01a53a8d32d55a1ab0b4366521a52383a31eaf8ee5d2f9c69d9c1a70620cec","nonce":"4","blockHash":"0x99a807d3830e3c62ec8d4f27c06c9e43b2a5f7939df38a024c9800494ceaf6b2","transactionIndex":"50","from":"0x574f1c786d840e621ad7b3b767694892bd37b678","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"652289","gasPrice":"40500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4786727","gasUsed":"545363","confirmations":"4020248"},{"blockNumber":"10983750","timeStamp":"1601738845","hash":"0xec07bd905ea9d8c2c247abb10bff57f0fd563c9e4185e3d24e3868ca4daf1ee8","nonce":"47","blockHash":"0x03087b02b88cdf2dd25c0f05e5be9b273cca6e7c1cf795d3d83bf596484ac4e0","transactionIndex":"103","from":"0x6bb11fc9e546748df3530f84f979150762b18e75","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"649639","gasPrice":"80300000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9577529","gasUsed":"543393","confirmations":"4022418"},{"blockNumber":"10975272","timeStamp":"1601623494","hash":"0xc51891ff2fc65082005dee0dd6fb71831520547d358726d4bdf86f60d39c3087","nonce":"695","blockHash":"0x6bb713474f682e1c30d093ec6dc6b07e73b59cb09cdfc11889a3977744443f3c","transactionIndex":"156","from":"0x1b98e3599fbbb729635a7c8852e7fe0a54ae20fd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1063236","gasPrice":"78100000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11529774","gasUsed":"918854","confirmations":"4030896"},{"blockNumber":"10974588","timeStamp":"1601614231","hash":"0x9f384c07f6fc5e1832c55620096d37939fb977646e65f7b9a76b2879de8df304","nonce":"683","blockHash":"0xc568bbf64c49b6559579e6682e7eda2eeb9cb83ca6e4a5aa74e628f04577dbc7","transactionIndex":"43","from":"0x1b98e3599fbbb729635a7c8852e7fe0a54ae20fd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1049268","gasPrice":"42000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000013a31a773585c34ee6","contractAddress":"","cumulativeGasUsed":"9323255","gasUsed":"951184","confirmations":"4031580"},{"blockNumber":"10973900","timeStamp":"1601604928","hash":"0x45c8ad79cd8a21b58856902d1e55a5da842c48c4c5eac785a5eb57e891a58197","nonce":"868","blockHash":"0xb0ead62b7067194777a9bc6b5786cc782e3becb12c4827bf042b239de9529d59","transactionIndex":"83","from":"0xb27fda7fbc5b42e5e5e0bc6be75b27a0f3fbf2fd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"665241","gasPrice":"55000001604","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8330977","gasUsed":"557711","confirmations":"4032268"},{"blockNumber":"10973877","timeStamp":"1601604555","hash":"0x07275ab2b582bc46c449bbc0be264405c146bcb0a4c44b1fb33b3640836f4a05","nonce":"90","blockHash":"0xf90870450ad8c5439b2daea5875b1018a55f5bfa9969234cd9f5c028348e6c93","transactionIndex":"100","from":"0xdc7ce1a496da5b60191b5b93f0de943538c95b1d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"749712","gasPrice":"74000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7937307","gasUsed":"602972","confirmations":"4032291"},{"blockNumber":"10969408","timeStamp":"1601545409","hash":"0x762a757f473a8a75f282c52875423b03cfd2e89eccabacc166c737b3ed811596","nonce":"211","blockHash":"0x410130884732e0b6bae86b602e10f2a3c91a813416a074b51036cf96cefdc1a6","transactionIndex":"52","from":"0x94f939704e811d9e65fc57d11c836c4809cd116c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"812135","gasPrice":"92000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000093b8f8c654cb740000","contractAddress":"","cumulativeGasUsed":"3516839","gasUsed":"735548","confirmations":"4036760"},{"blockNumber":"10960533","timeStamp":"1601424823","hash":"0x8d95d0edb5deb2f2a1027476f2e502e65b9a820ff64e1f54e15cca26ce23fd2a","nonce":"659","blockHash":"0x798607f2a19a06c42c84d9a0dfd308bad3b70db66e8f3889602b46f5f5814510","transactionIndex":"160","from":"0x1ec2c4e7fff656f76c5a4992bd5efa7e7ff1a460","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685088","gasPrice":"66550000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8770794","gasUsed":"574841","confirmations":"4045635"},{"blockNumber":"10947848","timeStamp":"1601253331","hash":"0x9bfc5bdedb7289b11eb9e062b68c05be5d60a035d061eefcc4629eb47d8af781","nonce":"562","blockHash":"0x5c8d93fbb4e647088809641dafa8d474fc42f469dc5b1443fe547b91c4a33b82","transactionIndex":"79","from":"0x764f2d4a12dc310ba34a359358bfd313b503cfd3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"753753","gasPrice":"58000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4984782","gasUsed":"637577","confirmations":"4058320"},{"blockNumber":"10944729","timeStamp":"1601210945","hash":"0xad7ba02192a0f0ba08129b55d470cd8df598b90cebf833491a6646c1c43949ed","nonce":"1235","blockHash":"0x8c62dc6564bbe899e874c3d93926e8c4b4c1037e1a2a32eadeedebf5f551f2aa","transactionIndex":"58","from":"0x0825351b5f37d2e494fbed973ff2b6a66f5de964","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"818120","gasPrice":"54000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4170420","gasUsed":"696146","confirmations":"4061439"},{"blockNumber":"10943437","timeStamp":"1601193977","hash":"0xe47d9104ad854b28c8ad832251b2112cf5d686b8be72c858cc8eb2c3187a2f38","nonce":"4","blockHash":"0x3613e8189d60304dcbcd4abc51a3b0cbb19510e6a780c2c858f2cade4e1bfea4","transactionIndex":"56","from":"0x34ba838a3c9a1a49d938e2eebb4488fd29aa0cad","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"480555","gasPrice":"48000000000","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000fec2de8d9e77214cd219cd03c0e722d82b4de54100000000000000000000000000000000000000000000001a6d6beb1d42ee0000","contractAddress":"","cumulativeGasUsed":"5726621","gasUsed":"480555","confirmations":"4062731"},{"blockNumber":"10941797","timeStamp":"1601171709","hash":"0xeebdb3657a24620a2fa245714607d1931c25ddd6cf66fb46eb0dc772fac58607","nonce":"92","blockHash":"0x8e978eae8077049924717deb21c5a721e1bde336d163e99c07cfaa0421f0427a","transactionIndex":"112","from":"0xfb5c17f3941bbde978a7c47ad03be737f2003489","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"774854","gasPrice":"62000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10232625","gasUsed":"672964","confirmations":"4064371"},{"blockNumber":"10941323","timeStamp":"1601165025","hash":"0x63dcdd3a67ccf6dffd9b7caeab9e4b1a575d4d3778fd5dbfd0875f49ea0e748e","nonce":"49","blockHash":"0x61b9b0c9f6de0afaf71ef06e9a3de45137338ffe95b1fd7d003c2d99d568062f","transactionIndex":"113","from":"0x7eb9b144b2224aecd299c60f25d81df191d879cf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"729960","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9406448","gasUsed":"630415","confirmations":"4064845"},{"blockNumber":"10931956","timeStamp":"1601038759","hash":"0xe3201dea5fc76b8cb342a6c4556b6f45a3c8b6f117da2e344366502e9d4ceec1","nonce":"90","blockHash":"0x66dfd87f79181401ea9b12eecbb1d4232b2b27b1f311bd538a2baa269f484cc2","transactionIndex":"44","from":"0x1200f15580aefb87cbee0b1873346e85e24bf350","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"652872","gasPrice":"92000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6135700","gasUsed":"546231","confirmations":"4074212"},{"blockNumber":"10926622","timeStamp":"1600967892","hash":"0x5c6c4f4656ae9928c682b2ef358e213ad09a2540ca39beb526e84d4b7bec74f4","nonce":"553","blockHash":"0xff93d7f46eae017eab24cdee3ad2856b58dd80c9ee63d074559bbf049948de7c","transactionIndex":"108","from":"0x1b98e3599fbbb729635a7c8852e7fe0a54ae20fd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1094253","gasPrice":"151000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8362570","gasUsed":"945128","confirmations":"4079546"},{"blockNumber":"10923190","timeStamp":"1600922620","hash":"0x2f0a2ce604be73e2c0d5b5dd7f350568c469195448efa24736ff31f737eb6ff5","nonce":"718","blockHash":"0x7b7626fc5c96b2bc1d3f4f03b6c175a690597b67ad3a0a8e2ac36ae648258f07","transactionIndex":"192","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"826817","gasPrice":"80000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11641333","gasUsed":"718692","confirmations":"4082978"},{"blockNumber":"10923179","timeStamp":"1600922527","hash":"0x53082bb2ad88e9bac6377f632142d72aa73bb0be4dbdb7f3d9e7f6aabf88a15f","nonce":"715","blockHash":"0xf1dcc83ffc67d25f6bc002ebd6d41fa1dbfb92ed0581e052ec994adaa90f4526","transactionIndex":"15","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"812966","gasPrice":"81000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000073bd3712642e1ff7b69","contractAddress":"","cumulativeGasUsed":"1772457","gasUsed":"737136","confirmations":"4082989"},{"blockNumber":"10923157","timeStamp":"1600922272","hash":"0xfe6631c8760e18f16559a0bc7009690829db8798fd86681484df35a1e1b50092","nonce":"712","blockHash":"0x4aa37cd0c3c538ef367af9580efacd6e55859cfb2f02c7da850cecd611ceca01","transactionIndex":"57","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"815487","gasPrice":"83000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000005976b339ad2e83e611f","contractAddress":"","cumulativeGasUsed":"3633345","gasUsed":"738967","confirmations":"4083011"},{"blockNumber":"10913371","timeStamp":"1600791947","hash":"0x4d4f7b9971ec12bc763a9d9e136a2b98b6a27c2002a83faaf63a0f922f61fb40","nonce":"54","blockHash":"0xa506aa5d3c3aa7bf23756de1c94fb46ed42d4eb912f31f81b1caa5e1ed516430","transactionIndex":"45","from":"0x8a72df30ed119a4d4a0cfe9f72e9df222ce23811","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"295860","gasPrice":"258500000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3258017","gasUsed":"236800","confirmations":"4092797"},{"blockNumber":"10908185","timeStamp":"1600722249","hash":"0x23b055d389b26b5e89279eecefa2970cb32603aabe077a7af2a0bdf288c93cce","nonce":"194","blockHash":"0xad211c7f2a9b8b5feaec36fb7f800ff02b16dfd30f0ad3e00782b7543e7be9d2","transactionIndex":"90","from":"0xb93109b0c236c10bf93b9b114a1cb1174796eeae","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"803532","gasPrice":"93000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7586487","gasUsed":"682597","confirmations":"4097983"},{"blockNumber":"10907122","timeStamp":"1600708715","hash":"0x29e2728a824ce18b547be41e22ea6ab9d133f9c179641344405b50f1e4bda129","nonce":"3","blockHash":"0x139a9926dcb59d005444c20f5f0fe790c471ba7133fa2abb6913ca1d74678f33","transactionIndex":"20","from":"0xa2103a9a046404e0cac1ecf77cff6df78eff399f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634105","gasPrice":"149000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1760541","gasUsed":"529336","confirmations":"4099046"},{"blockNumber":"10906454","timeStamp":"1600700132","hash":"0x68ff5d472f97022f412d27a1e56a764f80fe669d3bee43f45325746c51a57f2e","nonce":"111","blockHash":"0x4466a179c3625500b715bfbc7a6731b849d6813ad73d6a18924e55ecd01b9880","transactionIndex":"99","from":"0x6a5e52ced7a8305f61d5cb908ea91812b0198a0d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686510","gasPrice":"258940000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5042888","gasUsed":"576073","confirmations":"4099714"},{"blockNumber":"10904156","timeStamp":"1600670370","hash":"0x76de8c90bd0c6103e89eef0d06f9315750cceee25a21c1a336f3ad7931eb5e3c","nonce":"53","blockHash":"0xdc1ba66ef07b32c0928008e69b41e01b2e8d988638b5ff9d9f77d3d4b409cbef","transactionIndex":"144","from":"0x812fceb92d260daa903f12eb5111734781d69c5e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"652872","gasPrice":"113000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10529628","gasUsed":"545139","confirmations":"4102012"},{"blockNumber":"10900001","timeStamp":"1600615034","hash":"0xa09d19c7f4b37db25f9fa720e1989c886a1623e75ce8d1757ae4f25edcd08e65","nonce":"476","blockHash":"0xa8bc81f955aa47a90fef4e3d1f78dddb389d31c943f2b8dd88b23ba654752150","transactionIndex":"51","from":"0x90f440e449c47f4caf78c62c131dfc38ab491d4a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685683","gasPrice":"128000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7331245","gasUsed":"575709","confirmations":"4106167"},{"blockNumber":"10888138","timeStamp":"1600458385","hash":"0x36cf5f59fa39ed8553a1bde72a60e9f787c122408390f582cc02e06e0d34a1a6","nonce":"69","blockHash":"0xc2b64d80faf9a546641d9275b815b7d83fec81e067726c6862179c845758f3fa","transactionIndex":"45","from":"0x07c02e53f05dae5b9317ad179181e0a2d931f057","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"652425","gasPrice":"131500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000027d370aba1b93aab930b","contractAddress":"","cumulativeGasUsed":"3043244","gasUsed":"592485","confirmations":"4118030"},{"blockNumber":"10886870","timeStamp":"1600441634","hash":"0x8d328b2d3dd4b2dc9583600966499a8e11e2f9dfe9a7d51f03eafc5668721876","nonce":"508","blockHash":"0xff486d399c16d2a014f48e5954efc0b35bbf7596a24b8a99a9bdb5b7065d89ab","transactionIndex":"106","from":"0x26e1a160821707c35329ed14f9f27dce761e5dac","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685174","gasPrice":"244000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9800788","gasUsed":"575634","confirmations":"4119298"},{"blockNumber":"10883143","timeStamp":"1600391191","hash":"0x118765c4dfb407b7dae9f399f76d787f1fa7d9dd78e3c1ca2e03e1e168fd72bd","nonce":"11","blockHash":"0x7f2128f565ddacd12fb18d39d324afc0ef180f0dc4763152ca595e56b2973891","transactionIndex":"119","from":"0x420632569cacf9eeba38fe84c3d5c5c288e24a85","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"768417","gasPrice":"166650000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000001a391547caced21b000","contractAddress":"","cumulativeGasUsed":"6050996","gasUsed":"694392","confirmations":"4123025"},{"blockNumber":"10881520","timeStamp":"1600369496","hash":"0xb1829d12a006b8ac6c2cd7fbebd6445de0cf2873d41189f6d5f077f4332d564c","nonce":"480","blockHash":"0xdf6ad07ade40c3e74fc9368e25728c893dbc199ae7c278879084d49e5c8ef379","transactionIndex":"11","from":"0xc080e234dba2545e93872ce6e96e683a4e29046b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685185","gasPrice":"493000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1815876","gasUsed":"574906","confirmations":"4124648"},{"blockNumber":"10850588","timeStamp":"1599959904","hash":"0x67db381bb47b175cc0f3943c7eb074979c6aaee883c4346588f475c883591dcf","nonce":"78","blockHash":"0xad754fd8a2ddf105da0ba9cd1965bb56254f5eeafb957b30c42ff0e333cee942","transactionIndex":"11","from":"0x7094ca1f897498536720cd301bfadcdfd737172e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"597551","gasPrice":"132214285715","isError":"0","txreceipt_status":"1","input":"0xa9059cbb000000000000000000000000a65ba816f1f01ef234b8480b81a2ed5b3544c61a00000000000000000000000000000000000000000000002c22157520c742163b","contractAddress":"","cumulativeGasUsed":"3335238","gasUsed":"597551","confirmations":"4155580"},{"blockNumber":"10849359","timeStamp":"1599943240","hash":"0x697d55e2a02d11a6ed1afb70f3bb75ece5503bad513bc9ebe983c20a171170da","nonce":"19","blockHash":"0xd3aa8f46fa56cc36e1812c9f38e53840bc2a90ea7a18ff1f21deaabbed0aedd7","transactionIndex":"115","from":"0x266eedc01de28c0138ec55c1920f3607de88adf0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"651377","gasPrice":"101200000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8174430","gasUsed":"543832","confirmations":"4156809"},{"blockNumber":"10845359","timeStamp":"1599890392","hash":"0xcccf3cc24d18510a126432da49f5faa341d96dc3f68eb920b94eea0e305ab16f","nonce":"109","blockHash":"0xb2c6c4541bfef71bfa9d0e457c18bd4253ecaed82191693292421923294e39d6","transactionIndex":"86","from":"0x0d86064c8a0949b7ffc59c82d7ad49c993487e42","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"685089","gasPrice":"79000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6974461","gasUsed":"574831","confirmations":"4160809"},{"blockNumber":"10843568","timeStamp":"1599866662","hash":"0x4f76ebbf94fb0e5cf30cdb3791525c5107cdef34c9981b18c6ae4927ff564163","nonce":"478","blockHash":"0x9d1c2abc5f321ae29331f6313f733c16d239327e2910ec0202484ece1e4b3edc","transactionIndex":"140","from":"0xd7fac8d8b08bc47f0abb04c247a3f5168c63eceb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"650890","gasPrice":"90200000233","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9068848","gasUsed":"543393","confirmations":"4162600"},{"blockNumber":"10843412","timeStamp":"1599864898","hash":"0x46c13dbb9bff8e8eea58f731a3976e4c37e397bd20731a8d78ae9546b327d47c","nonce":"425","blockHash":"0x2c7d91a0bd091d80832ff4fbdc06cb38854544dd0d1d6f1d63f0d575d571eef5","transactionIndex":"7","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"787079","gasPrice":"120000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000e79ce22a00d2757d98e","contractAddress":"","cumulativeGasUsed":"995480","gasUsed":"712422","confirmations":"4162756"},{"blockNumber":"10840850","timeStamp":"1599831015","hash":"0x8cbb4b0ee821879c92daee324841f4261f3004c893f73aeb8b46d25743f97f4a","nonce":"14","blockHash":"0xb15736e91fa2d72b647713305068e5ddcff81aee0de2fac641df59ad79858f97","transactionIndex":"144","from":"0x1689560b668a2f063e2aa260d909a8d0bea55e7d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"652968","gasPrice":"98500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11678526","gasUsed":"546680","confirmations":"4165318"},{"blockNumber":"10836542","timeStamp":"1599774055","hash":"0x1105ce38ef2ef1296cecf2511bb58bf0b6d3e4b9b12e50e5c50a618f56df4e52","nonce":"186","blockHash":"0x1cdbeb3ff35e6148286d697bd417de10d2e5b6a054b21f44e66c3202fc0562c2","transactionIndex":"117","from":"0x94f939704e811d9e65fc57d11c836c4809cd116c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"853347","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000c328093e61ee400000","contractAddress":"","cumulativeGasUsed":"11126098","gasUsed":"773747","confirmations":"4169626"},{"blockNumber":"10830204","timeStamp":"1599689767","hash":"0x8e8477ea8c4c8b8a07a42afd42d75a757fe0571408b1468cda11df846ec4a4b6","nonce":"100","blockHash":"0xa1bca38e0d7ecbbb58010f81a971d96ec567e4fd061e2e2e39785dd4680537dd","transactionIndex":"80","from":"0x265b233cd0f219dbbfbeabf119548fc24377a19c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"819354","gasPrice":"80000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11411123","gasUsed":"697242","confirmations":"4175964"},{"blockNumber":"10828148","timeStamp":"1599663406","hash":"0x676b07adb68d08da7583f5b0cfd92232491a91377e684633546b49babd89dd81","nonce":"168","blockHash":"0xde809a43395aef64d4af77534519e033210f637d733dadd3629ae759a08690c1","transactionIndex":"141","from":"0x6f3b4a22981ecb8121f5ecfcccaa54b40ff25d9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"648155","gasPrice":"175000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7066134","gasUsed":"541348","confirmations":"4178020"},{"blockNumber":"10828133","timeStamp":"1599663234","hash":"0xa8496d15c7a9186d2dba16fda7748180553978085bcd37e2159faaaa40bd92aa","nonce":"165","blockHash":"0x112bdf71365a38ec7b4fb38f8c7fd81394bbb309fb82afdd3ee8881cf99976f1","transactionIndex":"53","from":"0x6f3b4a22981ecb8121f5ecfcccaa54b40ff25d9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"686649","gasPrice":"175000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000027f0709a015a6e9818e","contractAddress":"","cumulativeGasUsed":"3108877","gasUsed":"622157","confirmations":"4178035"},{"blockNumber":"10821074","timeStamp":"1599569241","hash":"0x5325a3e57a79eed1c11a173cd91a0179a414a5437051b17ecc1c41db3a3903e7","nonce":"1861","blockHash":"0x9e313bfcd67d4a02c1b5ebb95a1e7f961750c0a6930274a1765a3b09362ad251","transactionIndex":"93","from":"0xf748879edbe8cca140940788163d7be4d2a2e46a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"879458","gasPrice":"95000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000058332927c8d88c0000","contractAddress":"","cumulativeGasUsed":"5030457","gasUsed":"760383","confirmations":"4185094"},{"blockNumber":"10818631","timeStamp":"1599536821","hash":"0xa09618201f688dfc13e4cdfde11c26b01e93543bf321b3de44ece92145488586","nonce":"850","blockHash":"0xe99062c1df2b92ad49f46857a8c0080cc1366a99b4a47b78cea1ad83f3ac17fc","transactionIndex":"101","from":"0xa1758d337343856036858ac32216d7c72be580cc","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"748822","gasPrice":"94000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8069917","gasUsed":"633963","confirmations":"4187537"},{"blockNumber":"10810402","timeStamp":"1599426859","hash":"0x6a85d43eb7913e1ab5a962449b0a1602eb7a8e07014d28d3fd1e88b1d8a357c2","nonce":"282","blockHash":"0x26fc8763e251447debec35927bd2e2781c5d6ea4a9d78f52e10de4d62c90c8bf","transactionIndex":"105","from":"0xde48537ce6df7f50daf3989e3202636b09b55f5b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"934464","gasPrice":"86000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11923798","gasUsed":"801917","confirmations":"4195766"},{"blockNumber":"10810158","timeStamp":"1599423910","hash":"0x8b9437496c627cbaca993d14f76d3bbb8ea4a37e8379fb1d07dd3bcc0bc8ac8e","nonce":"88","blockHash":"0x270322527cd8077b9e9a49a2f2dc08915e3c03c2da6ef0b133a236af5002a08e","transactionIndex":"78","from":"0xda5d73d6c3a5cc4a4e5e3f8429389e9a46188b7f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635357","gasPrice":"90000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9157814","gasUsed":"529700","confirmations":"4196010"},{"blockNumber":"10802832","timeStamp":"1599327907","hash":"0xf7dd2dc1e5065ec1b3f2a7d18bd11b4ff5439661ceaea6cc1954a94aa4a3c1d5","nonce":"138","blockHash":"0x1e062d33d7568810449ee0c6dc6f9860c32f33724e17c0d5b8e271620f6ed82a","transactionIndex":"71","from":"0x6f3b4a22981ecb8121f5ecfcccaa54b40ff25d9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"684852","gasPrice":"345000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000018f1b6f9ef5b4802be2","contractAddress":"","cumulativeGasUsed":"5349016","gasUsed":"619908","confirmations":"4203336"},{"blockNumber":"10801713","timeStamp":"1599313121","hash":"0x544788f1b55f71656d645e614b95abc13acc565c464c7c4427011224eb93da45","nonce":"242","blockHash":"0x2b9d0b5ce9de495600f277272b4f9729dc7fc59c14fdc1afd6dff8d9b47985c0","transactionIndex":"91","from":"0x876b0672b481046737b49806c76192977fa7fa88","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"633437","gasPrice":"443000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5881873","gasUsed":"528094","confirmations":"4204455"},{"blockNumber":"10801517","timeStamp":"1599310488","hash":"0xa5fef00d81dbd6ae5cdaf3082b3da38f52e390c6296e92d86cdfc3443e6b2f47","nonce":"531","blockHash":"0xf0af3e07b3d1465d3a6ca78e0563815dea734b9af8f52e40072bfcddf4b69357","transactionIndex":"32","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"793535","gasPrice":"385000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3120762","gasUsed":"675050","confirmations":"4204651"},{"blockNumber":"10801225","timeStamp":"1599306828","hash":"0xbd7833b3c182e945a5e6795c8a153be17925b642d2b984f4119bfe9db915401e","nonce":"527","blockHash":"0xa92efb23f26a0c936cde99848bcff2abbe079a5796e9d0a479f8abb69e19c7a5","transactionIndex":"56","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"780405","gasPrice":"313000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000003178b82d613147dff4d","contractAddress":"","cumulativeGasUsed":"6001180","gasUsed":"706135","confirmations":"4204943"},{"blockNumber":"10800743","timeStamp":"1599300478","hash":"0x003d3d9e0077f613e9bc668cf12a3db30c9b0e4d9099a59b9cdd211efdcbde67","nonce":"509","blockHash":"0xdb11cc16f677f2300576445e549df215f674e7c2edbc008a7b0d2b45ff074c82","transactionIndex":"71","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"779989","gasPrice":"260000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000055d457a0ea915a0c0d9","contractAddress":"","cumulativeGasUsed":"9667161","gasUsed":"707427","confirmations":"4205425"},{"blockNumber":"10799649","timeStamp":"1599285913","hash":"0xfadefff6f1041f4e4cb8eb9b4b71a759482b8f5834f7d9443ff7cd2a63499b34","nonce":"75","blockHash":"0xa2941493ddae1b8355ab868fd258e0d4686cf6a79812b43a29299d8e7cc2fb8c","transactionIndex":"199","from":"0xda5d73d6c3a5cc4a4e5e3f8429389e9a46188b7f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"30000","gasPrice":"197000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12039476","gasUsed":"30000","confirmations":"4206519"},{"blockNumber":"10796726","timeStamp":"1599247315","hash":"0x66e5ad4aa497601e05664d474aaa0345986531445bcffa3cf15c96adedfa564d","nonce":"127","blockHash":"0xdeeec33b7c0be15be31ce51aabeff5543cdcd67a46455a0911d64e7cfc275606","transactionIndex":"6","from":"0x6f3b4a22981ecb8121f5ecfcccaa54b40ff25d9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"681112","gasPrice":"150000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000028107761ad7178e6400","contractAddress":"","cumulativeGasUsed":"1192946","gasUsed":"614788","confirmations":"4209442"},{"blockNumber":"10790335","timeStamp":"1599163268","hash":"0x22f7d77728e0fac3e33ce7bc5a2e41eb0c2a43ceb7d5b21bcb55232b851e21ce","nonce":"2596","blockHash":"0x9a9ca5033d818279ad72151c5a93325b105c486dae086da977372949187e95ab","transactionIndex":"65","from":"0x86e283cab263b49256924d4232532ae4531ff0bb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"846571","gasPrice":"290000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6582010","gasUsed":"723365","confirmations":"4215833"},{"blockNumber":"10771273","timeStamp":"1598910156","hash":"0x1851b2de17d335c75884a9863c77eda662426686e36237b0cc7c9fb0b0af4b0b","nonce":"302","blockHash":"0x3943a33dd11553b2a1ab602d10bf7c351b7b602c3e6245eeea6f28d01cdf242f","transactionIndex":"15","from":"0x0301f1b28081e08dadcab7a2e918af111fa69219","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"828710","gasPrice":"148000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"1874943","gasUsed":"705396","confirmations":"4234895"},{"blockNumber":"10770742","timeStamp":"1598903691","hash":"0xe46cc4eba8c4108531150e403ea674bff32bb4211a0e238507925e6646a8d045","nonce":"48","blockHash":"0xa219ec027250ae6fddd85d5b558f5e7c271ff4eac6f3c7faae43fd6e7874fa35","transactionIndex":"140","from":"0x79d4d0df5733222047fc73e6097a144f51350009","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"690455","gasPrice":"270591897848","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000424db90a4d59eb7a9c3","contractAddress":"","cumulativeGasUsed":"11228912","gasUsed":"624641","confirmations":"4235426"},{"blockNumber":"10768326","timeStamp":"1598871895","hash":"0x6c24da11f0261fb8f6d2b0fd4fa0aa52995ae6bae96ab0cd15a30d5121312f39","nonce":"98","blockHash":"0x675ae4e6a47d9ea1fc6801289eaef63943a6fcbd73da4ada69c62a468b0aa2ae","transactionIndex":"231","from":"0x6f3b4a22981ecb8121f5ecfcccaa54b40ff25d9a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"667066","gasPrice":"207000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000024f1b65f421cb600000","contractAddress":"","cumulativeGasUsed":"12105020","gasUsed":"605586","confirmations":"4237842"},{"blockNumber":"10762385","timeStamp":"1598793401","hash":"0xc1cdab108fa07f7be249aebd126cb401dfecf4651a86bef27ecbe63958ea859e","nonce":"227","blockHash":"0xdff97825bab1576f7df5d00b30f00b0b8e3a04236835bbd46c4b1193ebf9b387","transactionIndex":"190","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"782304","gasPrice":"171000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000080bfbefcb5f0bc00000","contractAddress":"","cumulativeGasUsed":"11150717","gasUsed":"708860","confirmations":"4243783"},{"blockNumber":"10762190","timeStamp":"1598790793","hash":"0xed3ee1a185a16dedc2de9d1164b03eee241a3c06cdb66355b120b7b8681fa7de","nonce":"219","blockHash":"0x2b3b2774aced3d76bbf2e5896097d49182fd25acacabc18e0faf034a088c317b","transactionIndex":"44","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"779117","gasPrice":"170000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000080bfbefcb5f0bc00000","contractAddress":"","cumulativeGasUsed":"4391226","gasUsed":"706366","confirmations":"4243978"},{"blockNumber":"10761437","timeStamp":"1598780265","hash":"0x0201a33a1d32e2858f78febdc1c22a4ae9506d4b63383fd3b9e9bdb9676b827a","nonce":"209","blockHash":"0x5085b570159cb85ce22730036da05da67c37884acc23f6978b107b978e967d95","transactionIndex":"100","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"745333","gasPrice":"220000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000644e3e875fccf740000","contractAddress":"","cumulativeGasUsed":"7682569","gasUsed":"673087","confirmations":"4244731"},{"blockNumber":"10761391","timeStamp":"1598779626","hash":"0x71fc5c99acbc5cf5a085b5470c1f77a798191ca3ed65dd571927677108cafb8a","nonce":"204","blockHash":"0xe69374a45354c051f2b1a0583dd9f26a13f5113ad05b8a309b89bfc6fe714241","transactionIndex":"183","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"748003","gasPrice":"220000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000687dc86f08ecd080000","contractAddress":"","cumulativeGasUsed":"12246706","gasUsed":"676514","confirmations":"4244777"},{"blockNumber":"10761282","timeStamp":"1598778035","hash":"0x9609c87e2f93c8ef3ca0220bddfc1915f0c8b8f5a2661f321528ca367d221ecd","nonce":"201","blockHash":"0x9e73c4409fdd41334e395bc25dbedfce4b25ebe7a322f624f41b607f4644bae5","transactionIndex":"124","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"745496","gasPrice":"214000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000005365541c2e8b6620000","contractAddress":"","cumulativeGasUsed":"9052640","gasUsed":"675786","confirmations":"4244886"},{"blockNumber":"10759363","timeStamp":"1598752730","hash":"0xf3440bd83ba6ac101efc2cb5fbbed89feea3f63a7c478d5a7df8766200ef7305","nonce":"187","blockHash":"0xe9aaf2d56c225bbe762df995f3b3d004230fc6853375458d12754d907bdd9abe","transactionIndex":"71","from":"0x92871d9edeeb57602301b6ad92dab8011ce09e30","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"746789","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000059db36c343fe93a0000","contractAddress":"","cumulativeGasUsed":"5563450","gasUsed":"675497","confirmations":"4246805"},{"blockNumber":"10755260","timeStamp":"1598699133","hash":"0xd0144a3bc4607ed8dc18d06e87cb32dfd350751405d2acc3871e5d2aec31e220","nonce":"62","blockHash":"0xac87a11c5fce1029af6d4735310a993871dcc43f54d574815aa7dd8742eddff6","transactionIndex":"114","from":"0xfbaccdd8867fc5d6c3b4afc3b7edf1c72313ed98","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634434","gasPrice":"117000000377","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5489006","gasUsed":"528897","confirmations":"4250908"},{"blockNumber":"10753412","timeStamp":"1598674252","hash":"0xab1116c5b887643e7ae68719ded04fba29e8517f7819f092e994afbbf1311a36","nonce":"698","blockHash":"0x2c183ec3743c76f419220511736dda3f4b9af8e4dc3a87416f3a5d98ae9663da","transactionIndex":"64","from":"0x30eb4c1a534351662c1ae273b8986862b60fa079","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"804194","gasPrice":"85000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5773370","gasUsed":"683028","confirmations":"4252756"},{"blockNumber":"10744664","timeStamp":"1598558737","hash":"0x1e4b894e737506241a28c40a5549897ad0070cb1014b197203bf7813a71c0b78","nonce":"3","blockHash":"0xc90fd59eca402af1bb5d2a6f1b8f5e7295a067abee44c2681ba8521405eea7a7","transactionIndex":"44","from":"0xf8b6a72ff2a5c51d8df6cdd99ceeef91ac2b9713","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"638366","gasPrice":"59500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4733113","gasUsed":"530839","confirmations":"4261504"},{"blockNumber":"10743756","timeStamp":"1598546865","hash":"0x445e3f021da89c21df3f67406cca818c0ee53f0dc5826ac1af12b6887ad16762","nonce":"117","blockHash":"0xbb5a015f13bba346b380ce717522ed632a97112c49d4d1dc434b3addd7b87d2a","transactionIndex":"210","from":"0x40cfc5e03874a99fa6081fd34064d0ed7d2eb8ee","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634964","gasPrice":"80000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11827222","gasUsed":"530390","confirmations":"4262412"},{"blockNumber":"10743223","timeStamp":"1598539652","hash":"0xa81a315fc68c5f569c539625a0032c64a571694417ac293d1aa4812fcc5d407e","nonce":"81","blockHash":"0x8dc02ee3e3d33475d50fd3885e6cc227c74390f8510d75273315c858a60a8268","transactionIndex":"61","from":"0x877402fb9e6cdfed8f74064b50f76d34e13f331f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"701493","gasPrice":"113000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000050f9f20ec5f7bf00000","contractAddress":"","cumulativeGasUsed":"9213781","gasUsed":"634343","confirmations":"4262945"},{"blockNumber":"10732426","timeStamp":"1598396127","hash":"0xe055b2b8ad1ca6595064a7017d6cdd61c2b38e79cf2d6dec213153adbee5039c","nonce":"53","blockHash":"0xf2ff6550c0e4a6d06599b5a2748167381d9f01b823b7b9c58048777a93856248","transactionIndex":"103","from":"0xad346c7762f74c78da86d2941c6eb546e316fbd0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"923626","gasPrice":"55000001123","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000000ec28b8cdd31b5f623","contractAddress":"","cumulativeGasUsed":"12178182","gasUsed":"837705","confirmations":"4273742"},{"blockNumber":"10727351","timeStamp":"1598328586","hash":"0xa5d0d5311860afba54e26897bcb5a7ba42f5aa0d7841100bfdcf2e9919b130b5","nonce":"36","blockHash":"0x6d93c8be7ef9a62ad3a47c9528f5a4eba08622e38bd26929a25ede79247377a2","transactionIndex":"125","from":"0x3f9314e0ea4a3eb4af9da13755e6d6e8b9f0a967","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"669343","gasPrice":"58000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10444073","gasUsed":"514961","confirmations":"4278817"},{"blockNumber":"10712279","timeStamp":"1598128609","hash":"0xbc9eac8b495b788651f38311cd87293fc3856139c8b54c4affd3fa3b280c3bbf","nonce":"1345","blockHash":"0xfd11cfdefbc470988493e59351af45d3be506a0316c2deccae4b393f2cefee48","transactionIndex":"79","from":"0x8a5d3479663e6927f6c527de8b8c85add4444097","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"917839","gasPrice":"65000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7581833","gasUsed":"787118","confirmations":"4293889"},{"blockNumber":"10705978","timeStamp":"1598045142","hash":"0xbae6e277c187270fffd70cc0b072eaa3c4c24a50faa46e5fb9ced8b09054576a","nonce":"112","blockHash":"0xfb9bcac22f671602b53da2ee3826cf9919285d78182d57c28b7b312ca38a4f9d","transactionIndex":"67","from":"0x0301f1b28081e08dadcab7a2e918af111fa69219","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"813198","gasPrice":"105000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8538774","gasUsed":"688940","confirmations":"4300190"},{"blockNumber":"10704121","timeStamp":"1598020290","hash":"0x89792704847ff3ffe7852f9cad65c1629c1d2f77f2202ffdde7e9dd074c125d4","nonce":"2524","blockHash":"0xd5feabe7ed3aeef45ef0b8f305109d1f493edb6ce83ce602db5607c125900143","transactionIndex":"221","from":"0x5bc124b3f28c301f497d3d44eb5c3225651143cb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635887","gasPrice":"219000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12052395","gasUsed":"529737","confirmations":"4302047"},{"blockNumber":"10703186","timeStamp":"1598007873","hash":"0xcec89b61ed46e3f3a2d0bfe10072291cbb9e4e0de53996b182cf87486c599668","nonce":"297","blockHash":"0x1f988dfd03562d5888781428ed7558badaa8e9cd29fce4239f7400b51c97ba66","transactionIndex":"126","from":"0x8924b67270af26f1157efdd8b1229f468f9b7623","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"849971","gasPrice":"195000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8250306","gasUsed":"725058","confirmations":"4302982"},{"blockNumber":"10698347","timeStamp":"1597943556","hash":"0x77a0651809e1dbeb34513dffabe58458766b345678ac3cf367ce93d09262803f","nonce":"245","blockHash":"0x0606aae6cdea0cfd66af1dae78b7dedb2784651f66ecfe0570b26c97c33e4125","transactionIndex":"158","from":"0x3f9dc36db04740af8700adec2cc317b9b9eacef5","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"818371","gasPrice":"138000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7763265","gasUsed":"697379","confirmations":"4307821"},{"blockNumber":"10692984","timeStamp":"1597872816","hash":"0x6b6c5d472622f6d9cbdd31df9a4ad6bc643a0d7337edb3d06f8e775f9964705e","nonce":"189","blockHash":"0x438ee52752411ca7cf651cc7d758fbe6d3a3581f1bba1f700c4b8a06c0b9b5ee","transactionIndex":"83","from":"0xd352eeb43ed458a7cb069f6364cabfcb6e158f21","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"803055","gasPrice":"85000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9100552","gasUsed":"683476","confirmations":"4313184"},{"blockNumber":"10688315","timeStamp":"1597810066","hash":"0x15b44fbbc38580745b3ba337694407d8ac4541a198dba1abc0e32b319afee22e","nonce":"242","blockHash":"0xfbae299a2878e30317f10c80875f0cfe2d9591c52d5a5d150e8b4f0b744302a1","transactionIndex":"184","from":"0xae6dcd07fac9d7cccc98509120c1071048cdd8a1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48567","gasPrice":"110000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b300000000000000000000000056ac1efc17ecde083889520137b0cfb30d2cf384000000000000000000000000000000000001bc16d674ec7ff21f494c589c0000","contractAddress":"","cumulativeGasUsed":"12481924","gasUsed":"44152","confirmations":"4317853"},{"blockNumber":"10682703","timeStamp":"1597736835","hash":"0xbf2a25b7e2f48d6f88dfe96f5c05fa86cd263c8b0a1504ad5fcbe889558e5edf","nonce":"28","blockHash":"0x1eabe399466284a70537d54d9be51efb6aea9409a8dfa54e53d24546462d80e7","transactionIndex":"179","from":"0x07c02e53f05dae5b9317ad179181e0a2d931f057","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634391","gasPrice":"106950000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000002b46b6f2992b941d8415","contractAddress":"","cumulativeGasUsed":"10887326","gasUsed":"574524","confirmations":"4323465"},{"blockNumber":"10673440","timeStamp":"1597612066","hash":"0xd931b5209555e17e24e498802622190d55c70a5a6768ab89c3d05fe841941975","nonce":"880","blockHash":"0x9ff0b301c6fc288705b45e698768990bc3a0643cbf936a1a35b8b1e4a0eb9e28","transactionIndex":"142","from":"0x843389f32e88c57ec96994d0742a3fe9b248e10e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"653386","gasPrice":"82000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11711690","gasUsed":"547576","confirmations":"4332728"},{"blockNumber":"10673369","timeStamp":"1597611251","hash":"0x826fa1bc55dbcd4766697504eacac024b7b173068c1ac424bd381f71475f7651","nonce":"234","blockHash":"0xfb2b4cf41f15500d88f067c03eb3ceae37755b7b1d321f3601070ae832834a7d","transactionIndex":"134","from":"0xae6dcd07fac9d7cccc98509120c1071048cdd8a1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"48554","gasPrice":"89000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000207754bd0044bad0c7021ca06643c26d59d8ad8f000000000000000000000000000000000001bc16d674ec7ff21f494c589c0000","contractAddress":"","cumulativeGasUsed":"7341748","gasUsed":"44140","confirmations":"4332799"},{"blockNumber":"10672063","timeStamp":"1597593940","hash":"0x4fbeb673db09d8a04b1864f8bdb586478fc9e1c275f3e557839129ae57f7e92f","nonce":"287","blockHash":"0x28dacfdfed4992da4f97291f67bf85e8537361cd494f2351a7182503d7c75cf9","transactionIndex":"127","from":"0x488ed54ca0ae6d64683286278be99e9c3a9c203e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"749173","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10454367","gasUsed":"633815","confirmations":"4334105"},{"blockNumber":"10665994","timeStamp":"1597512444","hash":"0x15edf69b16be429fd24c57819d3645cecf396d7a64e37b6e0d2882da16472328","nonce":"116","blockHash":"0x640cf331d5ccf4f6e8e344f3096e3b20094b5e2e4f9c3d837ad3ff27c021b7a1","transactionIndex":"91","from":"0x66803b697c2a98cc832f9d9cd06371b07532c9c8","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"620260","gasPrice":"120000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000b42b0f2bb6c5988000","contractAddress":"","cumulativeGasUsed":"5578525","gasUsed":"561162","confirmations":"4340174"},{"blockNumber":"10661642","timeStamp":"1597454499","hash":"0xfb0956f4e8a72e2c10583f16816759741c94b57546054857f39b28acc0ce78ca","nonce":"1174","blockHash":"0x76a42ef47d04aabd99e4717009c52e001933b6496ca4acdbbd006f8a81697594","transactionIndex":"215","from":"0x76a1cc126b5f4a62c6aa2a04adf1de012db894aa","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"637211","gasPrice":"109000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11507359","gasUsed":"532724","confirmations":"4344526"},{"blockNumber":"10633294","timeStamp":"1597077393","hash":"0x7477f2f67c013d417b7644eef94c1597de90114126c6d27bdaa02b3d707b7997","nonce":"7","blockHash":"0x7e6fa3b9cdfe81ccbd0649a4084dda45a3579d13168f52d6f1b7716e88fbe134","transactionIndex":"200","from":"0xf15a150ae70a1b3cdeb30bf64fd77efbdb73ab6d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"618860","gasPrice":"135000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9697775","gasUsed":"121315","confirmations":"4372874"},{"blockNumber":"10633294","timeStamp":"1597077393","hash":"0x192fd493c47175d6bd4d0ef2c53d8e0cb852862a1056345858de9f2da9290c42","nonce":"6","blockHash":"0x7e6fa3b9cdfe81ccbd0649a4084dda45a3579d13168f52d6f1b7716e88fbe134","transactionIndex":"199","from":"0xf15a150ae70a1b3cdeb30bf64fd77efbdb73ab6d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"620512","gasPrice":"133000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9576460","gasUsed":"121315","confirmations":"4372874"},{"blockNumber":"10633294","timeStamp":"1597077393","hash":"0x3d2d745d49080b773b1a1d55862d84d6ab6304dd7b6f83b67aaedf1d4b9edb45","nonce":"5","blockHash":"0x7e6fa3b9cdfe81ccbd0649a4084dda45a3579d13168f52d6f1b7716e88fbe134","transactionIndex":"198","from":"0xf15a150ae70a1b3cdeb30bf64fd77efbdb73ab6d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"619674","gasPrice":"120000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9455145","gasUsed":"515465","confirmations":"4372874"},{"blockNumber":"10624371","timeStamp":"1596958249","hash":"0x4aa2ed1cffad574c77b0ec060b82e32c2156386ddefa80676a36e42977ee9b8e","nonce":"620","blockHash":"0xfac75f729d1f85d06bf0fa8de50ace84f9ebb8c7c5f4ecb98e2ded5485666c6c","transactionIndex":"83","from":"0xef4f9245d4190711e3471f5ea5f5ee15daa5a9f9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"917855","gasPrice":"64000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5489578","gasUsed":"786096","confirmations":"4381797"},{"blockNumber":"10614761","timeStamp":"1596830534","hash":"0x827150f8acd25f552f534f9edbb7a313011de8661b868d989bdf54ff2450023b","nonce":"749","blockHash":"0xfb5087c2f76603e95d9c38bfee89afaf975df148c1eb5eb5af4033430caf4164","transactionIndex":"35","from":"0x40dfc27ca78b6fbcfb78e91d3d2426cf6a281e39","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"973611","gasPrice":"42000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4233171","gasUsed":"851728","confirmations":"4391407"},{"blockNumber":"10612745","timeStamp":"1596804003","hash":"0xd567f8a5b17acc6443693143e71285cb3c6df2509f3e2f800e8c8f3c09196ac1","nonce":"199","blockHash":"0xd51cff25cee58d86db7aa4f9479adc1f92733a979888c74c5fd62d678c17f629","transactionIndex":"82","from":"0x60f56edec1abe231baff54e0a6ea13cf1ab7b452","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"607232","gasPrice":"94500000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000021e2ce7626671b77000","contractAddress":"","cumulativeGasUsed":"3877446","gasUsed":"550403","confirmations":"4393423"},{"blockNumber":"10605918","timeStamp":"1596712749","hash":"0x89e64b41bb45d76215b7b200b1399049fd80fae36573d477c9d5120747dbcba8","nonce":"28","blockHash":"0xfc9e9dddd415de7f312220394d276fc8a1065caefdd495febf757b8ad15bb06e","transactionIndex":"124","from":"0x06b3ee4eb3f61d03f918e2942979e8333d5b52e9","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"699004","gasPrice":"36000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9782073","gasUsed":"587206","confirmations":"4400250"},{"blockNumber":"10596046","timeStamp":"1596581188","hash":"0x6aee647eac810174a376427e0d4a02b4e3ebe279e548f42c69aeccf69316ed41","nonce":"2275","blockHash":"0x5315b0572cf2f08832315253f5fda1f5803c53fc8f9add86268124ecec3eb5ab","transactionIndex":"82","from":"0x5bc124b3f28c301f497d3d44eb5c3225651143cb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"737096","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7718111","gasUsed":"621746","confirmations":"4410122"},{"blockNumber":"10595675","timeStamp":"1596576034","hash":"0xb543c00f423591791b41bbb13aa39d652b841355880d05532d80adbaf3925749","nonce":"570","blockHash":"0x17bedfe91302dd7fedd41ffd24c7d62f80b7025000d975bc0764c19a6ccb516c","transactionIndex":"63","from":"0xd2a5317963ce43ff5e8ba6faf0937af69c0cc5d1","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"669016","gasPrice":"34000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5222688","gasUsed":"560970","confirmations":"4410493"},{"blockNumber":"10591910","timeStamp":"1596525845","hash":"0xb11f2ded80b106f91a15cf21c690e2ef5832ce1bdaedf98cb3a07a241713deec","nonce":"62","blockHash":"0x746afd9dc14abb5aab8610cdeb6f3ee77814bbc707ce4e72ed4ec31ded90701b","transactionIndex":"151","from":"0x5e667d65d45cd511e7cdfbbc592196631c86c773","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635705","gasPrice":"58000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10762397","gasUsed":"121315","confirmations":"4414258"},{"blockNumber":"10591910","timeStamp":"1596525845","hash":"0xc31ddb2087974b883729068a165e762c91ca210d7957deb232bff56e8189e682","nonce":"61","blockHash":"0x746afd9dc14abb5aab8610cdeb6f3ee77814bbc707ce4e72ed4ec31ded90701b","transactionIndex":"150","from":"0x5e667d65d45cd511e7cdfbbc592196631c86c773","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635218","gasPrice":"53000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10641082","gasUsed":"121315","confirmations":"4414258"},{"blockNumber":"10591910","timeStamp":"1596525845","hash":"0x6ed570d6851fdd7051b6895d6c5e19c07f7c716ac05a0d7c0a1668e7b815fda9","nonce":"60","blockHash":"0x746afd9dc14abb5aab8610cdeb6f3ee77814bbc707ce4e72ed4ec31ded90701b","transactionIndex":"149","from":"0x5e667d65d45cd511e7cdfbbc592196631c86c773","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634295","gasPrice":"39000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10519767","gasUsed":"529672","confirmations":"4414258"},{"blockNumber":"10591596","timeStamp":"1596521425","hash":"0xcbea0f7e87f33fc30dc842cbfb8d725d72942ad6116851b1f1b730d6506340f1","nonce":"71","blockHash":"0x802fc5f8381b1288ec90a0102083b426effb22b294cc995837f19ecfef69a0b1","transactionIndex":"92","from":"0x94f939704e811d9e65fc57d11c836c4809cd116c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"734157","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000008b555c9e814f9da49e","contractAddress":"","cumulativeGasUsed":"9970804","gasUsed":"663159","confirmations":"4414572"},{"blockNumber":"10591241","timeStamp":"1596516697","hash":"0xf068935d9f77f073c5aed55e62f35280a1e6e08444189612c3de9551667aab0c","nonce":"4070","blockHash":"0x6088c63803191dd3bccde3fdb89755c8270dc148f39bec7451724cce3dcb59a0","transactionIndex":"23","from":"0xd77e09b22d28eab54fe5a4d7294726815048d085","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"654139","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4628633","gasUsed":"539760","confirmations":"4414927"},{"blockNumber":"10591181","timeStamp":"1596515863","hash":"0x2060c30183dd64c30f7d8edfe4ea0e33e812f48170c09bb3862d3e312b67fd83","nonce":"4069","blockHash":"0x36fa3958d7baa574380f8a93093bfe1e3f8c2ce5bbfd71d91533b875b7ac80c9","transactionIndex":"64","from":"0xd77e09b22d28eab54fe5a4d7294726815048d085","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"594296","gasPrice":"50000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4434046","gasUsed":"589742","confirmations":"4414987"},{"blockNumber":"10589722","timeStamp":"1596496317","hash":"0xbf3cce1fea9874910860973c06afdac48d789d57c9656cff6df2a72eafb9d020","nonce":"53","blockHash":"0x96647e4ebefd29f766ba7f6b20f37648f8e40d50466acac88c746a5e3b52251e","transactionIndex":"44","from":"0x94f939704e811d9e65fc57d11c836c4809cd116c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"814508","gasPrice":"35000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8819223","gasUsed":"691845","confirmations":"4416446"},{"blockNumber":"10589552","timeStamp":"1596494065","hash":"0x01261ec6b510d787fc8a094696c8713cf5ad351c6e78301bef11aa4bb7ed3f62","nonce":"211","blockHash":"0x15ed129272aecee3e10671b232b9382ef60073aec3ed661f3407c9fb424d9472","transactionIndex":"4","from":"0x1b98e3599fbbb729635a7c8852e7fe0a54ae20fd","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"1136296","gasPrice":"78030000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75000000000000000000000000000000000000000000000088ef349ae371306000","contractAddress":"","cumulativeGasUsed":"1143615","gasUsed":"1030556","confirmations":"4416616"},{"blockNumber":"10582418","timeStamp":"1596398573","hash":"0xcdec964ebce0f3d23575e4fe104a9a27e1205ec372e42ff7815d913d72b7aaca","nonce":"78","blockHash":"0x1b79ed88f8ac958148a8b301347aeb81ededee090054b567247784ccb9185fb0","transactionIndex":"178","from":"0x3820977f01255da9ca6c7570e9ad54ecddd59fa4","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"665388","gasPrice":"40000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11168624","gasUsed":"558027","confirmations":"4423750"},{"blockNumber":"10574689","timeStamp":"1596295837","hash":"0x48cb35cfe4d38bba717afa40367c17c830aaff56f442c3bab680821da5cbaddf","nonce":"23","blockHash":"0x59ba8659a8bb7ac6d9c1676790b4804c0365c4ca0a186e5edac1578f69252a66","transactionIndex":"152","from":"0x8d11da7b584c9901cf8dd401e4b34e73a0520585","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"619978","gasPrice":"63000002694","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000000de0b6b3a7640000","contractAddress":"","cumulativeGasUsed":"11992088","gasUsed":"522628","confirmations":"4431479"},{"blockNumber":"10574689","timeStamp":"1596295837","hash":"0x72c8984d9ef6346860c0d6d3c301397a5168e5b4ac48cf1c8aa24a0341a9f1d2","nonce":"22","blockHash":"0x59ba8659a8bb7ac6d9c1676790b4804c0365c4ca0a186e5edac1578f69252a66","transactionIndex":"151","from":"0x8d11da7b584c9901cf8dd401e4b34e73a0520585","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"619067","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000000de0b6b3a7640000","contractAddress":"","cumulativeGasUsed":"11469460","gasUsed":"560559","confirmations":"4431479"},{"blockNumber":"10567284","timeStamp":"1596197860","hash":"0xe448a51d4c9a58634d921c9968215b9bd1ea0e0600144ac64984fcf268771cca","nonce":"535","blockHash":"0x43c35b21a06a6b660fb7ec078eb2743a84659c86712374c649c0230699eb8924","transactionIndex":"107","from":"0x8e9833bb081ea232fd970250ed52af317836c986","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"735863","gasPrice":"90000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10644179","gasUsed":"591804","confirmations":"4438884"},{"blockNumber":"10563504","timeStamp":"1596147106","hash":"0x379bb50f2d62c62dd8795ff762e609d737dc921f9f2ccd67260c3af87becb983","nonce":"462","blockHash":"0x0e710525016f61488d65b0a0a6a4a9e6d13fd002de055e5f8bd710fd7783561c","transactionIndex":"86","from":"0x3e17fac953de2cd729b0ace7f6d4353387717e9e","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"817441","gasPrice":"50000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8374055","gasUsed":"693309","confirmations":"4442664"},{"blockNumber":"10561196","timeStamp":"1596115677","hash":"0x298631dcc7de7ff0b55073868559c36de634751d91150fc9e43d699b20b67651","nonce":"161","blockHash":"0x450aab90704d8151af6aead737bc5e76c9bccd8d75b27848de9c044a26150e57","transactionIndex":"136","from":"0xf050c442cca8f59cf74421b8617e9241f6bda18f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"866927","gasPrice":"64000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10390357","gasUsed":"740980","confirmations":"4444972"},{"blockNumber":"10559980","timeStamp":"1596098470","hash":"0x4432ad7418756564899eaa885a51d4fe1c4db8df3272595d43ebe02697665707","nonce":"8","blockHash":"0x6f4366cd208049cbe70ce78df718ba1368285ba2dd7e3a2277a625433808bda0","transactionIndex":"148","from":"0x1689560b668a2f063e2aa260d909a8d0bea55e7d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"638414","gasPrice":"77000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000003635c9adc5dea00000","contractAddress":"","cumulativeGasUsed":"10746294","gasUsed":"577443","confirmations":"4446188"},{"blockNumber":"10558967","timeStamp":"1596084852","hash":"0xa6d32fcb1464bc6fa1fc2cbe285171562fb731c92eb36c92177e3718dece726b","nonce":"920","blockHash":"0x2e14e48ddcd5bac76add869518a5cf3eb9621bf2c783806e50a85ae08cd79b79","transactionIndex":"44","from":"0x684f49bc1e04339d84f2370f14dc1491a3b4f113","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"631561","gasPrice":"58000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"4929504","gasUsed":"527916","confirmations":"4447201"},{"blockNumber":"10557943","timeStamp":"1596071486","hash":"0x0a8f3b16746fc3afeb758aa90601697f04bc787fd266bf663f494f609263bfa4","nonce":"9","blockHash":"0xc59e0c69fb677665121dccc3dec5aae0510ce170d1ff799a6ad75db22f9ae7f2","transactionIndex":"146","from":"0x14fdf8d4997c348ba786dcca63c96e3adc209972","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"633067","gasPrice":"36648202441","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11433217","gasUsed":"121405","confirmations":"4448225"},{"blockNumber":"10557076","timeStamp":"1596059820","hash":"0x47c33155861479c00ea11a9a4ed7642e31b4b1d122bac183c2e108bae9c41ce3","nonce":"8","blockHash":"0x85cd05ea7f448a051f9ac2182b5a84db753f1d96fe8633bc5344c9af89aff187","transactionIndex":"36","from":"0x14fdf8d4997c348ba786dcca63c96e3adc209972","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"638366","gasPrice":"51000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2513472","gasUsed":"531557","confirmations":"4449092"},{"blockNumber":"10555537","timeStamp":"1596039154","hash":"0xe342ee9a9da1be88049788d96fa5355e9a469bd5864d7479adba0ac4704d310c","nonce":"7","blockHash":"0x5f24d8dd547bd67f74ed838709d87b29b91a8a5f8d25b127c1d944139646cd99","transactionIndex":"108","from":"0x14fdf8d4997c348ba786dcca63c96e3adc209972","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"577914","gasPrice":"85000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8281008","gasUsed":"572920","confirmations":"4450631"},{"blockNumber":"10544756","timeStamp":"1595895950","hash":"0x4e13b9439631991e812fd46f895c38c293a4c06c9175e2f40b31e340c8574e04","nonce":"2","blockHash":"0x0f68c43ce1712451e539a70bdc42c44ef0dbc53fe2d65f34f3ec3e13f7f69f12","transactionIndex":"125","from":"0x83e33741229081704bcdb3bb8e6309ae2044ca4f","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635378","gasPrice":"51000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12003340","gasUsed":"530400","confirmations":"4461412"},{"blockNumber":"10543456","timeStamp":"1595879097","hash":"0x6b19fa5732f453301a24f85b3a724d5af9646d0f3fc2052be7f1aa12e1d427d2","nonce":"953","blockHash":"0xe2a7c0e82e3929b5ab0bca877f41cc882c109a0d1792494320331ab6e452f4f3","transactionIndex":"231","from":"0xd30391e21741c54c32987bcfca3d880e6d261cb0","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"648699","gasPrice":"100000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10804625","gasUsed":"542710","confirmations":"4462712"},{"blockNumber":"10543442","timeStamp":"1595878902","hash":"0x054f66c6e90a6501f22b2348fd2c96c132c026c5dfe2d3d1fa4f855520fe4a12","nonce":"5","blockHash":"0x6a464920c57e1c9d6c35c10b38f9f6568f9cde87f2909cc00429359638f455ef","transactionIndex":"57","from":"0x71bb65b8cce65f8603361652f231b2698d6f53c3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"635875","gasPrice":"89000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"3019479","gasUsed":"531203","confirmations":"4462726"},{"blockNumber":"10543228","timeStamp":"1595875821","hash":"0xa73c7820a28d6a14002009bf61198937b3f5c55336fc37bc181f3df489edbf5f","nonce":"4","blockHash":"0x66ac26272c54dd06839ada3a365149bb6af6ad099ca15a88c2d6c8c7e0d92b56","transactionIndex":"209","from":"0x71bb65b8cce65f8603361652f231b2698d6f53c3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"189563","gasPrice":"86000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12246382","gasUsed":"186028","confirmations":"4462940"},{"blockNumber":"10543228","timeStamp":"1595875821","hash":"0xe3859b91218e63a85e0a64640dcfea4517ea25a29125c8ac72c63db10bb990b3","nonce":"3","blockHash":"0x66ac26272c54dd06839ada3a365149bb6af6ad099ca15a88c2d6c8c7e0d92b56","transactionIndex":"208","from":"0x71bb65b8cce65f8603361652f231b2698d6f53c3","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"63556","gasPrice":"77000000000","isError":"1","txreceipt_status":"0","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"12060354","gasUsed":"63556","confirmations":"4462940"},{"blockNumber":"10542722","timeStamp":"1595868538","hash":"0x1823483803b9c0eb0d33e4e9c106dc51ce219a99d9ad09478cdba8eb362f4d75","nonce":"2320","blockHash":"0x8640403b8c062b961e3c60fa564ac754568d0d890c15a87bff610f91158d6219","transactionIndex":"73","from":"0x86e283cab263b49256924d4232532ae4531ff0bb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"765009","gasPrice":"137000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7301166","gasUsed":"647637","confirmations":"4463446"},{"blockNumber":"10533613","timeStamp":"1595746922","hash":"0xea92c76b1c84b08f3a3c6357a869c335040c71d029064cc932f97fb336c28631","nonce":"1072","blockHash":"0xe41d2e87c71e1a12f116f44dedec7429d32bde184b0cfa8b80070aa27915151c","transactionIndex":"43","from":"0x6040899959a8861e93238265376b27072416596d","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"670754","gasPrice":"55000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"2473268","gasUsed":"561035","confirmations":"4472555"},{"blockNumber":"10525128","timeStamp":"1595632440","hash":"0xdc38635639455ebad4046ef401c43f6360171d6dfa1e41f46b95ab3d21165c19","nonce":"162","blockHash":"0x1a92413d3072ec329316aa7ef640bd17012029e651d18af1a3bf321999eb56d0","transactionIndex":"106","from":"0xaf616daba40f81b75af5373294d4dbe29dd0e0f6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52939","gasPrice":"64000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000083d622790eebdc0dea4d9bd83557bbe0f7ca8310000000000000000000000000000000000000000000005b8d2cbcb356d4d4758","contractAddress":"","cumulativeGasUsed":"10618765","gasUsed":"29116","confirmations":"4481040"},{"blockNumber":"10524910","timeStamp":"1595629347","hash":"0x74d5018a0b0129d6d07d033750541b0b834b8973a1f29febb06c546ffa4dba3c","nonce":"160","blockHash":"0x46078971371b4a3f601b85c0faf6cc1c156cbeee44505b3b20f5871e3328faad","transactionIndex":"193","from":"0xaf616daba40f81b75af5373294d4dbe29dd0e0f6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52939","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000083d622790eebdc0dea4d9bd83557bbe0f7ca8310000000000000000000000000000000000000000000005b8d2a7017fdf09b216","contractAddress":"","cumulativeGasUsed":"12020885","gasUsed":"24916","confirmations":"4481258"},{"blockNumber":"10524907","timeStamp":"1595629295","hash":"0xbeac16699dd892be8c40e86cfacd8bbc11c8b0199fb3d6d6c240e045cbb8be87","nonce":"159","blockHash":"0x5bc37d3b10926a296007c4e69fe12e6181bade46227632ba3ca09f86487afafd","transactionIndex":"161","from":"0xaf616daba40f81b75af5373294d4dbe29dd0e0f6","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"52939","gasPrice":"63000000000","isError":"0","txreceipt_status":"1","input":"0x095ea7b3000000000000000000000000083d622790eebdc0dea4d9bd83557bbe0f7ca8310000000000000000000000000000000000000000000005b8d2a7017fdf09b216","contractAddress":"","cumulativeGasUsed":"11993112","gasUsed":"44116","confirmations":"4481261"},{"blockNumber":"10521638","timeStamp":"1595586305","hash":"0xbb8c8c739ca9179fdf6d2d49fd55b11dab5b5bfe62cacf1cefb7ee202721b91b","nonce":"1333","blockHash":"0xc966f0690ecd3df767fafc9cc95782692be6bf54ee2ac51c3270bd51240eb47d","transactionIndex":"131","from":"0xf748879edbe8cca140940788163d7be4d2a2e46a","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"634890","gasPrice":"81377343907","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"8043817","gasUsed":"529223","confirmations":"4484530"},{"blockNumber":"10512710","timeStamp":"1595467442","hash":"0xd112ddf876e0d8a2b6e2e66638a12c563125028021f0a2d3bc11f668ae8b4c9a","nonce":"14","blockHash":"0x77178adfbbfbd69341db070bdd6c9bbf440766340694dd2f6c238049b5fde041","transactionIndex":"91","from":"0xe9a1039f14d058019ee2cc1f44cf83623f971e8b","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"637942","gasPrice":"53000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6882098","gasUsed":"531203","confirmations":"4493458"},{"blockNumber":"10511434","timeStamp":"1595450836","hash":"0xad707c5b44a442381c2a1db5588c978c29f6e96f4b67ed8cd0d7740cd6cea070","nonce":"2238","blockHash":"0x3110792d8bbeae1145c2c61eecfe3e2c4540f63175df9b16ccb5642a5294ac29","transactionIndex":"121","from":"0x86e283cab263b49256924d4232532ae4531ff0bb","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"797449","gasPrice":"46000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7492378","gasUsed":"678535","confirmations":"4494734"},{"blockNumber":"10505444","timeStamp":"1595370211","hash":"0xb060051af0b9202d9d742af75fd824f18fa0a72c1cfdb3286a2ca27b8e5e6195","nonce":"210","blockHash":"0x51091d53eae294e5c3cd26e83b07579eeffd923c154b7ee9997cb367f251366b","transactionIndex":"74","from":"0x8a2ff4f48a2aef354d96339946b03fd740293bce","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"636533","gasPrice":"37000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7995712","gasUsed":"530679","confirmations":"4500724"},{"blockNumber":"10501389","timeStamp":"1595315882","hash":"0x37fd3128a1e0e30d4f90463bf171905e0e55b2a70e3512dc9e9cdf266ef6ac96","nonce":"226","blockHash":"0x34c4c8daf80e27a2d497e66018af2747a4046e215a5eea2ea008287d3da7a335","transactionIndex":"199","from":"0x40f3cbc8f1a5265bfe7ee35d05f79e2828fb6120","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"618275","gasPrice":"76000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10886073","gasUsed":"515315","confirmations":"4504779"},{"blockNumber":"10499826","timeStamp":"1595294301","hash":"0xcebd92022edc89dad346b6d2c052aa029f8f5741633d90d61a7f01e9bf140084","nonce":"777","blockHash":"0x31d71bd2eea3095ccd97254b3bda8321753f80d04611310ebe53e215f1931761","transactionIndex":"129","from":"0x8a5d3479663e6927f6c527de8b8c85add4444097","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"824249","gasPrice":"37000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"11424499","gasUsed":"700548","confirmations":"4506342"},{"blockNumber":"10494462","timeStamp":"1595222164","hash":"0x3c95e242f2be5b326ef4a8ea88d0b5e250111fa740045f08e2017793193b9212","nonce":"23","blockHash":"0xb2a310e4f2a2de7a2ee44bb0b7623ba58eb6637094bd701490b998244b85a0b6","transactionIndex":"62","from":"0x8cbd15f804a3b7ebc7af5ef94e18ecdba7969573","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"636702","gasPrice":"54010000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"7874429","gasUsed":"530829","confirmations":"4511706"},{"blockNumber":"10487076","timeStamp":"1595123622","hash":"0x355aa03ee2848975b02224e5bc0f5a899078fd2c1f697efa7e50d3a915e1af76","nonce":"4010","blockHash":"0x6db4c0d55a479502deeb0a76c51b9f00e71496b5d961b53e7e1ddd95e8b58111","transactionIndex":"65","from":"0xd77e09b22d28eab54fe5a4d7294726815048d085","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"618593","gasPrice":"33000001459","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"5370914","gasUsed":"513784","confirmations":"4519092"},{"blockNumber":"10486525","timeStamp":"1595115961","hash":"0xbc9ec2e8c45d710cac87f9788fbd0a38871838787ef637808804ca64c196317b","nonce":"18","blockHash":"0xf2235ec7480f2c9e69e108644e87c2d0977de9f26c32e8a78c83ec9c621f75fa","transactionIndex":"32","from":"0x30787aef9dec5e6b939f76de744af542b0586658","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"653726","gasPrice":"29000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"6519813","gasUsed":"546399","confirmations":"4519643"},{"blockNumber":"10484017","timeStamp":"1595082923","hash":"0x307690793aad70ef609aa148a05d17566f8e7ed7808c7e272959ea7f2a6831e0","nonce":"8","blockHash":"0xbc8c95dddd9fa5d7c583054f5c45dab3fe04656f6b53ff6c62b49c5935cce251","transactionIndex":"57","from":"0x62686aa71743abbd049c9d2606b36831ba9b34cf","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"649372","gasPrice":"72000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a750000000000000000000000000000000000000000000000000de0b6b3a7640000","contractAddress":"","cumulativeGasUsed":"6967045","gasUsed":"577339","confirmations":"4522151"},{"blockNumber":"10479912","timeStamp":"1595028374","hash":"0xa9f8149a6493f81feecd7fee9991c56594bb45fd806c9464055a3f4ee795cb05","nonce":"14","blockHash":"0x6e2cb8973d0b712de565b4824ea5e2235039255f111e33aa390f8b8ca0318000","transactionIndex":"118","from":"0x30787aef9dec5e6b939f76de744af542b0586658","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"636886","gasPrice":"25000001123","isError":"0","txreceipt_status":"1","input":"0xdb006a7500000000000000000000000000000000000000000000048bb411f3459ce36ea8","contractAddress":"","cumulativeGasUsed":"11799455","gasUsed":"577858","confirmations":"4526256"},{"blockNumber":"10474051","timeStamp":"1594950054","hash":"0x6557f12762608952b32589a70e6b4d5a0afe87e12fa7899b5ab6713e01737854","nonce":"187","blockHash":"0x3e8fd6e6f804ce6073d9fd50c0aed1e7c37221d53f6988cdb13f06a1334b2fc2","transactionIndex":"114","from":"0x7fdf5c002419e1cd36c4567d01fabeecde68ab7c","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"618604","gasPrice":"33600001750","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"10146874","gasUsed":"514158","confirmations":"4532117"},{"blockNumber":"10473159","timeStamp":"1594937851","hash":"0xb7ddeb4203b3077709b60669436b7e37cbe18e6a1ebda4d13d48c133281a46f6","nonce":"240","blockHash":"0xc796750299d8ab62a0df3fba7789c8ce0e4b4f48c4c6a7b3279f2d620c8efe8b","transactionIndex":"88","from":"0x876b0672b481046737b49806c76192977fa7fa88","to":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","value":"0","gas":"614957","gasPrice":"33000000000","isError":"0","txreceipt_status":"1","input":"0xdb006a75ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","contractAddress":"","cumulativeGasUsed":"9677709","gasUsed":"509554","confirmations":"4533009"}]}
{"addr":"0x712db54daa836b53ef1ecbb9c6ba3b9efb073f40","abi":"[{\"inputs\":[{\"internalType\":\"contract LendingPoolAddressesProvider\",\"name\":\"_addressesProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_underlyingAssetDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toIndex\",\"type\":\"uint256\"}],\"name\":\"BalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"BurnOnLiquidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"InterestRedirectionAllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"InterestStreamRedirected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"MintOnDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalanceAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalanceRemoved\",\"type\":\"uint256\"}],\"name\":\"RedirectedBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_MAX_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowInterestRedirectionTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnOnLiquidation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getInterestRedirectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRedirectedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"isTransferAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintOnDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"principalBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectInterestStream\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectInterestStreamOf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferOnLiquidation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"underlyingAssetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","bytecode":"0x608060405234801561001057600080fd5b50600436106101735760003560e01c80635eae177c116100de578063a9059cbb11610097578063db006a7511610071578063db006a75146104f3578063dd62ed3e14610510578063ee9907a41461053e578063f866c3191461056457610173565b8063a9059cbb14610499578063c634dfaa146104c5578063d0fc81d2146104eb57610173565b80635eae177c146103df57806370a082311461040b57806389d1a0fc1461043157806394362e8b1461043957806395d89b4114610465578063a457c2d71461046d57610173565b806323b872dd1161013057806323b872dd146102c3578063313ce567146102f9578063325a9b131461031757806339509351146103455780633edb7cb814610371578063445e80101461039d57610173565b806306fdde0314610178578063095ea7b3146101f55780630e49072d1461023557806312c87c2d1461025d57806318160ddd146102835780631d51e7cf1461029d575b600080fd5b61018061059a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102216004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610631565b604080519115158252519081900360200190f35b61025b6004803603602081101561024b57600080fd5b50356001600160a01b0316610648565b005b61025b6004803603602081101561027357600080fd5b50356001600160a01b0316610655565b61028b6106f4565b60408051918252519081900360200190f35b61028b600480360360208110156102b357600080fd5b50356001600160a01b03166107b6565b610221600480360360608110156102d957600080fd5b506001600160a01b038135811691602081013590911690604001356107d5565b61030161082c565b6040805160ff9092168252519081900360200190f35b61025b6004803603604081101561032d57600080fd5b506001600160a01b0381358116916020013516610835565b6102216004803603604081101561035b57600080fd5b506001600160a01b03813516906020013561089b565b61025b6004803603604081101561038757600080fd5b506001600160a01b0381351690602001356108d7565b6103c3600480360360208110156103b357600080fd5b50356001600160a01b03166109cc565b604080516001600160a01b039092168252519081900360200190f35b610221600480360360408110156103f557600080fd5b506001600160a01b0381351690602001356109ea565b61028b6004803603602081101561042157600080fd5b50356001600160a01b0316610a85565b6103c3610b38565b61025b6004803603604081101561044f57600080fd5b506001600160a01b038135169060200135610b4c565b610180610c21565b6102216004803603604081101561048357600080fd5b506001600160a01b038135169060200135610c82565b610221600480360360408110156104af57600080fd5b506001600160a01b038135169060200135610cbe565b61028b600480360360208110156104db57600080fd5b50356001600160a01b0316610ccb565b61028b610cd6565b61025b6004803603602081101561050957600080fd5b5035610cdc565b61028b6004803603604081101561052657600080fd5b506001600160a01b0381358116916020013516610f16565b61028b6004803603602081101561055457600080fd5b50356001600160a01b0316610f41565b61025b6004803603606081101561057a57600080fd5b506001600160a01b03813581169160208101359091169060400135610f5c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b505050505090505b90565b600061063e338484610fb5565b5060015b92915050565b61065233826110a1565b50565b6001600160a01b03811633141561069d5760405162461bcd60e51b8152600401808060200182810382526025815260200180611d8d6025913960400191505060405180910390fd5b3360008181526009602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917fc2d6a42a9d5273283f73009a07aacfb043f2f91173a8d9d33b504afe898db08b91a350565b6000806106ff611290565b90508061071057600091505061062e565b600b546005546040805163d15e005360e01b81526001600160a01b036101009093048316600482015290516107b0936107ab93169163d15e0053916024808301926020929190829003018186803b15801561076a57600080fd5b505afa15801561077e573d6000803e3d6000fd5b505050506040513d602081101561079457600080fd5b505161079f84611296565b9063ffffffff6112ac16565b6112f7565b91505090565b6001600160a01b0381166000908152600860205260409020545b919050565b60006107e2848484611310565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461082291869161081d908663ffffffff61137f16565b610fb5565b5060019392505050565b60055460ff1690565b6001600160a01b0382811660009081526009602052604090205416331461088d5760405162461bcd60e51b815260040180806020018281038252603a815260200180611f0b603a913960400191505060405180910390fd5b61089782826110a1565b5050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161063e91859061081d908663ffffffff6113dc16565b600c546001600160a01b031633146109205760405162461bcd60e51b8152600401808060200182810382526032815260200180611ed96032913960400191505060405180910390fd5b600080600061092e85611436565b93509350935050610940858386611527565b61094a858561165e565b600061095c848663ffffffff61137f16565b61096c5761096986611737565b90505b856001600160a01b03167f90e5d3d68ec162d9c7de393037a3ede04dd44f68e051bf2ace4a73c299dbc4db8685846109a457856109a7565b60005b60408051938452602084019290925282820152519081900360600190a2505050505050565b6001600160a01b039081166000908152600760205260409020541690565b600d54600554604080516376e9d61560e01b81526101009092046001600160a01b039081166004840152858116602484015260448301859052905160009391909116916376e9d615916064808301926020929190829003018186803b158015610a5257600080fd5b505afa158015610a66573d6000803e3d6000fd5b505050506040513d6020811015610a7c57600080fd5b50519392505050565b600080610a91836117e9565b6001600160a01b03841660009081526008602052604090205490915081158015610ab9575080155b15610ac9576000925050506107d0565b6001600160a01b0384811660009081526007602052604090205416610b1a57610b1181610b0586610b00868463ffffffff6113dc16565b611804565b9063ffffffff61137f16565b925050506107d0565b610b11610b2b82610b058785611804565b839063ffffffff6113dc16565b60055461010090046001600160a01b031681565b600c546001600160a01b03163314610b955760405162461bcd60e51b8152600401808060200182810382526032815260200180611ed96032913960400191505060405180910390fd5b600080610ba184611436565b935093505050610bc584610bbe85856113dc90919063ffffffff16565b6000611527565b610bcf84846118b9565b604080518481526020810184905280820183905290516001600160a01b038616917fbe7799898ca2d813ff902b487c1b434ab45b47edd8f38b77ad5e99aae8341b7a919081900360600190a250505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106265780601f106105fb57610100808354040283529160200191610626565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161063e91859061081d908663ffffffff61137f16565b600061063e338484611310565b6000610642826117e9565b60001981565b60008111610d31576040805162461bcd60e51b815260206004820181905260248201527f416d6f756e7420746f2072656465656d206e6565647320746f206265203e2030604482015290519081900360640190fd5b6000806000610d3f33611436565b91955093509150849050600019811415610d565750825b83811115610d955760405162461bcd60e51b8152600401808060200182810382526032815260200180611d396032913960400191505060405180910390fd5b610d9f33826109ea565b610df0576040805162461bcd60e51b815260206004820152601b60248201527f5472616e736665722063616e6e6f7420626520616c6c6f7765642e0000000000604482015290519081900360640190fd5b610dfb338483611527565b610e05338261165e565b6000610e17858363ffffffff61137f16565b610e2757610e2433611737565b90505b600c546005546001600160a01b0391821691639895e3d8916101009004163385610e578a8263ffffffff61137f16565b6040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b03168152602001838152602001828152602001945050505050600060405180830381600087803b158015610ec657600080fd5b505af1158015610eda573d6000803e3d6000fd5b50505050336001600160a01b03167fbd5034ffbd47e4e72a94baa2cdb74c6fad73cb3bcdc13036b72ec8306f5a76468386846109a457866109a7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b031660009081526006602052604090205490565b600c546001600160a01b03163314610fa55760405162461bcd60e51b8152600401808060200182810382526032815260200180611ed96032913960400191505060405180910390fd5b610fb08383836119a9565b505050565b6001600160a01b038316610ffa5760405162461bcd60e51b8152600401808060200182810382526024815260200180611eb56024913960400191505060405180910390fd5b6001600160a01b03821661103f5760405162461bcd60e51b8152600401808060200182810382526022815260200180611d6b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0380831660009081526007602052604090205481169082168114156110fe5760405162461bcd60e51b815260040180806020018281038252602a815260200180611dd3602a913960400191505060405180910390fd5b60008060008061110d87611436565b9350935093509350600083116111545760405162461bcd60e51b8152600401808060200182810382526042815260200180611dfd6042913960600191505060405180910390fd5b6001600160a01b0385161561116f5761116f87600086611527565b866001600160a01b0316866001600160a01b031614156111fb576001600160a01b038716600081815260076020908152604080832080546001600160a01b03191690558051878152918201869052818101859052519192917f5e3cad45b1fe24159d1cb39788d82d0f69cc15770aa96fba1d3d1a73487355949181900360600190a35050505050610897565b6001600160a01b03878116600090815260076020526040812080546001600160a01b031916928916929092179091556112379088908590611527565b604080518481526020810184905280820183905290516001600160a01b0380891692908a16917f5e3cad45b1fe24159d1cb39788d82d0f69cc15770aa96fba1d3d1a73487355949181900360600190a350505050505050565b60025490565b600061064282633b9aca0063ffffffff611ad816565b60006112f06b033b2e3c9fd0803ce80000006112e46112d1868663ffffffff611ad816565b6b019d971e4fe8401e74000000906113dc565b9063ffffffff611b3116565b9392505050565b6000631dcd65006112f0633b9aca006112e483866113dc565b828161131c82826109ea565b61136d576040805162461bcd60e51b815260206004820152601b60248201527f5472616e736665722063616e6e6f7420626520616c6c6f7765642e0000000000604482015290519081900360640190fd5b6113788585856119a9565b5050505050565b6000828211156113d6576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156112f0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000806000806000611447866117e9565b9050600061145882610b0589610a85565b905061146487826118b9565b600b546005546040805163d15e005360e01b81526101009092046001600160a01b0390811660048401529051600093919091169163d15e0053916024808301926020929190829003018186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d60208110156114e757600080fd5b50516001600160a01b0389166000908152600660205260409020819055905082611517818463ffffffff6113dc16565b9099909850919650945092505050565b6001600160a01b03808416600090815260076020526040902054168061154d5750610fb0565b60008061155983611436565b6001600160a01b038716600090815260086020526040902054919550935061158f9250869150610b05908863ffffffff6113dc16565b6001600160a01b03808516600090815260086020908152604080832094909455600790529190912054168015611602576001600160a01b0381166000908152600860205260409020546115e8908463ffffffff6113dc16565b6001600160a01b0382166000908152600860205260409020555b60408051848152602081018490528082018890526060810187905290516001600160a01b038616917f70ff8cf632603e2bfd1afb7e4061acce53d95356b1be9726b99fa22ba733b01f919081900360800190a250505050505050565b6001600160a01b0382166116a35760405162461bcd60e51b8152600401808060200182810382526021815260200180611e6f6021913960400191505060405180910390fd5b6002546116b6908263ffffffff61137f16565b6002556001600160a01b0382166000908152602081905260409020546116e2908263ffffffff61137f16565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b038116600081815260076020908152604080832080546001600160a01b03191690558051838152918201839052818101839052519192839290917f5e3cad45b1fe24159d1cb39788d82d0f69cc15770aa96fba1d3d1a7348735594919081900360600190a36001600160a01b0382166000908152600860205260409020546117e157506001600160a01b03811660009081526006602052604081205560016107d0565b5060006107d0565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b03808316600090815260066020908152604080832054600b54600554835163d15e005360e01b815261010090910487166004820152925194956112f0956107ab9593946118ad94939092169263d15e00539260248082019391829003018186803b15801561187857600080fd5b505afa15801561188c573d6000803e3d6000fd5b505050506040513d60208110156118a257600080fd5b505161079f87611296565b9063ffffffff611b9b16565b6001600160a01b038216611914576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254611927908263ffffffff6113dc16565b6002556001600160a01b038216600090815260208190526040902054611953908263ffffffff6113dc16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600081116119e85760405162461bcd60e51b8152600401808060200182810382526030815260200180611e3f6030913960400191505060405180910390fd5b60008060006119f686611436565b93509350935050600080611a0987611436565b935093505050611a1a888588611527565b611a2e87610bbe848963ffffffff6113dc16565b611a39888888611bd3565b6000611a4b868863ffffffff61137f16565b611a5b57611a5889611737565b90505b876001600160a01b0316896001600160a01b03167f89a178eaa27e0cd201bd795ca8ff716ac0df9618494510ca79771cfc66ffcde889888786611a9e5789611aa1565b60005b60408051948552602085019390935283830191909152606083015260808201879052519081900360a00190a3505050505050505050565b600082611ae757506000610642565b82820282848281611af457fe5b04146112f05760405162461bcd60e51b8152600401808060200182810382526021815260200180611db26021913960400191505060405180910390fd5b6000808211611b87576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481611b9257fe5b04949350505050565b600060028204611bcb836112e4611bbe876b033b2e3c9fd0803ce8000000611ad8565b849063ffffffff6113dc16565b949350505050565b6001600160a01b038316611c185760405162461bcd60e51b8152600401808060200182810382526025815260200180611e906025913960400191505060405180910390fd5b6001600160a01b038216611c5d5760405162461bcd60e51b8152600401808060200182810382526023815260200180611d166023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054611c86908263ffffffff61137f16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611cbb908263ffffffff6113dc16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373557365722063616e6e6f742072656465656d206d6f7265207468616e2074686520617661696c61626c652062616c616e636545524332303a20617070726f766520746f20746865207a65726f2061646472657373557365722063616e6e6f74206769766520616c6c6f77616e636520746f2068696d73656c66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e74657265737420697320616c7265616479207265646972656374656420746f207468652075736572496e7465726573742073747265616d2063616e206f6e6c79206265207265646972656374656420696620746865726520697320612076616c69642062616c616e63655472616e7366657272656420616d6f756e74206e6565647320746f2062652067726561746572207468616e207a65726f45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735468652063616c6c6572206f6620746869732066756e6374696f6e206d7573742062652061206c656e64696e6720706f6f6c43616c6c6572206973206e6f7420616c6c6f77656420746f2072656469726563742074686520696e746572657374206f66207468652075736572a265627a7a723158207029b8e2a8a6dcf81be1753ab59bc1690f3f41e58fae43086d4df87ae569744a64736f6c634300050e0032","sourceCodeList":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n* @title WadRayMath library\r\n* @author Aave\r\n* @dev Provides mul and div function for wads (decimal numbers with 18 digits precision) and rays (decimals with 27 digits)\r\n**/\r\n\r\nlibrary WadRayMath {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 internal constant WAD = 1e18;\r\n    uint256 internal constant halfWAD = WAD / 2;\r\n\r\n    uint256 internal constant RAY = 1e27;\r\n    uint256 internal constant halfRAY = RAY / 2;\r\n\r\n    uint256 internal constant WAD_RAY_RATIO = 1e9;\r\n\r\n    /**\r\n    * @return one ray, 1e27\r\n    **/\r\n    function ray() internal pure returns (uint256) {\r\n        return RAY;\r\n    }\r\n\r\n    /**\r\n    * @return one wad, 1e18\r\n    **/\r\n\r\n    function wad() internal pure returns (uint256) {\r\n        return WAD;\r\n    }\r\n\r\n    /**\r\n    * @return half ray, 1e27/2\r\n    **/\r\n    function halfRay() internal pure returns (uint256) {\r\n        return halfRAY;\r\n    }\r\n\r\n    /**\r\n    * @return half ray, 1e18/2\r\n    **/\r\n    function halfWad() internal pure returns (uint256) {\r\n        return halfWAD;\r\n    }\r\n\r\n    /**\r\n    * @dev multiplies two wad, rounding half up to the nearest wad\r\n    * @param a wad\r\n    * @param b wad\r\n    * @return the result of a*b, in wad\r\n    **/\r\n    function wadMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return halfWAD.add(a.mul(b)).div(WAD);\r\n    }\r\n\r\n    /**\r\n    * @dev divides two wad, rounding half up to the nearest wad\r\n    * @param a wad\r\n    * @param b wad\r\n    * @return the result of a/b, in wad\r\n    **/\r\n    function wadDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 halfB = b / 2;\r\n\r\n        return halfB.add(a.mul(WAD)).div(b);\r\n    }\r\n\r\n    /**\r\n    * @dev multiplies two ray, rounding half up to the nearest ray\r\n    * @param a ray\r\n    * @param b ray\r\n    * @return the result of a*b, in ray\r\n    **/\r\n    function rayMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return halfRAY.add(a.mul(b)).div(RAY);\r\n    }\r\n\r\n    /**\r\n    * @dev divides two ray, rounding half up to the nearest ray\r\n    * @param a ray\r\n    * @param b ray\r\n    * @return the result of a/b, in ray\r\n    **/\r\n    function rayDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 halfB = b / 2;\r\n\r\n        return halfB.add(a.mul(RAY)).div(b);\r\n    }\r\n\r\n    /**\r\n    * @dev casts ray down to wad\r\n    * @param a ray\r\n    * @return a casted to wad, rounded half up to the nearest wad\r\n    **/\r\n    function rayToWad(uint256 a) internal pure returns (uint256) {\r\n        uint256 halfRatio = WAD_RAY_RATIO / 2;\r\n\r\n        return halfRatio.add(a).div(WAD_RAY_RATIO);\r\n    }\r\n\r\n    /**\r\n    * @dev convert wad up to ray\r\n    * @param a wad\r\n    * @return a converted in ray\r\n    **/\r\n    function wadToRay(uint256 a) internal pure returns (uint256) {\r\n        return a.mul(WAD_RAY_RATIO);\r\n    }\r\n\r\n    /**\r\n    * @dev calculates base^exp. The code uses the ModExp precompile\r\n    * @return base^exp, in ray\r\n    */\r\n    //solium-disable-next-line\r\n    function rayPow(uint256 x, uint256 n) internal pure returns (uint256 z) {\r\n\r\n        z = n % 2 != 0 ? x : RAY;\r\n\r\n        for (n /= 2; n != 0; n /= 2) {\r\n            x = rayMul(x, x);\r\n\r\n            if (n % 2 != 0) {\r\n                z = rayMul(z, x);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\r\n * available, which can be aplied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n */\r\ncontract ReentrancyGuard {\r\n    /// @dev counter to allow mutex lock with only one SSTORE operation\r\n    uint256 private _guardCounter;\r\n\r\n    constructor () internal {\r\n        // The counter starts at one to prevent changing it from zero to a non-zero\r\n        // value, which is a more expensive operation.\r\n        _guardCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _guardCounter += 1;\r\n        uint256 localCounter = _guardCounter;\r\n        _;\r\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type,\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * This test is non-exhaustive, and there may be false-negatives: during the\r\n     * execution of a contract's constructor, its address will be reported as\r\n     * not containing a contract.\r\n     *\r\n     * > It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\r\n * the optional functions; to access them see `ERC20Detailed`.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when `approve` or `transferFrom` are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * > Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an `Approval` event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to `approve`. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * @dev Implementation of the `IERC20` interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using `_mint`.\r\n * For a generic mechanism see `ERC20Mintable`.\r\n *\r\n * *For a detailed writeup see our guide [How to implement supply\r\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See `IERC20.approve`.\r\n */\r\ncontract ERC20 is IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    /**\r\n     * @dev See `IERC20.totalSupply`.\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.balanceOf`.\r\n     */\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.transfer`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.allowance`.\r\n     */\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.approve`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See `IERC20.transferFrom`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of `ERC20`;\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `value`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to `approve` that can be used as a mitigation for\r\n     * problems described in `IERC20.approve`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to `approve` that can be used as a mitigation for\r\n     * problems described in `IERC20.approve`.\r\n     *\r\n     * Emits an `Approval` event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to `transfer`, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a `Transfer` event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n     /**\r\n     * @dev Destoys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a `Transfer` event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _totalSupply = _totalSupply.sub(value);\r\n        _balances[account] = _balances[account].sub(value);\r\n        emit Transfer(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an `Approval` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See `_burn` and `_approve`.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Optional functions from the ERC20 standard.\r\n */\r\ncontract ERC20Detailed is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\r\n     * these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei.\r\n     *\r\n     * > Note that this information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * `IERC20.balanceOf` and `IERC20.transfer`.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves.\r\n\r\n        // A Solidity high level call has three parts:\r\n        //  1. The target address is checked to verify it contains contract code\r\n        //  2. The call itself is made, and success asserted\r\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\r\n        // solhint-disable-next-line max-line-length\r\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        require(success, \"SafeERC20: low-level call failed\");\r\n\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @title VersionedInitializable\r\n *\r\n * @dev Helper contract to support initializer functions. To use it, replace\r\n * the constructor with a function that has the `initializer` modifier.\r\n * WARNING: Unlike constructors, initializer functions must be manually\r\n * invoked. This applies both to deploying an Initializable contract, as well\r\n * as extending an Initializable contract via inheritance.\r\n * WARNING: When used with inheritance, manual care must be taken to not invoke\r\n * a parent initializer twice, or ensure that all initializers are idempotent,\r\n * because this is not dealt with automatically as with constructors.\r\n *\r\n * @author Aave, inspired by the OpenZeppelin Initializable contract\r\n */\r\ncontract VersionedInitializable {\r\n    /**\r\n   * @dev Indicates that the contract has been initialized.\r\n   */\r\n    uint256 private lastInitializedRevision = 0;\r\n\r\n    /**\r\n   * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n    bool private initializing;\r\n\r\n    /**\r\n   * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n    modifier initializer() {\r\n        uint256 revision = getRevision();\r\n        require(initializing || isConstructor() || revision > lastInitializedRevision, \"Contract instance has already been initialized\");\r\n\r\n        bool isTopLevelCall = !initializing;\r\n        if (isTopLevelCall) {\r\n            initializing = true;\r\n            lastInitializedRevision = revision;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev returns the revision number of the contract.\r\n    /// Needs to be defined in the inherited class as a constant.\r\n    function getRevision() internal pure returns(uint256);\r\n\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        uint256 cs;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            cs := extcodesize(address)\r\n        }\r\n        return cs == 0;\r\n    }\r\n\r\n    // Reserved storage space to allow for layout changes in the future.\r\n    uint256[50] private ______gap;\r\n}\r\n\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current owner.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * > Note: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Proxy\r\n * @dev Implements delegation of calls to other contracts, with proper\r\n * forwarding of return values and bubbling of failures.\r\n * It defines a fallback function that delegates all calls to the address\r\n * returned by the abstract _implementation() internal function.\r\n */\r\ncontract Proxy {\r\n    /**\r\n   * @dev Fallback function.\r\n   * Implemented entirely in `_fallback`.\r\n   */\r\n    function() external payable {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n   * @return The Address of the implementation.\r\n   */\r\n    function _implementation() internal view returns (address);\r\n\r\n    /**\r\n   * @dev Delegates execution to an implementation contract.\r\n   * This is a low level function that doesn't return to its internal call site.\r\n   * It will return to the external caller whatever the implementation returns.\r\n   * @param implementation Address to delegate.\r\n   */\r\n    function _delegate(address implementation) internal {\r\n        //solium-disable-next-line\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize)\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize)\r\n\r\n            switch result\r\n                // delegatecall returns 0 on error.\r\n                case 0 {\r\n                    revert(0, returndatasize)\r\n                }\r\n                default {\r\n                    return(0, returndatasize)\r\n                }\r\n        }\r\n    }\r\n\r\n    /**\r\n   * @dev Function that is run as the first thing in the fallback function.\r\n   * Can be redefined in derived contracts to add functionality.\r\n   * Redefinitions must call super._willFallback().\r\n   */\r\n    function _willFallback() internal {}\r\n\r\n    /**\r\n   * @dev fallback implementation.\r\n   * Extracted to enable manual triggering.\r\n   */\r\n    function _fallback() internal {\r\n        _willFallback();\r\n        _delegate(_implementation());\r\n    }\r\n}\r\n\r\n/**\r\n * @title BaseUpgradeabilityProxy\r\n * @dev This contract implements a proxy that allows to change the\r\n * implementation address to which it will delegate.\r\n * Such a change is called an implementation upgrade.\r\n */\r\ncontract BaseUpgradeabilityProxy is Proxy {\r\n    /**\r\n   * @dev Emitted when the implementation is upgraded.\r\n   * @param implementation Address of the new implementation.\r\n   */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n   * @dev Storage slot with the address of the current implementation.\r\n   * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n   * validated in the constructor.\r\n   */\r\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n   * @dev Returns the current implementation.\r\n   * @return Address of the current implementation\r\n   */\r\n    function _implementation() internal view returns (address impl) {\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            impl := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n   * @dev Upgrades the proxy to a new implementation.\r\n   * @param newImplementation Address of the new implementation.\r\n   */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n   * @dev Sets the implementation address of the proxy.\r\n   * @param newImplementation Address of the new implementation.\r\n   */\r\n    function _setImplementation(address newImplementation) internal {\r\n        require(\r\n            Address.isContract(newImplementation),\r\n            \"Cannot set a proxy implementation to a non-contract address\"\r\n        );\r\n\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n\r\n        //solium-disable-next-line\r\n        assembly {\r\n            sstore(slot, newImplementation)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title BaseAdminUpgradeabilityProxy\r\n * @dev This contract combines an upgradeability proxy with an authorization\r\n * mechanism for administrative tasks.\r\n * All external functions in this contract must be guarded by the\r\n * `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity\r\n * feature proposal that would enable this to be done automatically.\r\n */\r\ncontract BaseAdminUpgradeabilityProxy is BaseUpgradeabilityProxy {\r\n    /**\r\n   * @dev Emitted when the administration has been transferred.\r\n   * @param previousAdmin Address of the previous admin.\r\n   * @param newAdmin Address of the new admin.\r\n   */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n   * @dev Storage slot with the admin of the contract.\r\n   * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n   * validated in the constructor.\r\n   */\r\n\r\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n   * @dev Modifier to check whether the `msg.sender` is the admin.\r\n   * If it is, it will run the function. Otherwise, it will delegate the call\r\n   * to the implementation.\r\n   */\r\n    modifier ifAdmin() {\r\n        if (msg.sender == _admin()) {\r\n            _;\r\n        } else {\r\n            _fallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n   * @return The address of the proxy admin.\r\n   */\r\n    function admin() external ifAdmin returns (address) {\r\n        return _admin();\r\n    }\r\n\r\n    /**\r\n   * @return The address of the implementation.\r\n   */\r\n    function implementation() external ifAdmin returns (address) {\r\n        return _implementation();\r\n    }\r\n\r\n    /**\r\n   * @dev Changes the admin of the proxy.\r\n   * Only the current admin can call this function.\r\n   * @param newAdmin Address to transfer proxy administration to.\r\n   */\r\n    function changeAdmin(address newAdmin) external ifAdmin {\r\n        require(newAdmin != address(0), \"Cannot change the admin of a proxy to the zero address\");\r\n        emit AdminChanged(_admin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n   * @dev Upgrade the backing implementation of the proxy.\r\n   * Only the admin can call this function.\r\n   * @param newImplementation Address of the new implementation.\r\n   */\r\n    function upgradeTo(address newImplementation) external ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n    }\r\n\r\n    /**\r\n   * @dev Upgrade the backing implementation of the proxy and call a function\r\n   * on the new implementation.\r\n   * This is useful to initialize the proxied contract.\r\n   * @param newImplementation Address of the new implementation.\r\n   * @param data Data to send as msg.data in the low level call.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   */\r\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n        (bool success, ) = newImplementation.delegatecall(data);\r\n        require(success);\r\n    }\r\n\r\n    /**\r\n   * @return The admin slot.\r\n   */\r\n    function _admin() internal view returns (address adm) {\r\n        bytes32 slot = ADMIN_SLOT;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            adm := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n   * @dev Sets the address of the proxy admin.\r\n   * @param newAdmin Address of the new proxy admin.\r\n   */\r\n    function _setAdmin(address newAdmin) internal {\r\n        bytes32 slot = ADMIN_SLOT;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            sstore(slot, newAdmin)\r\n        }\r\n    }\r\n\r\n    /**\r\n   * @dev Only fall back when the sender is not the admin.\r\n   */\r\n    function _willFallback() internal {\r\n        require(msg.sender != _admin(), \"Cannot call fallback function from the proxy admin\");\r\n        super._willFallback();\r\n    }\r\n}\r\n\r\n/**\r\n * @title UpgradeabilityProxy\r\n * @dev Extends BaseUpgradeabilityProxy with a constructor for initializing\r\n * implementation and init data.\r\n */\r\ncontract UpgradeabilityProxy is BaseUpgradeabilityProxy {\r\n    /**\r\n   * @dev Contract constructor.\r\n   * @param _logic Address of the initial implementation.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    constructor(address _logic, bytes memory _data) public payable {\r\n        assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\r\n        _setImplementation(_logic);\r\n        if (_data.length > 0) {\r\n            (bool success, ) = _logic.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title AdminUpgradeabilityProxy\r\n * @dev Extends from BaseAdminUpgradeabilityProxy with a constructor for \r\n * initializing the implementation, admin, and init data.\r\n */\r\ncontract AdminUpgradeabilityProxy is BaseAdminUpgradeabilityProxy, UpgradeabilityProxy {\r\n    /**\r\n   * Contract constructor.\r\n   * @param _logic address of the initial implementation.\r\n   * @param _admin Address of the proxy administrator.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    constructor(address _logic, address _admin, bytes memory _data) public payable UpgradeabilityProxy(_logic, _data) {\r\n        assert(ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title InitializableUpgradeabilityProxy\r\n * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\r\n * implementation and init data.\r\n */\r\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\r\n    /**\r\n   * @dev Contract initializer.\r\n   * @param _logic Address of the initial implementation.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    function initialize(address _logic, bytes memory _data) public payable {\r\n        require(_implementation() == address(0));\r\n        assert(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\r\n        _setImplementation(_logic);\r\n        if (_data.length > 0) {\r\n            (bool success, ) = _logic.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n}\r\n\r\ncontract AddressStorage {\r\n    mapping(bytes32 => address) private addresses;\r\n\r\n    function getAddress(bytes32 _key) public view returns (address) {\r\n        return addresses[_key];\r\n    }\r\n\r\n    function _setAddress(bytes32 _key, address _value) internal {\r\n        addresses[_key] = _value;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title InitializableAdminUpgradeabilityProxy\r\n * @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for \r\n * initializing the implementation, admin, and init data.\r\n */\r\ncontract InitializableAdminUpgradeabilityProxy is BaseAdminUpgradeabilityProxy, InitializableUpgradeabilityProxy {\r\n    /**\r\n   * Contract initializer.\r\n   * @param _logic address of the initial implementation.\r\n   * @param _admin Address of the proxy administrator.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    function initialize(address _logic, address _admin, bytes memory _data) public payable {\r\n        require(_implementation() == address(0));\r\n        InitializableUpgradeabilityProxy.initialize(_logic, _data);\r\n        assert(ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n@title ILendingPoolAddressesProvider interface\r\n@notice provides the interface to fetch the LendingPoolCore address\r\n */\r\n\r\ncontract ILendingPoolAddressesProvider {\r\n\r\n    function getLendingPool() public view returns (address);\r\n    function setLendingPoolImpl(address _pool) public;\r\n\r\n    function getLendingPoolCore() public view returns (address payable);\r\n    function setLendingPoolCoreImpl(address _lendingPoolCore) public;\r\n\r\n    function getLendingPoolConfigurator() public view returns (address);\r\n    function setLendingPoolConfiguratorImpl(address _configurator) public;\r\n\r\n    function getLendingPoolDataProvider() public view returns (address);\r\n    function setLendingPoolDataProviderImpl(address _provider) public;\r\n\r\n    function getLendingPoolParametersProvider() public view returns (address);\r\n    function setLendingPoolParametersProviderImpl(address _parametersProvider) public;\r\n\r\n    function getTokenDistributor() public view returns (address);\r\n    function setTokenDistributor(address _tokenDistributor) public;\r\n\r\n\r\n    function getFeeProvider() public view returns (address);\r\n    function setFeeProviderImpl(address _feeProvider) public;\r\n\r\n    function getLendingPoolLiquidationManager() public view returns (address);\r\n    function setLendingPoolLiquidationManager(address _manager) public;\r\n\r\n    function getLendingPoolManager() public view returns (address);\r\n    function setLendingPoolManager(address _lendingPoolManager) public;\r\n\r\n    function getPriceOracle() public view returns (address);\r\n    function setPriceOracle(address _priceOracle) public;\r\n\r\n    function getLendingRateOracle() public view returns (address);\r\n    function setLendingRateOracle(address _lendingRateOracle) public;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n* @title LendingPoolAddressesProvider contract\r\n* @notice Is the main registry of the protocol. All the different components of the protocol are accessible\r\n* through the addresses provider.\r\n* @author Aave\r\n**/\r\n\r\ncontract LendingPoolAddressesProvider is Ownable, ILendingPoolAddressesProvider, AddressStorage {\r\n    //events\r\n    event LendingPoolUpdated(address indexed newAddress);\r\n    event LendingPoolCoreUpdated(address indexed newAddress);\r\n    event LendingPoolParametersProviderUpdated(address indexed newAddress);\r\n    event LendingPoolManagerUpdated(address indexed newAddress);\r\n    event LendingPoolConfiguratorUpdated(address indexed newAddress);\r\n    event LendingPoolLiquidationManagerUpdated(address indexed newAddress);\r\n    event LendingPoolDataProviderUpdated(address indexed newAddress);\r\n    event EthereumAddressUpdated(address indexed newAddress);\r\n    event PriceOracleUpdated(address indexed newAddress);\r\n    event LendingRateOracleUpdated(address indexed newAddress);\r\n    event FeeProviderUpdated(address indexed newAddress);\r\n    event TokenDistributorUpdated(address indexed newAddress);\r\n\r\n    event ProxyCreated(bytes32 id, address indexed newAddress);\r\n\r\n    bytes32 private constant LENDING_POOL = \"LENDING_POOL\";\r\n    bytes32 private constant LENDING_POOL_CORE = \"LENDING_POOL_CORE\";\r\n    bytes32 private constant LENDING_POOL_CONFIGURATOR = \"LENDING_POOL_CONFIGURATOR\";\r\n    bytes32 private constant LENDING_POOL_PARAMETERS_PROVIDER = \"PARAMETERS_PROVIDER\";\r\n    bytes32 private constant LENDING_POOL_MANAGER = \"LENDING_POOL_MANAGER\";\r\n    bytes32 private constant LENDING_POOL_LIQUIDATION_MANAGER = \"LIQUIDATION_MANAGER\";\r\n    bytes32 private constant LENDING_POOL_FLASHLOAN_PROVIDER = \"FLASHLOAN_PROVIDER\";\r\n    bytes32 private constant DATA_PROVIDER = \"DATA_PROVIDER\";\r\n    bytes32 private constant ETHEREUM_ADDRESS = \"ETHEREUM_ADDRESS\";\r\n    bytes32 private constant PRICE_ORACLE = \"PRICE_ORACLE\";\r\n    bytes32 private constant LENDING_RATE_ORACLE = \"LENDING_RATE_ORACLE\";\r\n    bytes32 private constant FEE_PROVIDER = \"FEE_PROVIDER\";\r\n    bytes32 private constant WALLET_BALANCE_PROVIDER = \"WALLET_BALANCE_PROVIDER\";\r\n    bytes32 private constant TOKEN_DISTRIBUTOR = \"TOKEN_DISTRIBUTOR\";\r\n\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPool proxy\r\n    * @return the lending pool proxy address\r\n    **/\r\n    function getLendingPool() public view returns (address) {\r\n        return getAddress(LENDING_POOL);\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev updates the implementation of the lending pool\r\n    * @param _pool the new lending pool implementation\r\n    **/\r\n    function setLendingPoolImpl(address _pool) public onlyOwner {\r\n        updateImplInternal(LENDING_POOL, _pool);\r\n        emit LendingPoolUpdated(_pool);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPoolCore proxy\r\n    * @return the lending pool core proxy address\r\n     */\r\n    function getLendingPoolCore() public view returns (address payable) {\r\n        address payable core = address(uint160(getAddress(LENDING_POOL_CORE)));\r\n        return core;\r\n    }\r\n\r\n    /**\r\n    * @dev updates the implementation of the lending pool core\r\n    * @param _lendingPoolCore the new lending pool core implementation\r\n    **/\r\n    function setLendingPoolCoreImpl(address _lendingPoolCore) public onlyOwner {\r\n        updateImplInternal(LENDING_POOL_CORE, _lendingPoolCore);\r\n        emit LendingPoolCoreUpdated(_lendingPoolCore);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPoolConfigurator proxy\r\n    * @return the lending pool configurator proxy address\r\n    **/\r\n    function getLendingPoolConfigurator() public view returns (address) {\r\n        return getAddress(LENDING_POOL_CONFIGURATOR);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the implementation of the lending pool configurator\r\n    * @param _configurator the new lending pool configurator implementation\r\n    **/\r\n    function setLendingPoolConfiguratorImpl(address _configurator) public onlyOwner {\r\n        updateImplInternal(LENDING_POOL_CONFIGURATOR, _configurator);\r\n        emit LendingPoolConfiguratorUpdated(_configurator);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPoolDataProvider proxy\r\n    * @return the lending pool data provider proxy address\r\n     */\r\n    function getLendingPoolDataProvider() public view returns (address) {\r\n        return getAddress(DATA_PROVIDER);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the implementation of the lending pool data provider\r\n    * @param _provider the new lending pool data provider implementation\r\n    **/\r\n    function setLendingPoolDataProviderImpl(address _provider) public onlyOwner {\r\n        updateImplInternal(DATA_PROVIDER, _provider);\r\n        emit LendingPoolDataProviderUpdated(_provider);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPoolParametersProvider proxy\r\n    * @return the address of the Lending pool parameters provider proxy\r\n    **/\r\n    function getLendingPoolParametersProvider() public view returns (address) {\r\n        return getAddress(LENDING_POOL_PARAMETERS_PROVIDER);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the implementation of the lending pool parameters provider\r\n    * @param _parametersProvider the new lending pool parameters provider implementation\r\n    **/\r\n    function setLendingPoolParametersProviderImpl(address _parametersProvider) public onlyOwner {\r\n        updateImplInternal(LENDING_POOL_PARAMETERS_PROVIDER, _parametersProvider);\r\n        emit LendingPoolParametersProviderUpdated(_parametersProvider);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the FeeProvider proxy\r\n    * @return the address of the Fee provider proxy\r\n    **/\r\n    function getFeeProvider() public view returns (address) {\r\n        return getAddress(FEE_PROVIDER);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the implementation of the FeeProvider proxy\r\n    * @param _feeProvider the new lending pool fee provider implementation\r\n    **/\r\n    function setFeeProviderImpl(address _feeProvider) public onlyOwner {\r\n        updateImplInternal(FEE_PROVIDER, _feeProvider);\r\n        emit FeeProviderUpdated(_feeProvider);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the address of the LendingPoolLiquidationManager. Since the manager is used\r\n    * through delegateCall within the LendingPool contract, the proxy contract pattern does not work properly hence\r\n    * the addresses are changed directly.\r\n    * @return the address of the Lending pool liquidation manager\r\n    **/\r\n\r\n    function getLendingPoolLiquidationManager() public view returns (address) {\r\n        return getAddress(LENDING_POOL_LIQUIDATION_MANAGER);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the address of the Lending pool liquidation manager\r\n    * @param _manager the new lending pool liquidation manager address\r\n    **/\r\n    function setLendingPoolLiquidationManager(address _manager) public onlyOwner {\r\n        _setAddress(LENDING_POOL_LIQUIDATION_MANAGER, _manager);\r\n        emit LendingPoolLiquidationManagerUpdated(_manager);\r\n    }\r\n\r\n    /**\r\n    * @dev the functions below are storing specific addresses that are outside the context of the protocol\r\n    * hence the upgradable proxy pattern is not used\r\n    **/\r\n\r\n\r\n    function getLendingPoolManager() public view returns (address) {\r\n        return getAddress(LENDING_POOL_MANAGER);\r\n    }\r\n\r\n    function setLendingPoolManager(address _lendingPoolManager) public onlyOwner {\r\n        _setAddress(LENDING_POOL_MANAGER, _lendingPoolManager);\r\n        emit LendingPoolManagerUpdated(_lendingPoolManager);\r\n    }\r\n\r\n    function getPriceOracle() public view returns (address) {\r\n        return getAddress(PRICE_ORACLE);\r\n    }\r\n\r\n    function setPriceOracle(address _priceOracle) public onlyOwner {\r\n        _setAddress(PRICE_ORACLE, _priceOracle);\r\n        emit PriceOracleUpdated(_priceOracle);\r\n    }\r\n\r\n    function getLendingRateOracle() public view returns (address) {\r\n        return getAddress(LENDING_RATE_ORACLE);\r\n    }\r\n\r\n    function setLendingRateOracle(address _lendingRateOracle) public onlyOwner {\r\n        _setAddress(LENDING_RATE_ORACLE, _lendingRateOracle);\r\n        emit LendingRateOracleUpdated(_lendingRateOracle);\r\n    }\r\n\r\n\r\n    function getTokenDistributor() public view returns (address) {\r\n        return getAddress(TOKEN_DISTRIBUTOR);\r\n    }\r\n\r\n    function setTokenDistributor(address _tokenDistributor) public onlyOwner {\r\n        _setAddress(TOKEN_DISTRIBUTOR, _tokenDistributor);\r\n        emit TokenDistributorUpdated(_tokenDistributor);\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev internal function to update the implementation of a specific component of the protocol\r\n    * @param _id the id of the contract to be updated\r\n    * @param _newAddress the address of the new implementation\r\n    **/\r\n    function updateImplInternal(bytes32 _id, address _newAddress) internal {\r\n        address payable proxyAddress = address(uint160(getAddress(_id)));\r\n\r\n        InitializableAdminUpgradeabilityProxy proxy = InitializableAdminUpgradeabilityProxy(proxyAddress);\r\n        bytes memory params = abi.encodeWithSignature(\"initialize(address)\", address(this));\r\n\r\n        if (proxyAddress == address(0)) {\r\n            proxy = new InitializableAdminUpgradeabilityProxy();\r\n            proxy.initialize(_newAddress, address(this), params);\r\n            _setAddress(_id, address(proxy));\r\n            emit ProxyCreated(_id, address(proxy));\r\n        } else {\r\n            proxy.upgradeToAndCall(_newAddress, params);\r\n        }\r\n\r\n    }\r\n}\r\n\r\ncontract UintStorage {\r\n    mapping(bytes32 => uint256) private uints;\r\n\r\n    function getUint(bytes32 _key) public view returns (uint256) {\r\n        return uints[_key];\r\n    }\r\n\r\n    function _setUint(bytes32 _key, uint256 _value) internal {\r\n        uints[_key] = _value;\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n* @title LendingPoolParametersProvider\r\n* @author Aave\r\n* @notice stores the configuration parameters of the Lending Pool contract\r\n**/\r\n\r\ncontract LendingPoolParametersProvider is VersionedInitializable {\r\n\r\n    uint256 private constant MAX_STABLE_RATE_BORROW_SIZE_PERCENT = 25;\r\n    uint256 private constant REBALANCE_DOWN_RATE_DELTA = (1e27)/5;\r\n    uint256 private constant FLASHLOAN_FEE_TOTAL = 35;\r\n    uint256 private constant FLASHLOAN_FEE_PROTOCOL = 3000;\r\n\r\n    uint256 constant private DATA_PROVIDER_REVISION = 0x1;\r\n\r\n    function getRevision() internal pure returns(uint256) {\r\n        return DATA_PROVIDER_REVISION;\r\n    }\r\n\r\n    /**\r\n    * @dev initializes the LendingPoolParametersProvider after it's added to the proxy\r\n    * @param _addressesProvider the address of the LendingPoolAddressesProvider\r\n    */\r\n    function initialize(address _addressesProvider) public initializer {\r\n    }\r\n    /**\r\n    * @dev returns the maximum stable rate borrow size, in percentage of the available liquidity.\r\n    **/\r\n    function getMaxStableRateBorrowSizePercent() external pure returns (uint256)  {\r\n        return MAX_STABLE_RATE_BORROW_SIZE_PERCENT;\r\n    }\r\n\r\n    /**\r\n    * @dev returns the delta between the current stable rate and the user stable rate at\r\n    *      which the borrow position of the user will be rebalanced (scaled down)\r\n    **/\r\n    function getRebalanceDownRateDelta() external pure returns (uint256) {\r\n        return REBALANCE_DOWN_RATE_DELTA;\r\n    }\r\n\r\n    /**\r\n    * @dev returns the fee applied to a flashloan and the portion to redirect to the protocol, in basis points.\r\n    **/\r\n    function getFlashLoanFeesInBips() external pure returns (uint256, uint256) {\r\n        return (FLASHLOAN_FEE_TOTAL, FLASHLOAN_FEE_PROTOCOL);\r\n    }\r\n}\r\n\r\n/**\r\n* @title CoreLibrary library\r\n* @author Aave\r\n* @notice Defines the data structures of the reserves and the user data\r\n**/\r\nlibrary CoreLibrary {\r\n    using SafeMath for uint256;\r\n    using WadRayMath for uint256;\r\n\r\n    enum InterestRateMode {NONE, STABLE, VARIABLE}\r\n\r\n    uint256 internal constant SECONDS_PER_YEAR = 365 days;\r\n\r\n    struct UserReserveData {\r\n        //principal amount borrowed by the user.\r\n        uint256 principalBorrowBalance;\r\n        //cumulated variable borrow index for the user. Expressed in ray\r\n        uint256 lastVariableBorrowCumulativeIndex;\r\n        //origination fee cumulated by the user\r\n        uint256 originationFee;\r\n        // stable borrow rate at which the user has borrowed. Expressed in ray\r\n        uint256 stableBorrowRate;\r\n        uint40 lastUpdateTimestamp;\r\n        //defines if a specific deposit should or not be used as a collateral in borrows\r\n        bool useAsCollateral;\r\n    }\r\n\r\n    struct ReserveData {\r\n        /**\r\n        * @dev refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\r\n        **/\r\n        //the liquidity index. Expressed in ray\r\n        uint256 lastLiquidityCumulativeIndex;\r\n        //the current supply rate. Expressed in ray\r\n        uint256 currentLiquidityRate;\r\n        //the total borrows of the reserve at a stable rate. Expressed in the currency decimals\r\n        uint256 totalBorrowsStable;\r\n        //the total borrows of the reserve at a variable rate. Expressed in the currency decimals\r\n        uint256 totalBorrowsVariable;\r\n        //the current variable borrow rate. Expressed in ray\r\n        uint256 currentVariableBorrowRate;\r\n        //the current stable borrow rate. Expressed in ray\r\n        uint256 currentStableBorrowRate;\r\n        //the current average stable borrow rate (weighted average of all the different stable rate loans). Expressed in ray\r\n        uint256 currentAverageStableBorrowRate;\r\n        //variable borrow index. Expressed in ray\r\n        uint256 lastVariableBorrowCumulativeIndex;\r\n        //the ltv of the reserve. Expressed in percentage (0-100)\r\n        uint256 baseLTVasCollateral;\r\n        //the liquidation threshold of the reserve. Expressed in percentage (0-100)\r\n        uint256 liquidationThreshold;\r\n        //the liquidation bonus of the reserve. Expressed in percentage\r\n        uint256 liquidationBonus;\r\n        //the decimals of the reserve asset\r\n        uint256 decimals;\r\n        /**\r\n        * @dev address of the aToken representing the asset\r\n        **/\r\n        address aTokenAddress;\r\n        /**\r\n        * @dev address of the interest rate strategy contract\r\n        **/\r\n        address interestRateStrategyAddress;\r\n        uint40 lastUpdateTimestamp;\r\n        // borrowingEnabled = true means users can borrow from this reserve\r\n        bool borrowingEnabled;\r\n        // usageAsCollateralEnabled = true means users can use this reserve as collateral\r\n        bool usageAsCollateralEnabled;\r\n        // isStableBorrowRateEnabled = true means users can borrow at a stable rate\r\n        bool isStableBorrowRateEnabled;\r\n        // isActive = true means the reserve has been activated and properly configured\r\n        bool isActive;\r\n        // isFreezed = true means the reserve only allows repays and redeems, but not deposits, new borrowings or rate swap\r\n        bool isFreezed;\r\n    }\r\n\r\n    /**\r\n    * @dev returns the ongoing normalized income for the reserve.\r\n    * a value of 1e27 means there is no income. As time passes, the income is accrued.\r\n    * A value of 2*1e27 means that the income of the reserve is double the initial amount.\r\n    * @param _reserve the reserve object\r\n    * @return the normalized income. expressed in ray\r\n    **/\r\n    function getNormalizedIncome(CoreLibrary.ReserveData storage _reserve)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint256 cumulated = calculateLinearInterest(\r\n            _reserve\r\n                .currentLiquidityRate,\r\n            _reserve\r\n                .lastUpdateTimestamp\r\n        )\r\n            .rayMul(_reserve.lastLiquidityCumulativeIndex);\r\n\r\n        return cumulated;\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev Updates the liquidity cumulative index Ci and variable borrow cumulative index Bvc. Refer to the whitepaper for\r\n    * a formal specification.\r\n    * @param _self the reserve object\r\n    **/\r\n    function updateCumulativeIndexes(ReserveData storage _self) internal {\r\n        uint256 totalBorrows = getTotalBorrows(_self);\r\n\r\n        if (totalBorrows > 0) {\r\n            //only cumulating if there is any income being produced\r\n            uint256 cumulatedLiquidityInterest = calculateLinearInterest(\r\n                _self.currentLiquidityRate,\r\n                _self.lastUpdateTimestamp\r\n            );\r\n\r\n            _self.lastLiquidityCumulativeIndex = cumulatedLiquidityInterest.rayMul(\r\n                _self.lastLiquidityCumulativeIndex\r\n            );\r\n\r\n            uint256 cumulatedVariableBorrowInterest = calculateCompoundedInterest(\r\n                _self.currentVariableBorrowRate,\r\n                _self.lastUpdateTimestamp\r\n            );\r\n            _self.lastVariableBorrowCumulativeIndex = cumulatedVariableBorrowInterest.rayMul(\r\n                _self.lastVariableBorrowCumulativeIndex\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev accumulates a predefined amount of asset to the reserve as a fixed, one time income. Used for example to accumulate\r\n    * the flashloan fee to the reserve, and spread it through the depositors.\r\n    * @param _self the reserve object\r\n    * @param _totalLiquidity the total liquidity available in the reserve\r\n    * @param _amount the amount to accomulate\r\n    **/\r\n    function cumulateToLiquidityIndex(\r\n        ReserveData storage _self,\r\n        uint256 _totalLiquidity,\r\n        uint256 _amount\r\n    ) internal {\r\n        uint256 amountToLiquidityRatio = _amount.wadToRay().rayDiv(_totalLiquidity.wadToRay());\r\n\r\n        uint256 cumulatedLiquidity = amountToLiquidityRatio.add(WadRayMath.ray());\r\n\r\n        _self.lastLiquidityCumulativeIndex = cumulatedLiquidity.rayMul(\r\n            _self.lastLiquidityCumulativeIndex\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev initializes a reserve\r\n    * @param _self the reserve object\r\n    * @param _aTokenAddress the address of the overlying atoken contract\r\n    * @param _decimals the number of decimals of the underlying asset\r\n    * @param _interestRateStrategyAddress the address of the interest rate strategy contract\r\n    **/\r\n    function init(\r\n        ReserveData storage _self,\r\n        address _aTokenAddress,\r\n        uint256 _decimals,\r\n        address _interestRateStrategyAddress\r\n    ) external {\r\n        require(_self.aTokenAddress == address(0), \"Reserve has already been initialized\");\r\n\r\n        if (_self.lastLiquidityCumulativeIndex == 0) {\r\n            //if the reserve has not been initialized yet\r\n            _self.lastLiquidityCumulativeIndex = WadRayMath.ray();\r\n        }\r\n\r\n        if (_self.lastVariableBorrowCumulativeIndex == 0) {\r\n            _self.lastVariableBorrowCumulativeIndex = WadRayMath.ray();\r\n        }\r\n\r\n        _self.aTokenAddress = _aTokenAddress;\r\n        _self.decimals = _decimals;\r\n\r\n        _self.interestRateStrategyAddress = _interestRateStrategyAddress;\r\n        _self.isActive = true;\r\n        _self.isFreezed = false;\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev enables borrowing on a reserve\r\n    * @param _self the reserve object\r\n    * @param _stableBorrowRateEnabled true if the stable borrow rate must be enabled by default, false otherwise\r\n    **/\r\n    function enableBorrowing(ReserveData storage _self, bool _stableBorrowRateEnabled) external {\r\n        require(_self.borrowingEnabled == false, \"Reserve is already enabled\");\r\n\r\n        _self.borrowingEnabled = true;\r\n        _self.isStableBorrowRateEnabled = _stableBorrowRateEnabled;\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev disables borrowing on a reserve\r\n    * @param _self the reserve object\r\n    **/\r\n    function disableBorrowing(ReserveData storage _self) external {\r\n        _self.borrowingEnabled = false;\r\n    }\r\n\r\n    /**\r\n    * @dev enables a reserve to be used as collateral\r\n    * @param _self the reserve object\r\n    * @param _baseLTVasCollateral the loan to value of the asset when used as collateral\r\n    * @param _liquidationThreshold the threshold at which loans using this asset as collateral will be considered undercollateralized\r\n    * @param _liquidationBonus the bonus liquidators receive to liquidate this asset\r\n    **/\r\n    function enableAsCollateral(\r\n        ReserveData storage _self,\r\n        uint256 _baseLTVasCollateral,\r\n        uint256 _liquidationThreshold,\r\n        uint256 _liquidationBonus\r\n    ) external {\r\n        require(\r\n            _self.usageAsCollateralEnabled == false,\r\n            \"Reserve is already enabled as collateral\"\r\n        );\r\n\r\n        _self.usageAsCollateralEnabled = true;\r\n        _self.baseLTVasCollateral = _baseLTVasCollateral;\r\n        _self.liquidationThreshold = _liquidationThreshold;\r\n        _self.liquidationBonus = _liquidationBonus;\r\n\r\n        if (_self.lastLiquidityCumulativeIndex == 0)\r\n            _self.lastLiquidityCumulativeIndex = WadRayMath.ray();\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev disables a reserve as collateral\r\n    * @param _self the reserve object\r\n    **/\r\n    function disableAsCollateral(ReserveData storage _self) external {\r\n        _self.usageAsCollateralEnabled = false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n    * @dev calculates the compounded borrow balance of a user\r\n    * @param _self the userReserve object\r\n    * @param _reserve the reserve object\r\n    * @return the user compounded borrow balance\r\n    **/\r\n    function getCompoundedBorrowBalance(\r\n        CoreLibrary.UserReserveData storage _self,\r\n        CoreLibrary.ReserveData storage _reserve\r\n    ) internal view returns (uint256) {\r\n        if (_self.principalBorrowBalance == 0) return 0;\r\n\r\n        uint256 principalBorrowBalanceRay = _self.principalBorrowBalance.wadToRay();\r\n        uint256 compoundedBalance = 0;\r\n        uint256 cumulatedInterest = 0;\r\n\r\n        if (_self.stableBorrowRate > 0) {\r\n            cumulatedInterest = calculateCompoundedInterest(\r\n                _self.stableBorrowRate,\r\n                _self.lastUpdateTimestamp\r\n            );\r\n        } else {\r\n            //variable interest\r\n            cumulatedInterest = calculateCompoundedInterest(\r\n                _reserve\r\n                    .currentVariableBorrowRate,\r\n                _reserve\r\n                    .lastUpdateTimestamp\r\n            )\r\n                .rayMul(_reserve.lastVariableBorrowCumulativeIndex)\r\n                .rayDiv(_self.lastVariableBorrowCumulativeIndex);\r\n        }\r\n\r\n        compoundedBalance = principalBorrowBalanceRay.rayMul(cumulatedInterest).rayToWad();\r\n\r\n        if (compoundedBalance == _self.principalBorrowBalance) {\r\n            //solium-disable-next-line\r\n            if (_self.lastUpdateTimestamp != block.timestamp) {\r\n                //no interest cumulation because of the rounding - we add 1 wei\r\n                //as symbolic cumulated interest to avoid interest free loans.\r\n\r\n                return _self.principalBorrowBalance.add(1 wei);\r\n            }\r\n        }\r\n\r\n        return compoundedBalance;\r\n    }\r\n\r\n    /**\r\n    * @dev increases the total borrows at a stable rate on a specific reserve and updates the\r\n    * average stable rate consequently\r\n    * @param _reserve the reserve object\r\n    * @param _amount the amount to add to the total borrows stable\r\n    * @param _rate the rate at which the amount has been borrowed\r\n    **/\r\n    function increaseTotalBorrowsStableAndUpdateAverageRate(\r\n        ReserveData storage _reserve,\r\n        uint256 _amount,\r\n        uint256 _rate\r\n    ) internal {\r\n        uint256 previousTotalBorrowStable = _reserve.totalBorrowsStable;\r\n        //updating reserve borrows stable\r\n        _reserve.totalBorrowsStable = _reserve.totalBorrowsStable.add(_amount);\r\n\r\n        //update the average stable rate\r\n        //weighted average of all the borrows\r\n        uint256 weightedLastBorrow = _amount.wadToRay().rayMul(_rate);\r\n        uint256 weightedPreviousTotalBorrows = previousTotalBorrowStable.wadToRay().rayMul(\r\n            _reserve.currentAverageStableBorrowRate\r\n        );\r\n\r\n        _reserve.currentAverageStableBorrowRate = weightedLastBorrow\r\n            .add(weightedPreviousTotalBorrows)\r\n            .rayDiv(_reserve.totalBorrowsStable.wadToRay());\r\n    }\r\n\r\n    /**\r\n    * @dev decreases the total borrows at a stable rate on a specific reserve and updates the\r\n    * average stable rate consequently\r\n    * @param _reserve the reserve object\r\n    * @param _amount the amount to substract to the total borrows stable\r\n    * @param _rate the rate at which the amount has been repaid\r\n    **/\r\n    function decreaseTotalBorrowsStableAndUpdateAverageRate(\r\n        ReserveData storage _reserve,\r\n        uint256 _amount,\r\n        uint256 _rate\r\n    ) internal {\r\n        require(_reserve.totalBorrowsStable >= _amount, \"Invalid amount to decrease\");\r\n\r\n        uint256 previousTotalBorrowStable = _reserve.totalBorrowsStable;\r\n\r\n        //updating reserve borrows stable\r\n        _reserve.totalBorrowsStable = _reserve.totalBorrowsStable.sub(_amount);\r\n\r\n        if (_reserve.totalBorrowsStable == 0) {\r\n            _reserve.currentAverageStableBorrowRate = 0; //no income if there are no stable rate borrows\r\n            return;\r\n        }\r\n\r\n        //update the average stable rate\r\n        //weighted average of all the borrows\r\n        uint256 weightedLastBorrow = _amount.wadToRay().rayMul(_rate);\r\n        uint256 weightedPreviousTotalBorrows = previousTotalBorrowStable.wadToRay().rayMul(\r\n            _reserve.currentAverageStableBorrowRate\r\n        );\r\n\r\n        require(\r\n            weightedPreviousTotalBorrows >= weightedLastBorrow,\r\n            \"The amounts to subtract don't match\"\r\n        );\r\n\r\n        _reserve.currentAverageStableBorrowRate = weightedPreviousTotalBorrows\r\n            .sub(weightedLastBorrow)\r\n            .rayDiv(_reserve.totalBorrowsStable.wadToRay());\r\n    }\r\n\r\n    /**\r\n    * @dev increases the total borrows at a variable rate\r\n    * @param _reserve the reserve object\r\n    * @param _amount the amount to add to the total borrows variable\r\n    **/\r\n    function increaseTotalBorrowsVariable(ReserveData storage _reserve, uint256 _amount) internal {\r\n        _reserve.totalBorrowsVariable = _reserve.totalBorrowsVariable.add(_amount);\r\n    }\r\n\r\n    /**\r\n    * @dev decreases the total borrows at a variable rate\r\n    * @param _reserve the reserve object\r\n    * @param _amount the amount to substract to the total borrows variable\r\n    **/\r\n    function decreaseTotalBorrowsVariable(ReserveData storage _reserve, uint256 _amount) internal {\r\n        require(\r\n            _reserve.totalBorrowsVariable >= _amount,\r\n            \"The amount that is being subtracted from the variable total borrows is incorrect\"\r\n        );\r\n        _reserve.totalBorrowsVariable = _reserve.totalBorrowsVariable.sub(_amount);\r\n    }\r\n\r\n    /**\r\n    * @dev function to calculate the interest using a linear interest rate formula\r\n    * @param _rate the interest rate, in ray\r\n    * @param _lastUpdateTimestamp the timestamp of the last update of the interest\r\n    * @return the interest rate linearly accumulated during the timeDelta, in ray\r\n    **/\r\n\r\n    function calculateLinearInterest(uint256 _rate, uint40 _lastUpdateTimestamp)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        //solium-disable-next-line\r\n        uint256 timeDifference = block.timestamp.sub(uint256(_lastUpdateTimestamp));\r\n\r\n        uint256 timeDelta = timeDifference.wadToRay().rayDiv(SECONDS_PER_YEAR.wadToRay());\r\n\r\n        return _rate.rayMul(timeDelta).add(WadRayMath.ray());\r\n    }\r\n\r\n    /**\r\n    * @dev function to calculate the interest using a compounded interest rate formula\r\n    * @param _rate the interest rate, in ray\r\n    * @param _lastUpdateTimestamp the timestamp of the last update of the interest\r\n    * @return the interest rate compounded during the timeDelta, in ray\r\n    **/\r\n    function calculateCompoundedInterest(uint256 _rate, uint40 _lastUpdateTimestamp)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        //solium-disable-next-line\r\n        uint256 timeDifference = block.timestamp.sub(uint256(_lastUpdateTimestamp));\r\n\r\n        uint256 ratePerSecond = _rate.div(SECONDS_PER_YEAR);\r\n\r\n        return ratePerSecond.add(WadRayMath.ray()).rayPow(timeDifference);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the total borrows on the reserve\r\n    * @param _reserve the reserve object\r\n    * @return the total borrows (stable + variable)\r\n    **/\r\n    function getTotalBorrows(CoreLibrary.ReserveData storage _reserve)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _reserve.totalBorrowsStable.add(_reserve.totalBorrowsVariable);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n* @title IPriceOracleGetter interface\r\n* @notice Interface for the Aave price oracle.\r\n**/\r\n\r\ninterface IPriceOracleGetter {\r\n    /**\r\n    * @dev returns the asset price in ETH\r\n    * @param _asset the address of the asset\r\n    * @return the ETH price of the asset\r\n    **/\r\n    function getAssetPrice(address _asset) external view returns (uint256);\r\n}\r\n\r\n/**\r\n* @title IFeeProvider interface\r\n* @notice Interface for the Aave fee provider.\r\n**/\r\n\r\ninterface IFeeProvider {\r\n    function calculateLoanOriginationFee(address _user, uint256 _amount) external view returns (uint256);\r\n    function getLoanOriginationFeePercentage() external view returns (uint256);\r\n}\r\n\r\n/**\r\n* @title LendingPoolDataProvider contract\r\n* @author Aave\r\n* @notice Implements functions to fetch data from the core, and aggregate them in order to allow computation\r\n* on the compounded balances and the account balances in ETH\r\n**/\r\ncontract LendingPoolDataProvider is VersionedInitializable {\r\n    using SafeMath for uint256;\r\n    using WadRayMath for uint256;\r\n\r\n    LendingPoolCore public core;\r\n    LendingPoolAddressesProvider public addressesProvider;\r\n\r\n    /**\r\n    * @dev specifies the health factor threshold at which the user position is liquidated.\r\n    * 1e18 by default, if the health factor drops below 1e18, the loan can be liquidated.\r\n    **/\r\n    uint256 public constant HEALTH_FACTOR_LIQUIDATION_THRESHOLD = 1e18;\r\n\r\n    uint256 public constant DATA_PROVIDER_REVISION = 0x1;\r\n\r\n    function getRevision() internal pure returns (uint256) {\r\n        return DATA_PROVIDER_REVISION;\r\n    }\r\n\r\n    function initialize(LendingPoolAddressesProvider _addressesProvider) public initializer {\r\n        addressesProvider = _addressesProvider;\r\n        core = LendingPoolCore(_addressesProvider.getLendingPoolCore());\r\n    }\r\n\r\n    /**\r\n    * @dev struct to hold calculateUserGlobalData() local computations\r\n    **/\r\n    struct UserGlobalDataLocalVars {\r\n        uint256 reserveUnitPrice;\r\n        uint256 tokenUnit;\r\n        uint256 compoundedLiquidityBalance;\r\n        uint256 compoundedBorrowBalance;\r\n        uint256 reserveDecimals;\r\n        uint256 baseLtv;\r\n        uint256 liquidationThreshold;\r\n        uint256 originationFee;\r\n        bool usageAsCollateralEnabled;\r\n        bool userUsesReserveAsCollateral;\r\n        address currentReserve;\r\n    }\r\n\r\n    /**\r\n    * @dev calculates the user data across the reserves.\r\n    * this includes the total liquidity/collateral/borrow balances in ETH,\r\n    * the average Loan To Value, the average Liquidation Ratio, and the Health factor.\r\n    * @param _user the address of the user\r\n    * @return the total liquidity, total collateral, total borrow balances of the user in ETH.\r\n    * also the average Ltv, liquidation threshold, and the health factor\r\n    **/\r\n    function calculateUserGlobalData(address _user)\r\n        public\r\n        view\r\n        returns (\r\n            uint256 totalLiquidityBalanceETH,\r\n            uint256 totalCollateralBalanceETH,\r\n            uint256 totalBorrowBalanceETH,\r\n            uint256 totalFeesETH,\r\n            uint256 currentLtv,\r\n            uint256 currentLiquidationThreshold,\r\n            uint256 healthFactor,\r\n            bool healthFactorBelowThreshold\r\n        )\r\n    {\r\n        IPriceOracleGetter oracle = IPriceOracleGetter(addressesProvider.getPriceOracle());\r\n\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        UserGlobalDataLocalVars memory vars;\r\n\r\n        address[] memory reserves = core.getReserves();\r\n\r\n        for (uint256 i = 0; i < reserves.length; i++) {\r\n            vars.currentReserve = reserves[i];\r\n\r\n            (\r\n                vars.compoundedLiquidityBalance,\r\n                vars.compoundedBorrowBalance,\r\n                vars.originationFee,\r\n                vars.userUsesReserveAsCollateral\r\n            ) = core.getUserBasicReserveData(vars.currentReserve, _user);\r\n\r\n            if (vars.compoundedLiquidityBalance == 0 && vars.compoundedBorrowBalance == 0) {\r\n                continue;\r\n            }\r\n\r\n            //fetch reserve data\r\n            (\r\n                vars.reserveDecimals,\r\n                vars.baseLtv,\r\n                vars.liquidationThreshold,\r\n                vars.usageAsCollateralEnabled\r\n            ) = core.getReserveConfiguration(vars.currentReserve);\r\n\r\n            vars.tokenUnit = 10 ** vars.reserveDecimals;\r\n            vars.reserveUnitPrice = oracle.getAssetPrice(vars.currentReserve);\r\n\r\n            //liquidity and collateral balance\r\n            if (vars.compoundedLiquidityBalance > 0) {\r\n                uint256 liquidityBalanceETH = vars\r\n                    .reserveUnitPrice\r\n                    .mul(vars.compoundedLiquidityBalance)\r\n                    .div(vars.tokenUnit);\r\n                totalLiquidityBalanceETH = totalLiquidityBalanceETH.add(liquidityBalanceETH);\r\n\r\n                if (vars.usageAsCollateralEnabled && vars.userUsesReserveAsCollateral) {\r\n                    totalCollateralBalanceETH = totalCollateralBalanceETH.add(liquidityBalanceETH);\r\n                    currentLtv = currentLtv.add(liquidityBalanceETH.mul(vars.baseLtv));\r\n                    currentLiquidationThreshold = currentLiquidationThreshold.add(\r\n                        liquidityBalanceETH.mul(vars.liquidationThreshold)\r\n                    );\r\n                }\r\n            }\r\n\r\n            if (vars.compoundedBorrowBalance > 0) {\r\n                totalBorrowBalanceETH = totalBorrowBalanceETH.add(\r\n                    vars.reserveUnitPrice.mul(vars.compoundedBorrowBalance).div(vars.tokenUnit)\r\n                );\r\n                totalFeesETH = totalFeesETH.add(\r\n                    vars.originationFee.mul(vars.reserveUnitPrice).div(vars.tokenUnit)\r\n                );\r\n            }\r\n        }\r\n\r\n        currentLtv = totalCollateralBalanceETH > 0 ? currentLtv.div(totalCollateralBalanceETH) : 0;\r\n        currentLiquidationThreshold = totalCollateralBalanceETH > 0\r\n            ? currentLiquidationThreshold.div(totalCollateralBalanceETH)\r\n            : 0;\r\n\r\n        healthFactor = calculateHealthFactorFromBalancesInternal(\r\n            totalCollateralBalanceETH,\r\n            totalBorrowBalanceETH,\r\n            totalFeesETH,\r\n            currentLiquidationThreshold\r\n        );\r\n        healthFactorBelowThreshold = healthFactor < HEALTH_FACTOR_LIQUIDATION_THRESHOLD;\r\n\r\n    }\r\n\r\n    struct balanceDecreaseAllowedLocalVars {\r\n        uint256 decimals;\r\n        uint256 collateralBalanceETH;\r\n        uint256 borrowBalanceETH;\r\n        uint256 totalFeesETH;\r\n        uint256 currentLiquidationThreshold;\r\n        uint256 reserveLiquidationThreshold;\r\n        uint256 amountToDecreaseETH;\r\n        uint256 collateralBalancefterDecrease;\r\n        uint256 liquidationThresholdAfterDecrease;\r\n        uint256 healthFactorAfterDecrease;\r\n        bool reserveUsageAsCollateralEnabled;\r\n    }\r\n\r\n    /**\r\n    * @dev check if a specific balance decrease is allowed (i.e. doesn't bring the user borrow position health factor under 1e18)\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @param _amount the amount to decrease\r\n    * @return true if the decrease of the balance is allowed\r\n    **/\r\n\r\n    function balanceDecreaseAllowed(address _reserve, address _user, uint256 _amount)\r\n        external\r\n        view\r\n        returns (bool)\r\n    {\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        balanceDecreaseAllowedLocalVars memory vars;\r\n\r\n        (\r\n            vars.decimals,\r\n            ,\r\n            vars.reserveLiquidationThreshold,\r\n            vars.reserveUsageAsCollateralEnabled\r\n        ) = core.getReserveConfiguration(_reserve);\r\n\r\n        if (\r\n            !vars.reserveUsageAsCollateralEnabled ||\r\n            !core.isUserUseReserveAsCollateralEnabled(_reserve, _user)\r\n        ) {\r\n            return true; //if reserve is not used as collateral, no reasons to block the transfer\r\n        }\r\n\r\n        (\r\n            ,\r\n            vars.collateralBalanceETH,\r\n            vars.borrowBalanceETH,\r\n            vars.totalFeesETH,\r\n            ,\r\n            vars.currentLiquidationThreshold,\r\n            ,\r\n\r\n        ) = calculateUserGlobalData(_user);\r\n\r\n        if (vars.borrowBalanceETH == 0) {\r\n            return true; //no borrows - no reasons to block the transfer\r\n        }\r\n\r\n        IPriceOracleGetter oracle = IPriceOracleGetter(addressesProvider.getPriceOracle());\r\n\r\n        vars.amountToDecreaseETH = oracle.getAssetPrice(_reserve).mul(_amount).div(\r\n            10 ** vars.decimals\r\n        );\r\n\r\n        vars.collateralBalancefterDecrease = vars.collateralBalanceETH.sub(\r\n            vars.amountToDecreaseETH\r\n        );\r\n\r\n        //if there is a borrow, there can't be 0 collateral\r\n        if (vars.collateralBalancefterDecrease == 0) {\r\n            return false;\r\n        }\r\n\r\n        vars.liquidationThresholdAfterDecrease = vars\r\n            .collateralBalanceETH\r\n            .mul(vars.currentLiquidationThreshold)\r\n            .sub(vars.amountToDecreaseETH.mul(vars.reserveLiquidationThreshold))\r\n            .div(vars.collateralBalancefterDecrease);\r\n\r\n        uint256 healthFactorAfterDecrease = calculateHealthFactorFromBalancesInternal(\r\n            vars.collateralBalancefterDecrease,\r\n            vars.borrowBalanceETH,\r\n            vars.totalFeesETH,\r\n            vars.liquidationThresholdAfterDecrease\r\n        );\r\n\r\n        return healthFactorAfterDecrease > HEALTH_FACTOR_LIQUIDATION_THRESHOLD;\r\n\r\n    }\r\n\r\n    /**\r\n   * @notice calculates the amount of collateral needed in ETH to cover a new borrow.\r\n   * @param _reserve the reserve from which the user wants to borrow\r\n   * @param _amount the amount the user wants to borrow\r\n   * @param _fee the fee for the amount that the user needs to cover\r\n   * @param _userCurrentBorrowBalanceTH the current borrow balance of the user (before the borrow)\r\n   * @param _userCurrentLtv the average ltv of the user given his current collateral\r\n   * @return the total amount of collateral in ETH to cover the current borrow balance + the new amount + fee\r\n   **/\r\n    function calculateCollateralNeededInETH(\r\n        address _reserve,\r\n        uint256 _amount,\r\n        uint256 _fee,\r\n        uint256 _userCurrentBorrowBalanceTH,\r\n        uint256 _userCurrentFeesETH,\r\n        uint256 _userCurrentLtv\r\n    ) external view returns (uint256) {\r\n        uint256 reserveDecimals = core.getReserveDecimals(_reserve);\r\n\r\n        IPriceOracleGetter oracle = IPriceOracleGetter(addressesProvider.getPriceOracle());\r\n\r\n        uint256 requestedBorrowAmountETH = oracle\r\n            .getAssetPrice(_reserve)\r\n            .mul(_amount.add(_fee))\r\n            .div(10 ** reserveDecimals); //price is in ether\r\n\r\n        //add the current already borrowed amount to the amount requested to calculate the total collateral needed.\r\n        uint256 collateralNeededInETH = _userCurrentBorrowBalanceTH\r\n            .add(_userCurrentFeesETH)\r\n            .add(requestedBorrowAmountETH)\r\n            .mul(100)\r\n            .div(_userCurrentLtv); //LTV is calculated in percentage\r\n\r\n        return collateralNeededInETH;\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev calculates the equivalent amount in ETH that an user can borrow, depending on the available collateral and the\r\n    * average Loan To Value.\r\n    * @param collateralBalanceETH the total collateral balance\r\n    * @param borrowBalanceETH the total borrow balance\r\n    * @param totalFeesETH the total fees\r\n    * @param ltv the average loan to value\r\n    * @return the amount available to borrow in ETH for the user\r\n    **/\r\n\r\n    function calculateAvailableBorrowsETHInternal(\r\n        uint256 collateralBalanceETH,\r\n        uint256 borrowBalanceETH,\r\n        uint256 totalFeesETH,\r\n        uint256 ltv\r\n    ) internal view returns (uint256) {\r\n        uint256 availableBorrowsETH = collateralBalanceETH.mul(ltv).div(100); //ltv is in percentage\r\n\r\n        if (availableBorrowsETH < borrowBalanceETH) {\r\n            return 0;\r\n        }\r\n\r\n        availableBorrowsETH = availableBorrowsETH.sub(borrowBalanceETH.add(totalFeesETH));\r\n        //calculate fee\r\n        uint256 borrowFee = IFeeProvider(addressesProvider.getFeeProvider())\r\n            .calculateLoanOriginationFee(msg.sender, availableBorrowsETH);\r\n        return availableBorrowsETH.sub(borrowFee);\r\n    }\r\n\r\n    /**\r\n    * @dev calculates the health factor from the corresponding balances\r\n    * @param collateralBalanceETH the total collateral balance in ETH\r\n    * @param borrowBalanceETH the total borrow balance in ETH\r\n    * @param totalFeesETH the total fees in ETH\r\n    * @param liquidationThreshold the avg liquidation threshold\r\n    **/\r\n    function calculateHealthFactorFromBalancesInternal(\r\n        uint256 collateralBalanceETH,\r\n        uint256 borrowBalanceETH,\r\n        uint256 totalFeesETH,\r\n        uint256 liquidationThreshold\r\n    ) internal pure returns (uint256) {\r\n        if (borrowBalanceETH == 0) return uint256(-1);\r\n\r\n        return\r\n            (collateralBalanceETH.mul(liquidationThreshold).div(100)).wadDiv(\r\n                borrowBalanceETH.add(totalFeesETH)\r\n            );\r\n    }\r\n\r\n    /**\r\n    * @dev returns the health factor liquidation threshold\r\n    **/\r\n    function getHealthFactorLiquidationThreshold() public pure returns (uint256) {\r\n        return HEALTH_FACTOR_LIQUIDATION_THRESHOLD;\r\n    }\r\n\r\n    /**\r\n    * @dev accessory functions to fetch data from the lendingPoolCore\r\n    **/\r\n    function getReserveConfigurationData(address _reserve)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 ltv,\r\n            uint256 liquidationThreshold,\r\n            uint256 liquidationBonus,\r\n            address rateStrategyAddress,\r\n            bool usageAsCollateralEnabled,\r\n            bool borrowingEnabled,\r\n            bool stableBorrowRateEnabled,\r\n            bool isActive\r\n        )\r\n    {\r\n        (, ltv, liquidationThreshold, usageAsCollateralEnabled) = core.getReserveConfiguration(\r\n            _reserve\r\n        );\r\n        stableBorrowRateEnabled = core.getReserveIsStableBorrowRateEnabled(_reserve);\r\n        borrowingEnabled = core.isReserveBorrowingEnabled(_reserve);\r\n        isActive = core.getReserveIsActive(_reserve);\r\n        liquidationBonus = core.getReserveLiquidationBonus(_reserve);\r\n\r\n        rateStrategyAddress = core.getReserveInterestRateStrategyAddress(_reserve);\r\n    }\r\n\r\n    function getReserveData(address _reserve)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalLiquidity,\r\n            uint256 availableLiquidity,\r\n            uint256 totalBorrowsStable,\r\n            uint256 totalBorrowsVariable,\r\n            uint256 liquidityRate,\r\n            uint256 variableBorrowRate,\r\n            uint256 stableBorrowRate,\r\n            uint256 averageStableBorrowRate,\r\n            uint256 utilizationRate,\r\n            uint256 liquidityIndex,\r\n            uint256 variableBorrowIndex,\r\n            address aTokenAddress,\r\n            uint40 lastUpdateTimestamp\r\n        )\r\n    {\r\n        totalLiquidity = core.getReserveTotalLiquidity(_reserve);\r\n        availableLiquidity = core.getReserveAvailableLiquidity(_reserve);\r\n        totalBorrowsStable = core.getReserveTotalBorrowsStable(_reserve);\r\n        totalBorrowsVariable = core.getReserveTotalBorrowsVariable(_reserve);\r\n        liquidityRate = core.getReserveCurrentLiquidityRate(_reserve);\r\n        variableBorrowRate = core.getReserveCurrentVariableBorrowRate(_reserve);\r\n        stableBorrowRate = core.getReserveCurrentStableBorrowRate(_reserve);\r\n        averageStableBorrowRate = core.getReserveCurrentAverageStableBorrowRate(_reserve);\r\n        utilizationRate = core.getReserveUtilizationRate(_reserve);\r\n        liquidityIndex = core.getReserveLiquidityCumulativeIndex(_reserve);\r\n        variableBorrowIndex = core.getReserveVariableBorrowsCumulativeIndex(_reserve);\r\n        aTokenAddress = core.getReserveATokenAddress(_reserve);\r\n        lastUpdateTimestamp = core.getReserveLastUpdate(_reserve);\r\n    }\r\n\r\n    function getUserAccountData(address _user)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalLiquidityETH,\r\n            uint256 totalCollateralETH,\r\n            uint256 totalBorrowsETH,\r\n            uint256 totalFeesETH,\r\n            uint256 availableBorrowsETH,\r\n            uint256 currentLiquidationThreshold,\r\n            uint256 ltv,\r\n            uint256 healthFactor\r\n        )\r\n    {\r\n        (\r\n            totalLiquidityETH,\r\n            totalCollateralETH,\r\n            totalBorrowsETH,\r\n            totalFeesETH,\r\n            ltv,\r\n            currentLiquidationThreshold,\r\n            healthFactor,\r\n\r\n        ) = calculateUserGlobalData(_user);\r\n\r\n        availableBorrowsETH = calculateAvailableBorrowsETHInternal(\r\n            totalCollateralETH,\r\n            totalBorrowsETH,\r\n            totalFeesETH,\r\n            ltv\r\n        );\r\n    }\r\n\r\n    function getUserReserveData(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 currentATokenBalance,\r\n            uint256 currentBorrowBalance,\r\n            uint256 principalBorrowBalance,\r\n            uint256 borrowRateMode,\r\n            uint256 borrowRate,\r\n            uint256 liquidityRate,\r\n            uint256 originationFee,\r\n            uint256 variableBorrowIndex,\r\n            uint256 lastUpdateTimestamp,\r\n            bool usageAsCollateralEnabled\r\n        )\r\n    {\r\n        currentATokenBalance = AToken(core.getReserveATokenAddress(_reserve)).balanceOf(_user);\r\n        CoreLibrary.InterestRateMode mode = core.getUserCurrentBorrowRateMode(_reserve, _user);\r\n        (principalBorrowBalance, currentBorrowBalance, ) = core.getUserBorrowBalances(\r\n            _reserve,\r\n            _user\r\n        );\r\n\r\n        //default is 0, if mode == CoreLibrary.InterestRateMode.NONE\r\n        if (mode == CoreLibrary.InterestRateMode.STABLE) {\r\n            borrowRate = core.getUserCurrentStableBorrowRate(_reserve, _user);\r\n        } else if (mode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            borrowRate = core.getReserveCurrentVariableBorrowRate(_reserve);\r\n        }\r\n\r\n        borrowRateMode = uint256(mode);\r\n        liquidityRate = core.getReserveCurrentLiquidityRate(_reserve);\r\n        originationFee = core.getUserOriginationFee(_reserve, _user);\r\n        variableBorrowIndex = core.getUserVariableBorrowCumulativeIndex(_reserve, _user);\r\n        lastUpdateTimestamp = core.getUserLastUpdate(_reserve, _user);\r\n        usageAsCollateralEnabled = core.isUserUseReserveAsCollateralEnabled(_reserve, _user);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Aave ERC20 AToken\r\n *\r\n * @dev Implementation of the interest bearing token for the DLP protocol.\r\n * @author Aave\r\n */\r\ncontract AToken is ERC20, ERC20Detailed {\r\n    using WadRayMath for uint256;\r\n\r\n    uint256 public constant UINT_MAX_VALUE = uint256(-1);\r\n\r\n    /**\r\n    * @dev emitted after the redeem action\r\n    * @param _from the address performing the redeem\r\n    * @param _value the amount to be redeemed\r\n    * @param _fromBalanceIncrease the cumulated balance since the last update of the user\r\n    * @param _fromIndex the last index of the user\r\n    **/\r\n    event Redeem(\r\n        address indexed _from,\r\n        uint256 _value,\r\n        uint256 _fromBalanceIncrease,\r\n        uint256 _fromIndex\r\n    );\r\n\r\n    /**\r\n    * @dev emitted after the mint action\r\n    * @param _from the address performing the mint\r\n    * @param _value the amount to be minted\r\n    * @param _fromBalanceIncrease the cumulated balance since the last update of the user\r\n    * @param _fromIndex the last index of the user\r\n    **/\r\n    event MintOnDeposit(\r\n        address indexed _from,\r\n        uint256 _value,\r\n        uint256 _fromBalanceIncrease,\r\n        uint256 _fromIndex\r\n    );\r\n\r\n    /**\r\n    * @dev emitted during the liquidation action, when the liquidator reclaims the underlying\r\n    * asset\r\n    * @param _from the address from which the tokens are being burned\r\n    * @param _value the amount to be burned\r\n    * @param _fromBalanceIncrease the cumulated balance since the last update of the user\r\n    * @param _fromIndex the last index of the user\r\n    **/\r\n    event BurnOnLiquidation(\r\n        address indexed _from,\r\n        uint256 _value,\r\n        uint256 _fromBalanceIncrease,\r\n        uint256 _fromIndex\r\n    );\r\n\r\n    /**\r\n    * @dev emitted during the transfer action\r\n    * @param _from the address from which the tokens are being transferred\r\n    * @param _to the adress of the destination\r\n    * @param _value the amount to be minted\r\n    * @param _fromBalanceIncrease the cumulated balance since the last update of the user\r\n    * @param _toBalanceIncrease the cumulated balance since the last update of the destination\r\n    * @param _fromIndex the last index of the user\r\n    * @param _toIndex the last index of the liquidator\r\n    **/\r\n    event BalanceTransfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _value,\r\n        uint256 _fromBalanceIncrease,\r\n        uint256 _toBalanceIncrease,\r\n        uint256 _fromIndex,\r\n        uint256 _toIndex\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when the accumulation of the interest\r\n    * by an user is redirected to another user\r\n    * @param _from the address from which the interest is being redirected\r\n    * @param _to the adress of the destination\r\n    * @param _fromBalanceIncrease the cumulated balance since the last update of the user\r\n    * @param _fromIndex the last index of the user\r\n    **/\r\n    event InterestStreamRedirected(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _redirectedBalance,\r\n        uint256 _fromBalanceIncrease,\r\n        uint256 _fromIndex\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when the redirected balance of an user is being updated\r\n    * @param _targetAddress the address of which the balance is being updated\r\n    * @param _targetBalanceIncrease the cumulated balance since the last update of the target\r\n    * @param _targetIndex the last index of the user\r\n    * @param _redirectedBalanceAdded the redirected balance being added\r\n    * @param _redirectedBalanceRemoved the redirected balance being removed\r\n    **/\r\n    event RedirectedBalanceUpdated(\r\n        address indexed _targetAddress,\r\n        uint256 _targetBalanceIncrease,\r\n        uint256 _targetIndex,\r\n        uint256 _redirectedBalanceAdded,\r\n        uint256 _redirectedBalanceRemoved\r\n    );\r\n\r\n    event InterestRedirectionAllowanceChanged(\r\n        address indexed _from,\r\n        address indexed _to\r\n    );\r\n\r\n    address public underlyingAssetAddress;\r\n\r\n    mapping (address => uint256) private userIndexes;\r\n    mapping (address => address) private interestRedirectionAddresses;\r\n    mapping (address => uint256) private redirectedBalances;\r\n    mapping (address => address) private interestRedirectionAllowances;\r\n\r\n    LendingPoolAddressesProvider private addressesProvider;\r\n    LendingPoolCore private core;\r\n    LendingPool private pool;\r\n    LendingPoolDataProvider private dataProvider;\r\n\r\n    modifier onlyLendingPool {\r\n        require(\r\n            msg.sender == address(pool),\r\n            \"The caller of this function must be a lending pool\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier whenTransferAllowed(address _from, uint256 _amount) {\r\n        require(isTransferAllowed(_from, _amount), \"Transfer cannot be allowed.\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        LendingPoolAddressesProvider _addressesProvider,\r\n        address _underlyingAsset,\r\n        uint8 _underlyingAssetDecimals,\r\n        string memory _name,\r\n        string memory _symbol\r\n    ) public ERC20Detailed(_name, _symbol, _underlyingAssetDecimals) {\r\n\r\n        addressesProvider = _addressesProvider;\r\n        core = LendingPoolCore(addressesProvider.getLendingPoolCore());\r\n        pool = LendingPool(addressesProvider.getLendingPool());\r\n        dataProvider = LendingPoolDataProvider(addressesProvider.getLendingPoolDataProvider());\r\n        underlyingAssetAddress = _underlyingAsset;\r\n    }\r\n\r\n    /**\r\n     * @notice ERC20 implementation internal function backing transfer() and transferFrom()\r\n     * @dev validates the transfer before allowing it. NOTE: This is not standard ERC20 behavior\r\n     **/\r\n    function _transfer(address _from, address _to, uint256 _amount) internal whenTransferAllowed(_from, _amount) {\r\n\r\n        executeTransferInternal(_from, _to, _amount);\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev redirects the interest generated to a target address.\r\n    * when the interest is redirected, the user balance is added to\r\n    * the recepient redirected balance.\r\n    * @param _to the address to which the interest will be redirected\r\n    **/\r\n    function redirectInterestStream(address _to) external {\r\n        redirectInterestStreamInternal(msg.sender, _to);\r\n    }\r\n\r\n    /**\r\n    * @dev redirects the interest generated by _from to a target address.\r\n    * when the interest is redirected, the user balance is added to\r\n    * the recepient redirected balance. The caller needs to have allowance on\r\n    * the interest redirection to be able to execute the function.\r\n    * @param _from the address of the user whom interest is being redirected\r\n    * @param _to the address to which the interest will be redirected\r\n    **/\r\n    function redirectInterestStreamOf(address _from, address _to) external {\r\n        require(\r\n            msg.sender == interestRedirectionAllowances[_from],\r\n            \"Caller is not allowed to redirect the interest of the user\"\r\n        );\r\n        redirectInterestStreamInternal(_from,_to);\r\n    }\r\n\r\n    /**\r\n    * @dev gives allowance to an address to execute the interest redirection\r\n    * on behalf of the caller.\r\n    * @param _to the address to which the interest will be redirected. Pass address(0) to reset\r\n    * the allowance.\r\n    **/\r\n    function allowInterestRedirectionTo(address _to) external {\r\n        require(_to != msg.sender, \"User cannot give allowance to himself\");\r\n        interestRedirectionAllowances[msg.sender] = _to;\r\n        emit InterestRedirectionAllowanceChanged(\r\n            msg.sender,\r\n            _to\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev redeems aToken for the underlying asset\r\n    * @param _amount the amount being redeemed\r\n    **/\r\n    function redeem(uint256 _amount) external {\r\n\r\n        require(_amount > 0, \"Amount to redeem needs to be > 0\");\r\n\r\n        //cumulates the balance of the user\r\n        (,\r\n        uint256 currentBalance,\r\n        uint256 balanceIncrease,\r\n        uint256 index) = cumulateBalanceInternal(msg.sender);\r\n\r\n        uint256 amountToRedeem = _amount;\r\n\r\n        //if amount is equal to uint(-1), the user wants to redeem everything\r\n        if(_amount == UINT_MAX_VALUE){\r\n            amountToRedeem = currentBalance;\r\n        }\r\n\r\n        require(amountToRedeem <= currentBalance, \"User cannot redeem more than the available balance\");\r\n\r\n        //check that the user is allowed to redeem the amount\r\n        require(isTransferAllowed(msg.sender, amountToRedeem), \"Transfer cannot be allowed.\");\r\n\r\n        //if the user is redirecting his interest towards someone else,\r\n        //we update the redirected balance of the redirection address by adding the accrued interest,\r\n        //and removing the amount to redeem\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(msg.sender, balanceIncrease, amountToRedeem);\r\n\r\n        // burns tokens equivalent to the amount requested\r\n        _burn(msg.sender, amountToRedeem);\r\n\r\n        bool userIndexReset = false;\r\n        //reset the user data if the remaining balance is 0\r\n        if(currentBalance.sub(amountToRedeem) == 0){\r\n            userIndexReset = resetDataOnZeroBalanceInternal(msg.sender);\r\n        }\r\n\r\n        // executes redeem of the underlying asset\r\n        pool.redeemUnderlying(\r\n            underlyingAssetAddress,\r\n            msg.sender,\r\n            amountToRedeem,\r\n            currentBalance.sub(amountToRedeem)\r\n        );\r\n\r\n        emit Redeem(msg.sender, amountToRedeem, balanceIncrease, userIndexReset ? 0 : index);\r\n    }\r\n\r\n    /**\r\n     * @dev mints token in the event of users depositing the underlying asset into the lending pool\r\n     * only lending pools can call this function\r\n     * @param _account the address receiving the minted tokens\r\n     * @param _amount the amount of tokens to mint\r\n     */\r\n    function mintOnDeposit(address _account, uint256 _amount) external onlyLendingPool {\r\n\r\n        //cumulates the balance of the user\r\n        (,\r\n        ,\r\n        uint256 balanceIncrease,\r\n        uint256 index) = cumulateBalanceInternal(_account);\r\n\r\n         //if the user is redirecting his interest towards someone else,\r\n        //we update the redirected balance of the redirection address by adding the accrued interest\r\n        //and the amount deposited\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(_account, balanceIncrease.add(_amount), 0);\r\n\r\n        //mint an equivalent amount of tokens to cover the new deposit\r\n        _mint(_account, _amount);\r\n\r\n        emit MintOnDeposit(_account, _amount, balanceIncrease, index);\r\n    }\r\n\r\n    /**\r\n     * @dev burns token in the event of a borrow being liquidated, in case the liquidators reclaims the underlying asset\r\n     * Transfer of the liquidated asset is executed by the lending pool contract.\r\n     * only lending pools can call this function\r\n     * @param _account the address from which burn the aTokens\r\n     * @param _value the amount to burn\r\n     **/\r\n    function burnOnLiquidation(address _account, uint256 _value) external onlyLendingPool {\r\n\r\n        //cumulates the balance of the user being liquidated\r\n        (,uint256 accountBalance,uint256 balanceIncrease,uint256 index) = cumulateBalanceInternal(_account);\r\n\r\n        //adds the accrued interest and substracts the burned amount to\r\n        //the redirected balance\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(_account, balanceIncrease, _value);\r\n\r\n        //burns the requested amount of tokens\r\n        _burn(_account, _value);\r\n\r\n        bool userIndexReset = false;\r\n        //reset the user data if the remaining balance is 0\r\n        if(accountBalance.sub(_value) == 0){\r\n            userIndexReset = resetDataOnZeroBalanceInternal(_account);\r\n        }\r\n\r\n        emit BurnOnLiquidation(_account, _value, balanceIncrease, userIndexReset ? 0 : index);\r\n    }\r\n\r\n    /**\r\n     * @dev transfers tokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken\r\n     *      only lending pools can call this function\r\n     * @param _from the address from which transfer the aTokens\r\n     * @param _to the destination address\r\n     * @param _value the amount to transfer\r\n     **/\r\n    function transferOnLiquidation(address _from, address _to, uint256 _value) external onlyLendingPool {\r\n\r\n        //being a normal transfer, the Transfer() and BalanceTransfer() are emitted\r\n        //so no need to emit a specific event here\r\n        executeTransferInternal(_from, _to, _value);\r\n    }\r\n\r\n    /**\r\n    * @dev calculates the balance of the user, which is the\r\n    * principal balance + interest generated by the principal balance + interest generated by the redirected balance\r\n    * @param _user the user for which the balance is being calculated\r\n    * @return the total balance of the user\r\n    **/\r\n    function balanceOf(address _user) public view returns(uint256) {\r\n\r\n        //current principal balance of the user\r\n        uint256 currentPrincipalBalance = super.balanceOf(_user);\r\n        //balance redirected by other users to _user for interest rate accrual\r\n        uint256 redirectedBalance = redirectedBalances[_user];\r\n\r\n        if(currentPrincipalBalance == 0 && redirectedBalance == 0){\r\n            return 0;\r\n        }\r\n        //if the _user is not redirecting the interest to anybody, accrues\r\n        //the interest for himself\r\n\r\n        if(interestRedirectionAddresses[_user] == address(0)){\r\n\r\n            //accruing for himself means that both the principal balance and\r\n            //the redirected balance partecipate in the interest\r\n            return calculateCumulatedBalanceInternal(\r\n                _user,\r\n                currentPrincipalBalance.add(redirectedBalance)\r\n                )\r\n                .sub(redirectedBalance);\r\n        }\r\n        else {\r\n            //if the user redirected the interest, then only the redirected\r\n            //balance generates interest. In that case, the interest generated\r\n            //by the redirected balance is added to the current principal balance.\r\n            return currentPrincipalBalance.add(\r\n                calculateCumulatedBalanceInternal(\r\n                    _user,\r\n                    redirectedBalance\r\n                )\r\n                .sub(redirectedBalance)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev returns the principal balance of the user. The principal balance is the last\r\n    * updated stored balance, which does not consider the perpetually accruing interest.\r\n    * @param _user the address of the user\r\n    * @return the principal balance of the user\r\n    **/\r\n    function principalBalanceOf(address _user) external view returns(uint256) {\r\n        return super.balanceOf(_user);\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev calculates the total supply of the specific aToken\r\n    * since the balance of every single user increases over time, the total supply\r\n    * does that too.\r\n    * @return the current total supply\r\n    **/\r\n    function totalSupply() public view returns(uint256) {\r\n\r\n        uint256 currentSupplyPrincipal = super.totalSupply();\r\n\r\n        if(currentSupplyPrincipal == 0){\r\n            return 0;\r\n        }\r\n\r\n        return currentSupplyPrincipal\r\n            .wadToRay()\r\n            .rayMul(core.getReserveNormalizedIncome(underlyingAssetAddress))\r\n            .rayToWad();\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Used to validate transfers before actually executing them.\r\n     * @param _user address of the user to check\r\n     * @param _amount the amount to check\r\n     * @return true if the _user can transfer _amount, false otherwise\r\n     **/\r\n    function isTransferAllowed(address _user, uint256 _amount) public view returns (bool) {\r\n        return dataProvider.balanceDecreaseAllowed(underlyingAssetAddress, _user, _amount);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the last index of the user, used to calculate the balance of the user\r\n    * @param _user address of the user\r\n    * @return the last user index\r\n    **/\r\n    function getUserIndex(address _user) external view returns(uint256) {\r\n        return userIndexes[_user];\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev returns the address to which the interest is redirected\r\n    * @param _user address of the user\r\n    * @return 0 if there is no redirection, an address otherwise\r\n    **/\r\n    function getInterestRedirectionAddress(address _user) external view returns(address) {\r\n        return interestRedirectionAddresses[_user];\r\n    }\r\n\r\n    /**\r\n    * @dev returns the redirected balance of the user. The redirected balance is the balance\r\n    * redirected by other accounts to the user, that is accrueing interest for him.\r\n    * @param _user address of the user\r\n    * @return the total redirected balance\r\n    **/\r\n    function getRedirectedBalance(address _user) external view returns(uint256) {\r\n        return redirectedBalances[_user];\r\n    }\r\n\r\n    /**\r\n    * @dev accumulates the accrued interest of the user to the principal balance\r\n    * @param _user the address of the user for which the interest is being accumulated\r\n    * @return the previous principal balance, the new principal balance, the balance increase\r\n    * and the new user index\r\n    **/\r\n    function cumulateBalanceInternal(address _user)\r\n        internal\r\n        returns(uint256, uint256, uint256, uint256) {\r\n\r\n        uint256 previousPrincipalBalance = super.balanceOf(_user);\r\n\r\n        //calculate the accrued interest since the last accumulation\r\n        uint256 balanceIncrease = balanceOf(_user).sub(previousPrincipalBalance);\r\n        //mints an amount of tokens equivalent to the amount accumulated\r\n        _mint(_user, balanceIncrease);\r\n        //updates the user index\r\n        uint256 index = userIndexes[_user] = core.getReserveNormalizedIncome(underlyingAssetAddress);\r\n        return (\r\n            previousPrincipalBalance,\r\n            previousPrincipalBalance.add(balanceIncrease),\r\n            balanceIncrease,\r\n            index\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev updates the redirected balance of the user. If the user is not redirecting his\r\n    * interest, nothing is executed.\r\n    * @param _user the address of the user for which the interest is being accumulated\r\n    * @param _balanceToAdd the amount to add to the redirected balance\r\n    * @param _balanceToRemove the amount to remove from the redirected balance\r\n    **/\r\n    function updateRedirectedBalanceOfRedirectionAddressInternal(\r\n        address _user,\r\n        uint256 _balanceToAdd,\r\n        uint256 _balanceToRemove\r\n    ) internal {\r\n\r\n        address redirectionAddress = interestRedirectionAddresses[_user];\r\n        //if there isn't any redirection, nothing to be done\r\n        if(redirectionAddress == address(0)){\r\n            return;\r\n        }\r\n\r\n        //compound balances of the redirected address\r\n        (,,uint256 balanceIncrease, uint256 index) = cumulateBalanceInternal(redirectionAddress);\r\n\r\n        //updating the redirected balance\r\n        redirectedBalances[redirectionAddress] = redirectedBalances[redirectionAddress]\r\n            .add(_balanceToAdd)\r\n            .sub(_balanceToRemove);\r\n\r\n        //if the interest of redirectionAddress is also being redirected, we need to update\r\n        //the redirected balance of the redirection target by adding the balance increase\r\n        address targetOfRedirectionAddress = interestRedirectionAddresses[redirectionAddress];\r\n\r\n        if(targetOfRedirectionAddress != address(0)){\r\n            redirectedBalances[targetOfRedirectionAddress] = redirectedBalances[targetOfRedirectionAddress].add(balanceIncrease);\r\n        }\r\n\r\n        emit RedirectedBalanceUpdated(\r\n            redirectionAddress,\r\n            balanceIncrease,\r\n            index,\r\n            _balanceToAdd,\r\n            _balanceToRemove\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev calculate the interest accrued by _user on a specific balance\r\n    * @param _user the address of the user for which the interest is being accumulated\r\n    * @param _balance the balance on which the interest is calculated\r\n    * @return the interest rate accrued\r\n    **/\r\n    function calculateCumulatedBalanceInternal(\r\n        address _user,\r\n        uint256 _balance\r\n    ) internal view returns (uint256) {\r\n        return _balance\r\n            .wadToRay()\r\n            .rayMul(core.getReserveNormalizedIncome(underlyingAssetAddress))\r\n            .rayDiv(userIndexes[_user])\r\n            .rayToWad();\r\n    }\r\n\r\n    /**\r\n    * @dev executes the transfer of aTokens, invoked by both _transfer() and\r\n    *      transferOnLiquidation()\r\n    * @param _from the address from which transfer the aTokens\r\n    * @param _to the destination address\r\n    * @param _value the amount to transfer\r\n    **/\r\n    function executeTransferInternal(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) internal {\r\n\r\n        require(_value > 0, \"Transferred amount needs to be greater than zero\");\r\n\r\n        //cumulate the balance of the sender\r\n        (,\r\n        uint256 fromBalance,\r\n        uint256 fromBalanceIncrease,\r\n        uint256 fromIndex\r\n        ) = cumulateBalanceInternal(_from);\r\n\r\n        //cumulate the balance of the receiver\r\n        (,\r\n        ,\r\n        uint256 toBalanceIncrease,\r\n        uint256 toIndex\r\n        ) = cumulateBalanceInternal(_to);\r\n\r\n        //if the sender is redirecting his interest towards someone else,\r\n        //adds to the redirected balance the accrued interest and removes the amount\r\n        //being transferred\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(_from, fromBalanceIncrease, _value);\r\n\r\n        //if the receiver is redirecting his interest towards someone else,\r\n        //adds to the redirected balance the accrued interest and the amount\r\n        //being transferred\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(_to, toBalanceIncrease.add(_value), 0);\r\n\r\n        //performs the transfer\r\n        super._transfer(_from, _to, _value);\r\n\r\n        bool fromIndexReset = false;\r\n        //reset the user data if the remaining balance is 0\r\n        if(fromBalance.sub(_value) == 0){\r\n            fromIndexReset = resetDataOnZeroBalanceInternal(_from);\r\n        }\r\n\r\n        emit BalanceTransfer(\r\n            _from,\r\n            _to,\r\n            _value,\r\n            fromBalanceIncrease,\r\n            toBalanceIncrease,\r\n            fromIndexReset ? 0 : fromIndex,\r\n            toIndex\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev executes the redirection of the interest from one address to another.\r\n    * immediately after redirection, the destination address will start to accrue interest.\r\n    * @param _from the address from which transfer the aTokens\r\n    * @param _to the destination address\r\n    **/\r\n    function redirectInterestStreamInternal(\r\n        address _from,\r\n        address _to\r\n    ) internal {\r\n\r\n        address currentRedirectionAddress = interestRedirectionAddresses[_from];\r\n\r\n        require(_to != currentRedirectionAddress, \"Interest is already redirected to the user\");\r\n\r\n        //accumulates the accrued interest to the principal\r\n        (uint256 previousPrincipalBalance,\r\n        uint256 fromBalance,\r\n        uint256 balanceIncrease,\r\n        uint256 fromIndex) = cumulateBalanceInternal(_from);\r\n\r\n        require(fromBalance > 0, \"Interest stream can only be redirected if there is a valid balance\");\r\n\r\n        //if the user is already redirecting the interest to someone, before changing\r\n        //the redirection address we substract the redirected balance of the previous\r\n        //recipient\r\n        if(currentRedirectionAddress != address(0)){\r\n            updateRedirectedBalanceOfRedirectionAddressInternal(_from,0, previousPrincipalBalance);\r\n        }\r\n\r\n        //if the user is redirecting the interest back to himself,\r\n        //we simply set to 0 the interest redirection address\r\n        if(_to == _from) {\r\n            interestRedirectionAddresses[_from] = address(0);\r\n            emit InterestStreamRedirected(\r\n                _from,\r\n                address(0),\r\n                fromBalance,\r\n                balanceIncrease,\r\n                fromIndex\r\n            );\r\n            return;\r\n        }\r\n\r\n        //first set the redirection address to the new recipient\r\n        interestRedirectionAddresses[_from] = _to;\r\n\r\n        //adds the user balance to the redirected balance of the destination\r\n        updateRedirectedBalanceOfRedirectionAddressInternal(_from,fromBalance,0);\r\n\r\n        emit InterestStreamRedirected(\r\n            _from,\r\n            _to,\r\n            fromBalance,\r\n            balanceIncrease,\r\n            fromIndex\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev function to reset the interest stream redirection and the user index, if the\r\n    * user has no balance left.\r\n    * @param _user the address of the user\r\n    * @return true if the user index has also been reset, false otherwise. useful to emit the proper user index value\r\n    **/\r\n    function resetDataOnZeroBalanceInternal(address _user) internal returns(bool) {\r\n\r\n        //if the user has 0 principal balance, the interest stream redirection gets reset\r\n        interestRedirectionAddresses[_user] = address(0);\r\n\r\n        //emits a InterestStreamRedirected event to notify that the redirection has been reset\r\n        emit InterestStreamRedirected(_user, address(0),0,0,0);\r\n\r\n        //if the redirected balance is also 0, we clear up the user index\r\n        if(redirectedBalances[_user] == 0){\r\n            userIndexes[_user] = 0;\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n* @title IFlashLoanReceiver interface\r\n* @notice Interface for the Aave fee IFlashLoanReceiver.\r\n* @author Aave\r\n* @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract\r\n**/\r\ninterface IFlashLoanReceiver {\r\n\r\n    function executeOperation(address _reserve, uint256 _amount, uint256 _fee, bytes calldata _params) external;\r\n}\r\n\r\n/**\r\n* @title ILendingRateOracle interface\r\n* @notice Interface for the Aave borrow rate oracle. Provides the average market borrow rate to be used as a base for the stable borrow rate calculations\r\n**/\r\n\r\ninterface ILendingRateOracle {\r\n    /**\r\n    @dev returns the market borrow rate in ray\r\n    **/\r\n    function getMarketBorrowRate(address _asset) external view returns (uint256);\r\n\r\n    /**\r\n    @dev sets the market borrow rate. Rate value must be in ray\r\n    **/\r\n    function setMarketBorrowRate(address _asset, uint256 _rate) external;\r\n}\r\n\r\n/**\r\n@title IReserveInterestRateStrategyInterface interface\r\n@notice Interface for the calculation of the interest rates.\r\n*/\r\n\r\ninterface IReserveInterestRateStrategy {\r\n\r\n    /**\r\n    * @dev returns the base variable borrow rate, in rays\r\n    */\r\n\r\n    function getBaseVariableBorrowRate() external view returns (uint256);\r\n    /**\r\n    * @dev calculates the liquidity, stable, and variable rates depending on the current utilization rate\r\n    *      and the base parameters\r\n    *\r\n    */\r\n    function calculateInterestRates(\r\n        address _reserve,\r\n        uint256 _utilizationRate,\r\n        uint256 _totalBorrowsStable,\r\n        uint256 _totalBorrowsVariable,\r\n        uint256 _averageStableBorrowRate)\r\n    external\r\n    view\r\n    returns (uint256 liquidityRate, uint256 stableBorrowRate, uint256 variableBorrowRate);\r\n}\r\n\r\nlibrary EthAddressLib {\r\n\r\n    /**\r\n    * @dev returns the address used within the protocol to identify ETH\r\n    * @return the address assigned to ETH\r\n     */\r\n    function ethAddress() internal pure returns(address) {\r\n        return 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n    }\r\n}\r\n\r\n/**\r\n* @title LendingPoolCore contract\r\n* @author Aave\r\n* @notice Holds the state of the lending pool and all the funds deposited\r\n* @dev NOTE: The core does not enforce security checks on the update of the state\r\n* (eg, updateStateOnBorrow() does not enforce that borrowed is enabled on the reserve).\r\n* The check that an action can be performed is a duty of the overlying LendingPool contract.\r\n**/\r\n\r\ncontract LendingPoolCore is VersionedInitializable {\r\n    using SafeMath for uint256;\r\n    using WadRayMath for uint256;\r\n    using CoreLibrary for CoreLibrary.ReserveData;\r\n    using CoreLibrary for CoreLibrary.UserReserveData;\r\n    using SafeERC20 for ERC20;\r\n    using Address for address payable;\r\n\r\n    /**\r\n    * @dev Emitted when the state of a reserve is updated\r\n    * @param reserve the address of the reserve\r\n    * @param liquidityRate the new liquidity rate\r\n    * @param stableBorrowRate the new stable borrow rate\r\n    * @param variableBorrowRate the new variable borrow rate\r\n    * @param liquidityIndex the new liquidity index\r\n    * @param variableBorrowIndex the new variable borrow index\r\n    **/\r\n    event ReserveUpdated(\r\n        address indexed reserve,\r\n        uint256 liquidityRate,\r\n        uint256 stableBorrowRate,\r\n        uint256 variableBorrowRate,\r\n        uint256 liquidityIndex,\r\n        uint256 variableBorrowIndex\r\n    );\r\n\r\n    address public lendingPoolAddress;\r\n\r\n    LendingPoolAddressesProvider public addressesProvider;\r\n\r\n    /**\r\n    * @dev only lending pools can use functions affected by this modifier\r\n    **/\r\n    modifier onlyLendingPool {\r\n        require(lendingPoolAddress == msg.sender, \"The caller must be a lending pool contract\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev only lending pools configurator can use functions affected by this modifier\r\n    **/\r\n    modifier onlyLendingPoolConfigurator {\r\n        require(\r\n            addressesProvider.getLendingPoolConfigurator() == msg.sender,\r\n            \"The caller must be a lending pool configurator contract\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    mapping(address => CoreLibrary.ReserveData) internal reserves;\r\n    mapping(address => mapping(address => CoreLibrary.UserReserveData)) internal usersReserveData;\r\n\r\n    address[] public reservesList;\r\n\r\n    uint256 public constant CORE_REVISION = 0x4;\r\n\r\n    /**\r\n    * @dev returns the revision number of the contract\r\n    **/\r\n    function getRevision() internal pure returns (uint256) {\r\n        return CORE_REVISION;\r\n    }\r\n\r\n    /**\r\n    * @dev initializes the Core contract, invoked upon registration on the AddressesProvider\r\n    * @param _addressesProvider the addressesProvider contract\r\n    **/\r\n\r\n    function initialize(LendingPoolAddressesProvider _addressesProvider) public initializer {\r\n        addressesProvider = _addressesProvider;\r\n        refreshConfigInternal();\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a result of a deposit action\r\n    * @param _reserve the address of the reserve in which the deposit is happening\r\n    * @param _user the address of the the user depositing\r\n    * @param _amount the amount being deposited\r\n    * @param _isFirstDeposit true if the user is depositing for the first time\r\n    **/\r\n\r\n    function updateStateOnDeposit(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _amount,\r\n        bool _isFirstDeposit\r\n    ) external onlyLendingPool {\r\n        reserves[_reserve].updateCumulativeIndexes();\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, _amount, 0);\r\n\r\n        if (_isFirstDeposit) {\r\n            //if this is the first deposit of the user, we configure the deposit as enabled to be used as collateral\r\n            setUserUseReserveAsCollateral(_reserve, _user, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a result of a redeem action\r\n    * @param _reserve the address of the reserve in which the redeem is happening\r\n    * @param _user the address of the the user redeeming\r\n    * @param _amountRedeemed the amount being redeemed\r\n    * @param _userRedeemedEverything true if the user is redeeming everything\r\n    **/\r\n    function updateStateOnRedeem(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _amountRedeemed,\r\n        bool _userRedeemedEverything\r\n    ) external onlyLendingPool {\r\n        //compound liquidity and variable borrow interests\r\n        reserves[_reserve].updateCumulativeIndexes();\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, 0, _amountRedeemed);\r\n\r\n        //if user redeemed everything the useReserveAsCollateral flag is reset\r\n        if (_userRedeemedEverything) {\r\n            setUserUseReserveAsCollateral(_reserve, _user, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a result of a flashloan action\r\n    * @param _reserve the address of the reserve in which the flashloan is happening\r\n    * @param _income the income of the protocol as a result of the action\r\n    **/\r\n    function updateStateOnFlashLoan(\r\n        address _reserve,\r\n        uint256 _availableLiquidityBefore,\r\n        uint256 _income,\r\n        uint256 _protocolFee\r\n    ) external onlyLendingPool {\r\n        transferFlashLoanProtocolFeeInternal(_reserve, _protocolFee);\r\n\r\n        //compounding the cumulated interest\r\n        reserves[_reserve].updateCumulativeIndexes();\r\n\r\n        uint256 totalLiquidityBefore = _availableLiquidityBefore.add(\r\n            getReserveTotalBorrows(_reserve)\r\n        );\r\n\r\n        //compounding the received fee into the reserve\r\n        reserves[_reserve].cumulateToLiquidityIndex(totalLiquidityBefore, _income);\r\n\r\n        //refresh interest rates\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, _income, 0);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a consequence of a borrow action.\r\n    * @param _reserve the address of the reserve on which the user is borrowing\r\n    * @param _user the address of the borrower\r\n    * @param _amountBorrowed the new amount borrowed\r\n    * @param _borrowFee the fee on the amount borrowed\r\n    * @param _rateMode the borrow rate mode (stable, variable)\r\n    * @return the new borrow rate for the user\r\n    **/\r\n    function updateStateOnBorrow(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _amountBorrowed,\r\n        uint256 _borrowFee,\r\n        CoreLibrary.InterestRateMode _rateMode\r\n    ) external onlyLendingPool returns (uint256, uint256) {\r\n        // getting the previous borrow data of the user\r\n        (uint256 principalBorrowBalance, , uint256 balanceIncrease) = getUserBorrowBalances(\r\n            _reserve,\r\n            _user\r\n        );\r\n\r\n        updateReserveStateOnBorrowInternal(\r\n            _reserve,\r\n            _user,\r\n            principalBorrowBalance,\r\n            balanceIncrease,\r\n            _amountBorrowed,\r\n            _rateMode\r\n        );\r\n\r\n        updateUserStateOnBorrowInternal(\r\n            _reserve,\r\n            _user,\r\n            _amountBorrowed,\r\n            balanceIncrease,\r\n            _borrowFee,\r\n            _rateMode\r\n        );\r\n\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, 0, _amountBorrowed);\r\n\r\n        return (getUserCurrentBorrowRate(_reserve, _user), balanceIncrease);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a consequence of a repay action.\r\n    * @param _reserve the address of the reserve on which the user is repaying\r\n    * @param _user the address of the borrower\r\n    * @param _paybackAmountMinusFees the amount being paid back minus fees\r\n    * @param _originationFeeRepaid the fee on the amount that is being repaid\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _repaidWholeLoan true if the user is repaying the whole loan\r\n    **/\r\n\r\n    function updateStateOnRepay(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _paybackAmountMinusFees,\r\n        uint256 _originationFeeRepaid,\r\n        uint256 _balanceIncrease,\r\n        bool _repaidWholeLoan\r\n    ) external onlyLendingPool {\r\n        updateReserveStateOnRepayInternal(\r\n            _reserve,\r\n            _user,\r\n            _paybackAmountMinusFees,\r\n            _balanceIncrease\r\n        );\r\n        updateUserStateOnRepayInternal(\r\n            _reserve,\r\n            _user,\r\n            _paybackAmountMinusFees,\r\n            _originationFeeRepaid,\r\n            _balanceIncrease,\r\n            _repaidWholeLoan\r\n        );\r\n\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, _paybackAmountMinusFees, 0);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a consequence of a swap rate action.\r\n    * @param _reserve the address of the reserve on which the user is repaying\r\n    * @param _user the address of the borrower\r\n    * @param _principalBorrowBalance the amount borrowed by the user\r\n    * @param _compoundedBorrowBalance the amount borrowed plus accrued interest\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _currentRateMode the current interest rate mode for the user\r\n    **/\r\n    function updateStateOnSwapRate(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _principalBorrowBalance,\r\n        uint256 _compoundedBorrowBalance,\r\n        uint256 _balanceIncrease,\r\n        CoreLibrary.InterestRateMode _currentRateMode\r\n    ) external onlyLendingPool returns (CoreLibrary.InterestRateMode, uint256) {\r\n        updateReserveStateOnSwapRateInternal(\r\n            _reserve,\r\n            _user,\r\n            _principalBorrowBalance,\r\n            _compoundedBorrowBalance,\r\n            _currentRateMode\r\n        );\r\n\r\n        CoreLibrary.InterestRateMode newRateMode = updateUserStateOnSwapRateInternal(\r\n            _reserve,\r\n            _user,\r\n            _balanceIncrease,\r\n            _currentRateMode\r\n        );\r\n\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, 0, 0);\r\n\r\n        return (newRateMode, getUserCurrentBorrowRate(_reserve, _user));\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a consequence of a liquidation action.\r\n    * @param _principalReserve the address of the principal reserve that is being repaid\r\n    * @param _collateralReserve the address of the collateral reserve that is being liquidated\r\n    * @param _user the address of the borrower\r\n    * @param _amountToLiquidate the amount being repaid by the liquidator\r\n    * @param _collateralToLiquidate the amount of collateral being liquidated\r\n    * @param _feeLiquidated the amount of origination fee being liquidated\r\n    * @param _liquidatedCollateralForFee the amount of collateral equivalent to the origination fee + bonus\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _liquidatorReceivesAToken true if the liquidator will receive aTokens, false otherwise\r\n    **/\r\n    function updateStateOnLiquidation(\r\n        address _principalReserve,\r\n        address _collateralReserve,\r\n        address _user,\r\n        uint256 _amountToLiquidate,\r\n        uint256 _collateralToLiquidate,\r\n        uint256 _feeLiquidated,\r\n        uint256 _liquidatedCollateralForFee,\r\n        uint256 _balanceIncrease,\r\n        bool _liquidatorReceivesAToken\r\n    ) external onlyLendingPool {\r\n        updatePrincipalReserveStateOnLiquidationInternal(\r\n            _principalReserve,\r\n            _user,\r\n            _amountToLiquidate,\r\n            _balanceIncrease\r\n        );\r\n\r\n        updateCollateralReserveStateOnLiquidationInternal(\r\n            _collateralReserve\r\n        );\r\n\r\n        updateUserStateOnLiquidationInternal(\r\n            _principalReserve,\r\n            _user,\r\n            _amountToLiquidate,\r\n            _feeLiquidated,\r\n            _balanceIncrease\r\n        );\r\n\r\n        updateReserveInterestRatesAndTimestampInternal(_principalReserve, _amountToLiquidate, 0);\r\n\r\n        if (!_liquidatorReceivesAToken) {\r\n            updateReserveInterestRatesAndTimestampInternal(\r\n                _collateralReserve,\r\n                0,\r\n                _collateralToLiquidate.add(_liquidatedCollateralForFee)\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the core as a consequence of a stable rate rebalance\r\n    * @param _reserve the address of the principal reserve where the user borrowed\r\n    * @param _user the address of the borrower\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @return the new stable rate for the user\r\n    **/\r\n    function updateStateOnRebalance(address _reserve, address _user, uint256 _balanceIncrease)\r\n        external\r\n        onlyLendingPool\r\n        returns (uint256)\r\n    {\r\n        updateReserveStateOnRebalanceInternal(_reserve, _user, _balanceIncrease);\r\n\r\n        //update user data and rebalance the rate\r\n        updateUserStateOnRebalanceInternal(_reserve, _user, _balanceIncrease);\r\n        updateReserveInterestRatesAndTimestampInternal(_reserve, 0, 0);\r\n        return usersReserveData[_user][_reserve].stableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev enables or disables a reserve as collateral\r\n    * @param _reserve the address of the principal reserve where the user deposited\r\n    * @param _user the address of the depositor\r\n    * @param _useAsCollateral true if the depositor wants to use the reserve as collateral\r\n    **/\r\n    function setUserUseReserveAsCollateral(address _reserve, address _user, bool _useAsCollateral)\r\n        public\r\n        onlyLendingPool\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        user.useAsCollateral = _useAsCollateral;\r\n    }\r\n\r\n    /**\r\n    * @notice ETH/token transfer functions\r\n    **/\r\n\r\n    /**\r\n    * @dev fallback function enforces that the caller is a contract, to support flashloan transfers\r\n    **/\r\n    function() external payable {\r\n        //only contracts can send ETH to the core\r\n        require(msg.sender.isContract(), \"Only contracts can send ether to the Lending pool core\");\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev transfers to the user a specific amount from the reserve.\r\n    * @param _reserve the address of the reserve where the transfer is happening\r\n    * @param _user the address of the user receiving the transfer\r\n    * @param _amount the amount being transferred\r\n    **/\r\n    function transferToUser(address _reserve, address payable _user, uint256 _amount)\r\n        external\r\n        onlyLendingPool\r\n    {\r\n        if (_reserve != EthAddressLib.ethAddress()) {\r\n            ERC20(_reserve).safeTransfer(_user, _amount);\r\n        } else {\r\n            //solium-disable-next-line\r\n            (bool result, ) = _user.call.value(_amount).gas(50000)(\"\");\r\n            require(result, \"Transfer of ETH failed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev transfers the protocol fees to the fees collection address\r\n    * @param _token the address of the token being transferred\r\n    * @param _user the address of the user from where the transfer is happening\r\n    * @param _amount the amount being transferred\r\n    * @param _destination the fee receiver address\r\n    **/\r\n\r\n    function transferToFeeCollectionAddress(\r\n        address _token,\r\n        address _user,\r\n        uint256 _amount,\r\n        address _destination\r\n    ) external payable onlyLendingPool {\r\n        address payable feeAddress = address(uint160(_destination)); //cast the address to payable\r\n\r\n        if (_token != EthAddressLib.ethAddress()) {\r\n            require(\r\n                msg.value == 0,\r\n                \"User is sending ETH along with the ERC20 transfer. Check the value attribute of the transaction\"\r\n            );\r\n            ERC20(_token).safeTransferFrom(_user, feeAddress, _amount);\r\n        } else {\r\n            require(msg.value >= _amount, \"The amount and the value sent to deposit do not match\");\r\n            //solium-disable-next-line\r\n            (bool result, ) = feeAddress.call.value(_amount).gas(50000)(\"\");\r\n            require(result, \"Transfer of ETH failed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev transfers the fees to the fees collection address in the case of liquidation\r\n    * @param _token the address of the token being transferred\r\n    * @param _amount the amount being transferred\r\n    * @param _destination the fee receiver address\r\n    **/\r\n    function liquidateFee(\r\n        address _token,\r\n        uint256 _amount,\r\n        address _destination\r\n    ) external payable onlyLendingPool {\r\n        address payable feeAddress = address(uint160(_destination)); //cast the address to payable\r\n        require(\r\n            msg.value == 0,\r\n            \"Fee liquidation does not require any transfer of value\"\r\n        );\r\n\r\n        if (_token != EthAddressLib.ethAddress()) {\r\n            ERC20(_token).safeTransfer(feeAddress, _amount);\r\n        } else {\r\n            //solium-disable-next-line\r\n            (bool result, ) = feeAddress.call.value(_amount).gas(50000)(\"\");\r\n            require(result, \"Transfer of ETH failed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev transfers an amount from a user to the destination reserve\r\n    * @param _reserve the address of the reserve where the amount is being transferred\r\n    * @param _user the address of the user from where the transfer is happening\r\n    * @param _amount the amount being transferred\r\n    **/\r\n    function transferToReserve(address _reserve, address payable _user, uint256 _amount)\r\n        external\r\n        payable\r\n        onlyLendingPool\r\n    {\r\n        if (_reserve != EthAddressLib.ethAddress()) {\r\n            require(msg.value == 0, \"User is sending ETH along with the ERC20 transfer.\");\r\n            ERC20(_reserve).safeTransferFrom(_user, address(this), _amount);\r\n\r\n        } else {\r\n            require(msg.value >= _amount, \"The amount and the value sent to deposit do not match\");\r\n\r\n            if (msg.value > _amount) {\r\n                //send back excess ETH\r\n                uint256 excessAmount = msg.value.sub(_amount);\r\n                //solium-disable-next-line\r\n                (bool result, ) = _user.call.value(excessAmount).gas(50000)(\"\");\r\n                require(result, \"Transfer of ETH failed\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice data access functions\r\n    **/\r\n\r\n    /**\r\n    * @dev returns the basic data (balances, fee accrued, reserve enabled/disabled as collateral)\r\n    * needed to calculate the global account data in the LendingPoolDataProvider\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @return the user deposited balance, the principal borrow balance, the fee, and if the reserve is enabled as collateral or not\r\n    **/\r\n    function getUserBasicReserveData(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (uint256, uint256, uint256, bool)\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        uint256 underlyingBalance = getUserUnderlyingAssetBalance(_reserve, _user);\r\n\r\n        if (user.principalBorrowBalance == 0) {\r\n            return (underlyingBalance, 0, 0, user.useAsCollateral);\r\n        }\r\n\r\n        return (\r\n            underlyingBalance,\r\n            user.getCompoundedBorrowBalance(reserve),\r\n            user.originationFee,\r\n            user.useAsCollateral\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev checks if a user is allowed to borrow at a stable rate\r\n    * @param _reserve the reserve address\r\n    * @param _user the user\r\n    * @param _amount the amount the the user wants to borrow\r\n    * @return true if the user is allowed to borrow at a stable rate, false otherwise\r\n    **/\r\n\r\n    function isUserAllowedToBorrowAtStable(address _reserve, address _user, uint256 _amount)\r\n        external\r\n        view\r\n        returns (bool)\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        if (!reserve.isStableBorrowRateEnabled) return false;\r\n\r\n        return\r\n            !user.useAsCollateral ||\r\n            !reserve.usageAsCollateralEnabled ||\r\n            _amount > getUserUnderlyingAssetBalance(_reserve, _user);\r\n    }\r\n\r\n    /**\r\n    * @dev gets the underlying asset balance of a user based on the corresponding aToken balance.\r\n    * @param _reserve the reserve address\r\n    * @param _user the user address\r\n    * @return the underlying deposit balance of the user\r\n    **/\r\n\r\n    function getUserUnderlyingAssetBalance(address _reserve, address _user)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        AToken aToken = AToken(reserves[_reserve].aTokenAddress);\r\n        return aToken.balanceOf(_user);\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev gets the interest rate strategy contract address for the reserve\r\n    * @param _reserve the reserve address\r\n    * @return the address of the interest rate strategy contract\r\n    **/\r\n    function getReserveInterestRateStrategyAddress(address _reserve) public view returns (address) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.interestRateStrategyAddress;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the aToken contract address for the reserve\r\n    * @param _reserve the reserve address\r\n    * @return the address of the aToken contract\r\n    **/\r\n\r\n    function getReserveATokenAddress(address _reserve) public view returns (address) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.aTokenAddress;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the available liquidity in the reserve. The available liquidity is the balance of the core contract\r\n    * @param _reserve the reserve address\r\n    * @return the available liquidity\r\n    **/\r\n    function getReserveAvailableLiquidity(address _reserve) public view returns (uint256) {\r\n        uint256 balance = 0;\r\n\r\n        if (_reserve == EthAddressLib.ethAddress()) {\r\n            balance = address(this).balance;\r\n        } else {\r\n            balance = IERC20(_reserve).balanceOf(address(this));\r\n        }\r\n        return balance;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the total liquidity in the reserve. The total liquidity is the balance of the core contract + total borrows\r\n    * @param _reserve the reserve address\r\n    * @return the total liquidity\r\n    **/\r\n    function getReserveTotalLiquidity(address _reserve) public view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return getReserveAvailableLiquidity(_reserve).add(reserve.getTotalBorrows());\r\n    }\r\n\r\n    /**\r\n    * @dev gets the normalized income of the reserve. a value of 1e27 means there is no income. A value of 2e27 means there\r\n    * there has been 100% income.\r\n    * @param _reserve the reserve address\r\n    * @return the reserve normalized income\r\n    **/\r\n    function getReserveNormalizedIncome(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.getNormalizedIncome();\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve total borrows\r\n    * @param _reserve the reserve address\r\n    * @return the total borrows (stable + variable)\r\n    **/\r\n    function getReserveTotalBorrows(address _reserve) public view returns (uint256) {\r\n        return reserves[_reserve].getTotalBorrows();\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve total borrows stable\r\n    * @param _reserve the reserve address\r\n    * @return the total borrows stable\r\n    **/\r\n    function getReserveTotalBorrowsStable(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.totalBorrowsStable;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve total borrows variable\r\n    * @param _reserve the reserve address\r\n    * @return the total borrows variable\r\n    **/\r\n\r\n    function getReserveTotalBorrowsVariable(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.totalBorrowsVariable;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve liquidation threshold\r\n    * @param _reserve the reserve address\r\n    * @return the reserve liquidation threshold\r\n    **/\r\n\r\n    function getReserveLiquidationThreshold(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.liquidationThreshold;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve liquidation bonus\r\n    * @param _reserve the reserve address\r\n    * @return the reserve liquidation bonus\r\n    **/\r\n\r\n    function getReserveLiquidationBonus(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.liquidationBonus;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve current variable borrow rate. Is the base variable borrow rate if the reserve is empty\r\n    * @param _reserve the reserve address\r\n    * @return the reserve current variable borrow rate\r\n    **/\r\n\r\n    function getReserveCurrentVariableBorrowRate(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        if (reserve.currentVariableBorrowRate == 0) {\r\n            return\r\n                IReserveInterestRateStrategy(reserve.interestRateStrategyAddress)\r\n                .getBaseVariableBorrowRate();\r\n        }\r\n        return reserve.currentVariableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve current stable borrow rate. Is the market rate if the reserve is empty\r\n    * @param _reserve the reserve address\r\n    * @return the reserve current stable borrow rate\r\n    **/\r\n\r\n    function getReserveCurrentStableBorrowRate(address _reserve) public view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        ILendingRateOracle oracle = ILendingRateOracle(addressesProvider.getLendingRateOracle());\r\n\r\n        if (reserve.currentStableBorrowRate == 0) {\r\n            //no stable rate borrows yet\r\n            return oracle.getMarketBorrowRate(_reserve);\r\n        }\r\n\r\n        return reserve.currentStableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve average stable borrow rate. The average stable rate is the weighted average\r\n    * of all the loans taken at stable rate.\r\n    * @param _reserve the reserve address\r\n    * @return the reserve current average borrow rate\r\n    **/\r\n    function getReserveCurrentAverageStableBorrowRate(address _reserve)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.currentAverageStableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve liquidity rate\r\n    * @param _reserve the reserve address\r\n    * @return the reserve liquidity rate\r\n    **/\r\n    function getReserveCurrentLiquidityRate(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.currentLiquidityRate;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve liquidity cumulative index\r\n    * @param _reserve the reserve address\r\n    * @return the reserve liquidity cumulative index\r\n    **/\r\n    function getReserveLiquidityCumulativeIndex(address _reserve) external view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.lastLiquidityCumulativeIndex;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the reserve variable borrow index\r\n    * @param _reserve the reserve address\r\n    * @return the reserve variable borrow index\r\n    **/\r\n    function getReserveVariableBorrowsCumulativeIndex(address _reserve)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.lastVariableBorrowCumulativeIndex;\r\n    }\r\n\r\n    /**\r\n    * @dev this function aggregates the configuration parameters of the reserve.\r\n    * It's used in the LendingPoolDataProvider specifically to save gas, and avoid\r\n    * multiple external contract calls to fetch the same data.\r\n    * @param _reserve the reserve address\r\n    * @return the reserve decimals\r\n    * @return the base ltv as collateral\r\n    * @return the liquidation threshold\r\n    * @return if the reserve is used as collateral or not\r\n    **/\r\n    function getReserveConfiguration(address _reserve)\r\n        external\r\n        view\r\n        returns (uint256, uint256, uint256, bool)\r\n    {\r\n        uint256 decimals;\r\n        uint256 baseLTVasCollateral;\r\n        uint256 liquidationThreshold;\r\n        bool usageAsCollateralEnabled;\r\n\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        decimals = reserve.decimals;\r\n        baseLTVasCollateral = reserve.baseLTVasCollateral;\r\n        liquidationThreshold = reserve.liquidationThreshold;\r\n        usageAsCollateralEnabled = reserve.usageAsCollateralEnabled;\r\n\r\n        return (decimals, baseLTVasCollateral, liquidationThreshold, usageAsCollateralEnabled);\r\n    }\r\n\r\n    /**\r\n    * @dev returns the decimals of the reserve\r\n    * @param _reserve the reserve address\r\n    * @return the reserve decimals\r\n    **/\r\n    function getReserveDecimals(address _reserve) external view returns (uint256) {\r\n        return reserves[_reserve].decimals;\r\n    }\r\n\r\n    /**\r\n    * @dev returns true if the reserve is enabled for borrowing\r\n    * @param _reserve the reserve address\r\n    * @return true if the reserve is enabled for borrowing, false otherwise\r\n    **/\r\n\r\n    function isReserveBorrowingEnabled(address _reserve) external view returns (bool) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.borrowingEnabled;\r\n    }\r\n\r\n    /**\r\n    * @dev returns true if the reserve is enabled as collateral\r\n    * @param _reserve the reserve address\r\n    * @return true if the reserve is enabled as collateral, false otherwise\r\n    **/\r\n\r\n    function isReserveUsageAsCollateralEnabled(address _reserve) external view returns (bool) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.usageAsCollateralEnabled;\r\n    }\r\n\r\n    /**\r\n    * @dev returns true if the stable rate is enabled on reserve\r\n    * @param _reserve the reserve address\r\n    * @return true if the stable rate is enabled on reserve, false otherwise\r\n    **/\r\n    function getReserveIsStableBorrowRateEnabled(address _reserve) external view returns (bool) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.isStableBorrowRateEnabled;\r\n    }\r\n\r\n    /**\r\n    * @dev returns true if the reserve is active\r\n    * @param _reserve the reserve address\r\n    * @return true if the reserve is active, false otherwise\r\n    **/\r\n    function getReserveIsActive(address _reserve) external view returns (bool) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.isActive;\r\n    }\r\n\r\n    /**\r\n    * @notice returns if a reserve is freezed\r\n    * @param _reserve the reserve for which the information is needed\r\n    * @return true if the reserve is freezed, false otherwise\r\n    **/\r\n\r\n    function getReserveIsFreezed(address _reserve) external view returns (bool) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        return reserve.isFreezed;\r\n    }\r\n\r\n    /**\r\n    * @notice returns the timestamp of the last action on the reserve\r\n    * @param _reserve the reserve for which the information is needed\r\n    * @return the last updated timestamp of the reserve\r\n    **/\r\n\r\n    function getReserveLastUpdate(address _reserve) external view returns (uint40 timestamp) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        timestamp = reserve.lastUpdateTimestamp;\r\n    }\r\n\r\n    /**\r\n    * @dev returns the utilization rate U of a specific reserve\r\n    * @param _reserve the reserve for which the information is needed\r\n    * @return the utilization rate in ray\r\n    **/\r\n\r\n    function getReserveUtilizationRate(address _reserve) public view returns (uint256) {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        uint256 totalBorrows = reserve.getTotalBorrows();\r\n\r\n        if (totalBorrows == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 availableLiquidity = getReserveAvailableLiquidity(_reserve);\r\n\r\n        return totalBorrows.rayDiv(availableLiquidity.add(totalBorrows));\r\n    }\r\n\r\n    /**\r\n    * @return the array of reserves configured on the core\r\n    **/\r\n    function getReserves() external view returns (address[] memory) {\r\n        return reservesList;\r\n    }\r\n\r\n    /**\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return true if the user has chosen to use the reserve as collateral, false otherwise\r\n    **/\r\n    function isUserUseReserveAsCollateralEnabled(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (bool)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        return user.useAsCollateral;\r\n    }\r\n\r\n    /**\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the origination fee for the user\r\n    **/\r\n    function getUserOriginationFee(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        return user.originationFee;\r\n    }\r\n\r\n    /**\r\n    * @dev users with no loans in progress have NONE as borrow rate mode\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the borrow rate mode for the user,\r\n    **/\r\n\r\n    function getUserCurrentBorrowRateMode(address _reserve, address _user)\r\n        public\r\n        view\r\n        returns (CoreLibrary.InterestRateMode)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        if (user.principalBorrowBalance == 0) {\r\n            return CoreLibrary.InterestRateMode.NONE;\r\n        }\r\n\r\n        return\r\n            user.stableBorrowRate > 0\r\n            ? CoreLibrary.InterestRateMode.STABLE\r\n            : CoreLibrary.InterestRateMode.VARIABLE;\r\n    }\r\n\r\n    /**\r\n    * @dev gets the current borrow rate of the user\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the borrow rate for the user,\r\n    **/\r\n    function getUserCurrentBorrowRate(address _reserve, address _user)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.InterestRateMode rateMode = getUserCurrentBorrowRateMode(_reserve, _user);\r\n\r\n        if (rateMode == CoreLibrary.InterestRateMode.NONE) {\r\n            return 0;\r\n        }\r\n\r\n        return\r\n            rateMode == CoreLibrary.InterestRateMode.STABLE\r\n            ? usersReserveData[_user][_reserve].stableBorrowRate\r\n            : reserves[_reserve].currentVariableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev the stable rate returned is 0 if the user is borrowing at variable or not borrowing at all\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the user stable rate\r\n    **/\r\n    function getUserCurrentStableBorrowRate(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        return user.stableBorrowRate;\r\n    }\r\n\r\n    /**\r\n    * @dev calculates and returns the borrow balances of the user\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @return the principal borrow balance, the compounded balance and the balance increase since the last borrow/repay/swap/rebalance\r\n    **/\r\n\r\n    function getUserBorrowBalances(address _reserve, address _user)\r\n        public\r\n        view\r\n        returns (uint256, uint256, uint256)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        if (user.principalBorrowBalance == 0) {\r\n            return (0, 0, 0);\r\n        }\r\n\r\n        uint256 principal = user.principalBorrowBalance;\r\n        uint256 compoundedBalance = CoreLibrary.getCompoundedBorrowBalance(\r\n            user,\r\n            reserves[_reserve]\r\n        );\r\n        return (principal, compoundedBalance, compoundedBalance.sub(principal));\r\n    }\r\n\r\n    /**\r\n    * @dev the variable borrow index of the user is 0 if the user is not borrowing or borrowing at stable\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the variable borrow index for the user\r\n    **/\r\n\r\n    function getUserVariableBorrowCumulativeIndex(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        return user.lastVariableBorrowCumulativeIndex;\r\n    }\r\n\r\n    /**\r\n    * @dev the variable borrow index of the user is 0 if the user is not borrowing or borrowing at stable\r\n    * @param _reserve the address of the reserve for which the information is needed\r\n    * @param _user the address of the user for which the information is needed\r\n    * @return the variable borrow index for the user\r\n    **/\r\n\r\n    function getUserLastUpdate(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (uint256 timestamp)\r\n    {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        timestamp = user.lastUpdateTimestamp;\r\n    }\r\n\r\n    /**\r\n    * @dev updates the lending pool core configuration\r\n    **/\r\n    function refreshConfiguration() external onlyLendingPoolConfigurator {\r\n        refreshConfigInternal();\r\n    }\r\n\r\n    /**\r\n    * @dev initializes a reserve\r\n    * @param _reserve the address of the reserve\r\n    * @param _aTokenAddress the address of the overlying aToken contract\r\n    * @param _decimals the decimals of the reserve currency\r\n    * @param _interestRateStrategyAddress the address of the interest rate strategy contract\r\n    **/\r\n    function initReserve(\r\n        address _reserve,\r\n        address _aTokenAddress,\r\n        uint256 _decimals,\r\n        address _interestRateStrategyAddress\r\n    ) external onlyLendingPoolConfigurator {\r\n        reserves[_reserve].init(_aTokenAddress, _decimals, _interestRateStrategyAddress);\r\n        addReserveToListInternal(_reserve);\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n    * @dev removes the last added reserve in the reservesList array\r\n    * @param _reserveToRemove the address of the reserve\r\n    **/\r\n    function removeLastAddedReserve(address _reserveToRemove)\r\n     external onlyLendingPoolConfigurator {\r\n\r\n        address lastReserve = reservesList[reservesList.length-1];\r\n\r\n        require(lastReserve == _reserveToRemove, \"Reserve being removed is different than the reserve requested\");\r\n\r\n        //as we can't check if totalLiquidity is 0 (since the reserve added might not be an ERC20) we at least check that there is nothing borrowed\r\n        require(getReserveTotalBorrows(lastReserve) == 0, \"Cannot remove a reserve with liquidity deposited\");\r\n\r\n        reserves[lastReserve].isActive = false;\r\n        reserves[lastReserve].aTokenAddress = address(0);\r\n        reserves[lastReserve].decimals = 0;\r\n        reserves[lastReserve].lastLiquidityCumulativeIndex = 0;\r\n        reserves[lastReserve].lastVariableBorrowCumulativeIndex = 0;\r\n        reserves[lastReserve].borrowingEnabled = false;\r\n        reserves[lastReserve].usageAsCollateralEnabled = false;\r\n        reserves[lastReserve].baseLTVasCollateral = 0;\r\n        reserves[lastReserve].liquidationThreshold = 0;\r\n        reserves[lastReserve].liquidationBonus = 0;\r\n        reserves[lastReserve].interestRateStrategyAddress = address(0);\r\n\r\n        reservesList.pop();\r\n    }\r\n\r\n    /**\r\n    * @dev updates the address of the interest rate strategy contract\r\n    * @param _reserve the address of the reserve\r\n    * @param _rateStrategyAddress the address of the interest rate strategy contract\r\n    **/\r\n\r\n    function setReserveInterestRateStrategyAddress(address _reserve, address _rateStrategyAddress)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        reserves[_reserve].interestRateStrategyAddress = _rateStrategyAddress;\r\n    }\r\n\r\n    /**\r\n    * @dev enables borrowing on a reserve. Also sets the stable rate borrowing\r\n    * @param _reserve the address of the reserve\r\n    * @param _stableBorrowRateEnabled true if the stable rate needs to be enabled, false otherwise\r\n    **/\r\n\r\n    function enableBorrowingOnReserve(address _reserve, bool _stableBorrowRateEnabled)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        reserves[_reserve].enableBorrowing(_stableBorrowRateEnabled);\r\n    }\r\n\r\n    /**\r\n    * @dev disables borrowing on a reserve\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n\r\n    function disableBorrowingOnReserve(address _reserve) external onlyLendingPoolConfigurator {\r\n        reserves[_reserve].disableBorrowing();\r\n    }\r\n\r\n    /**\r\n    * @dev enables a reserve to be used as collateral\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function enableReserveAsCollateral(\r\n        address _reserve,\r\n        uint256 _baseLTVasCollateral,\r\n        uint256 _liquidationThreshold,\r\n        uint256 _liquidationBonus\r\n    ) external onlyLendingPoolConfigurator {\r\n        reserves[_reserve].enableAsCollateral(\r\n            _baseLTVasCollateral,\r\n            _liquidationThreshold,\r\n            _liquidationBonus\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev disables a reserve to be used as collateral\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function disableReserveAsCollateral(address _reserve) external onlyLendingPoolConfigurator {\r\n        reserves[_reserve].disableAsCollateral();\r\n    }\r\n\r\n    /**\r\n    * @dev enable the stable borrow rate mode on a reserve\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function enableReserveStableBorrowRate(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.isStableBorrowRateEnabled = true;\r\n    }\r\n\r\n    /**\r\n    * @dev disable the stable borrow rate mode on a reserve\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function disableReserveStableBorrowRate(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.isStableBorrowRateEnabled = false;\r\n    }\r\n\r\n    /**\r\n    * @dev activates a reserve\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function activateReserve(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        require(\r\n            reserve.lastLiquidityCumulativeIndex > 0 &&\r\n                reserve.lastVariableBorrowCumulativeIndex > 0,\r\n            \"Reserve has not been initialized yet\"\r\n        );\r\n        reserve.isActive = true;\r\n    }\r\n\r\n    /**\r\n    * @dev deactivates a reserve\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function deactivateReserve(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.isActive = false;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to freeze the reserve.\r\n    * A freezed reserve does not allow any action apart from repay, redeem, liquidationCall, rebalance.\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function freezeReserve(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.isFreezed = true;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to unfreeze the reserve. A unfreezed reserve allows any action to be executed.\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    function unfreezeReserve(address _reserve) external onlyLendingPoolConfigurator {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.isFreezed = false;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to update the loan to value of a reserve\r\n    * @param _reserve the address of the reserve\r\n    * @param _ltv the new loan to value\r\n    **/\r\n    function setReserveBaseLTVasCollateral(address _reserve, uint256 _ltv)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.baseLTVasCollateral = _ltv;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to update the liquidation threshold of a reserve\r\n    * @param _reserve the address of the reserve\r\n    * @param _threshold the new liquidation threshold\r\n    **/\r\n    function setReserveLiquidationThreshold(address _reserve, uint256 _threshold)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.liquidationThreshold = _threshold;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to update the liquidation bonus of a reserve\r\n    * @param _reserve the address of the reserve\r\n    * @param _bonus the new liquidation bonus\r\n    **/\r\n    function setReserveLiquidationBonus(address _reserve, uint256 _bonus)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.liquidationBonus = _bonus;\r\n    }\r\n\r\n    /**\r\n    * @notice allows the configurator to update the reserve decimals\r\n    * @param _reserve the address of the reserve\r\n    * @param _decimals the decimals of the reserve\r\n    **/\r\n    function setReserveDecimals(address _reserve, uint256 _decimals)\r\n        external\r\n        onlyLendingPoolConfigurator\r\n    {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        reserve.decimals = _decimals;\r\n    }\r\n\r\n    /**\r\n    * @notice internal functions\r\n    **/\r\n\r\n    /**\r\n    * @dev updates the state of a reserve as a consequence of a borrow action.\r\n    * @param _reserve the address of the reserve on which the user is borrowing\r\n    * @param _user the address of the borrower\r\n    * @param _principalBorrowBalance the previous borrow balance of the borrower before the action\r\n    * @param _balanceIncrease the accrued interest of the user on the previous borrowed amount\r\n    * @param _amountBorrowed the new amount borrowed\r\n    * @param _rateMode the borrow rate mode (stable, variable)\r\n    **/\r\n\r\n    function updateReserveStateOnBorrowInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _principalBorrowBalance,\r\n        uint256 _balanceIncrease,\r\n        uint256 _amountBorrowed,\r\n        CoreLibrary.InterestRateMode _rateMode\r\n    ) internal {\r\n        reserves[_reserve].updateCumulativeIndexes();\r\n\r\n        //increasing reserve total borrows to account for the new borrow balance of the user\r\n        //NOTE: Depending on the previous borrow mode, the borrows might need to be switched from variable to stable or vice versa\r\n\r\n        updateReserveTotalBorrowsByRateModeInternal(\r\n            _reserve,\r\n            _user,\r\n            _principalBorrowBalance,\r\n            _balanceIncrease,\r\n            _amountBorrowed,\r\n            _rateMode\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of a user as a consequence of a borrow action.\r\n    * @param _reserve the address of the reserve on which the user is borrowing\r\n    * @param _user the address of the borrower\r\n    * @param _amountBorrowed the amount borrowed\r\n    * @param _balanceIncrease the accrued interest of the user on the previous borrowed amount\r\n    * @param _rateMode the borrow rate mode (stable, variable)\r\n    * @return the final borrow rate for the user. Emitted by the borrow() event\r\n    **/\r\n\r\n    function updateUserStateOnBorrowInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _amountBorrowed,\r\n        uint256 _balanceIncrease,\r\n        uint256 _fee,\r\n        CoreLibrary.InterestRateMode _rateMode\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        if (_rateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            //stable\r\n            //reset the user variable index, and update the stable rate\r\n            user.stableBorrowRate = reserve.currentStableBorrowRate;\r\n            user.lastVariableBorrowCumulativeIndex = 0;\r\n        } else if (_rateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            //variable\r\n            //reset the user stable rate, and store the new borrow index\r\n            user.stableBorrowRate = 0;\r\n            user.lastVariableBorrowCumulativeIndex = reserve.lastVariableBorrowCumulativeIndex;\r\n        } else {\r\n            revert(\"Invalid borrow rate mode\");\r\n        }\r\n        //increase the principal borrows and the origination fee\r\n        user.principalBorrowBalance = user.principalBorrowBalance.add(_amountBorrowed).add(\r\n            _balanceIncrease\r\n        );\r\n        user.originationFee = user.originationFee.add(_fee);\r\n\r\n        //solium-disable-next-line\r\n        user.lastUpdateTimestamp = uint40(block.timestamp);\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the reserve as a consequence of a repay action.\r\n    * @param _reserve the address of the reserve on which the user is repaying\r\n    * @param _user the address of the borrower\r\n    * @param _paybackAmountMinusFees the amount being paid back minus fees\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    **/\r\n\r\n    function updateReserveStateOnRepayInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _paybackAmountMinusFees,\r\n        uint256 _balanceIncrease\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_reserve][_user];\r\n\r\n        CoreLibrary.InterestRateMode borrowRateMode = getUserCurrentBorrowRateMode(_reserve, _user);\r\n\r\n        //update the indexes\r\n        reserves[_reserve].updateCumulativeIndexes();\r\n\r\n        //compound the cumulated interest to the borrow balance and then subtracting the payback amount\r\n        if (borrowRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            reserve.increaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _balanceIncrease,\r\n                user.stableBorrowRate\r\n            );\r\n            reserve.decreaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _paybackAmountMinusFees,\r\n                user.stableBorrowRate\r\n            );\r\n        } else {\r\n            reserve.increaseTotalBorrowsVariable(_balanceIncrease);\r\n            reserve.decreaseTotalBorrowsVariable(_paybackAmountMinusFees);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user as a consequence of a repay action.\r\n    * @param _reserve the address of the reserve on which the user is repaying\r\n    * @param _user the address of the borrower\r\n    * @param _paybackAmountMinusFees the amount being paid back minus fees\r\n    * @param _originationFeeRepaid the fee on the amount that is being repaid\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _repaidWholeLoan true if the user is repaying the whole loan\r\n    **/\r\n    function updateUserStateOnRepayInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _paybackAmountMinusFees,\r\n        uint256 _originationFeeRepaid,\r\n        uint256 _balanceIncrease,\r\n        bool _repaidWholeLoan\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        //update the user principal borrow balance, adding the cumulated interest and then subtracting the payback amount\r\n        user.principalBorrowBalance = user.principalBorrowBalance.add(_balanceIncrease).sub(\r\n            _paybackAmountMinusFees\r\n        );\r\n        user.lastVariableBorrowCumulativeIndex = reserve.lastVariableBorrowCumulativeIndex;\r\n\r\n        //if the balance decrease is equal to the previous principal (user is repaying the whole loan)\r\n        //and the rate mode is stable, we reset the interest rate mode of the user\r\n        if (_repaidWholeLoan) {\r\n            user.stableBorrowRate = 0;\r\n            user.lastVariableBorrowCumulativeIndex = 0;\r\n        }\r\n        user.originationFee = user.originationFee.sub(_originationFeeRepaid);\r\n\r\n        //solium-disable-next-line\r\n        user.lastUpdateTimestamp = uint40(block.timestamp);\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user as a consequence of a swap rate action.\r\n    * @param _reserve the address of the reserve on which the user is performing the rate swap\r\n    * @param _user the address of the borrower\r\n    * @param _principalBorrowBalance the the principal amount borrowed by the user\r\n    * @param _compoundedBorrowBalance the principal amount plus the accrued interest\r\n    * @param _currentRateMode the rate mode at which the user borrowed\r\n    **/\r\n    function updateReserveStateOnSwapRateInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _principalBorrowBalance,\r\n        uint256 _compoundedBorrowBalance,\r\n        CoreLibrary.InterestRateMode _currentRateMode\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        //compounding reserve indexes\r\n        reserve.updateCumulativeIndexes();\r\n\r\n        if (_currentRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            uint256 userCurrentStableRate = user.stableBorrowRate;\r\n\r\n            //swap to variable\r\n            reserve.decreaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _principalBorrowBalance,\r\n                userCurrentStableRate\r\n            ); //decreasing stable from old principal balance\r\n            reserve.increaseTotalBorrowsVariable(_compoundedBorrowBalance); //increase variable borrows\r\n        } else if (_currentRateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            //swap to stable\r\n            uint256 currentStableRate = reserve.currentStableBorrowRate;\r\n            reserve.decreaseTotalBorrowsVariable(_principalBorrowBalance);\r\n            reserve.increaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _compoundedBorrowBalance,\r\n                currentStableRate\r\n            );\r\n\r\n        } else {\r\n            revert(\"Invalid rate mode received\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user as a consequence of a swap rate action.\r\n    * @param _reserve the address of the reserve on which the user is performing the swap\r\n    * @param _user the address of the borrower\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _currentRateMode the current rate mode of the user\r\n    **/\r\n\r\n    function updateUserStateOnSwapRateInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _balanceIncrease,\r\n        CoreLibrary.InterestRateMode _currentRateMode\r\n    ) internal returns (CoreLibrary.InterestRateMode) {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        CoreLibrary.InterestRateMode newMode = CoreLibrary.InterestRateMode.NONE;\r\n\r\n        if (_currentRateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            //switch to stable\r\n            newMode = CoreLibrary.InterestRateMode.STABLE;\r\n            user.stableBorrowRate = reserve.currentStableBorrowRate;\r\n            user.lastVariableBorrowCumulativeIndex = 0;\r\n        } else if (_currentRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            newMode = CoreLibrary.InterestRateMode.VARIABLE;\r\n            user.stableBorrowRate = 0;\r\n            user.lastVariableBorrowCumulativeIndex = reserve.lastVariableBorrowCumulativeIndex;\r\n        } else {\r\n            revert(\"Invalid interest rate mode received\");\r\n        }\r\n        //compounding cumulated interest\r\n        user.principalBorrowBalance = user.principalBorrowBalance.add(_balanceIncrease);\r\n        //solium-disable-next-line\r\n        user.lastUpdateTimestamp = uint40(block.timestamp);\r\n\r\n        return newMode;\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the principal reserve as a consequence of a liquidation action.\r\n    * @param _principalReserve the address of the principal reserve that is being repaid\r\n    * @param _user the address of the borrower\r\n    * @param _amountToLiquidate the amount being repaid by the liquidator\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    **/\r\n\r\n    function updatePrincipalReserveStateOnLiquidationInternal(\r\n        address _principalReserve,\r\n        address _user,\r\n        uint256 _amountToLiquidate,\r\n        uint256 _balanceIncrease\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_principalReserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_principalReserve];\r\n\r\n        //update principal reserve data\r\n        reserve.updateCumulativeIndexes();\r\n\r\n        CoreLibrary.InterestRateMode borrowRateMode = getUserCurrentBorrowRateMode(\r\n            _principalReserve,\r\n            _user\r\n        );\r\n\r\n        if (borrowRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            //increase the total borrows by the compounded interest\r\n            reserve.increaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _balanceIncrease,\r\n                user.stableBorrowRate\r\n            );\r\n\r\n            //decrease by the actual amount to liquidate\r\n            reserve.decreaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _amountToLiquidate,\r\n                user.stableBorrowRate\r\n            );\r\n\r\n        } else {\r\n            //increase the total borrows by the compounded interest\r\n            reserve.increaseTotalBorrowsVariable(_balanceIncrease);\r\n\r\n            //decrease by the actual amount to liquidate\r\n            reserve.decreaseTotalBorrowsVariable(_amountToLiquidate);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the collateral reserve as a consequence of a liquidation action.\r\n    * @param _collateralReserve the address of the collateral reserve that is being liquidated\r\n    **/\r\n    function updateCollateralReserveStateOnLiquidationInternal(\r\n        address _collateralReserve\r\n    ) internal {\r\n        //update collateral reserve\r\n        reserves[_collateralReserve].updateCumulativeIndexes();\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user being liquidated as a consequence of a liquidation action.\r\n    * @param _reserve the address of the principal reserve that is being repaid\r\n    * @param _user the address of the borrower\r\n    * @param _amountToLiquidate the amount being repaid by the liquidator\r\n    * @param _feeLiquidated the amount of origination fee being liquidated\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    **/\r\n    function updateUserStateOnLiquidationInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _amountToLiquidate,\r\n        uint256 _feeLiquidated,\r\n        uint256 _balanceIncrease\r\n    ) internal {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        //first increase by the compounded interest, then decrease by the liquidated amount\r\n        user.principalBorrowBalance = user.principalBorrowBalance.add(_balanceIncrease).sub(\r\n            _amountToLiquidate\r\n        );\r\n\r\n        if (\r\n            getUserCurrentBorrowRateMode(_reserve, _user) == CoreLibrary.InterestRateMode.VARIABLE\r\n        ) {\r\n            user.lastVariableBorrowCumulativeIndex = reserve.lastVariableBorrowCumulativeIndex;\r\n        }\r\n\r\n        if(_feeLiquidated > 0){\r\n            user.originationFee = user.originationFee.sub(_feeLiquidated);\r\n        }\r\n\r\n        //solium-disable-next-line\r\n        user.lastUpdateTimestamp = uint40(block.timestamp);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the reserve as a consequence of a stable rate rebalance\r\n    * @param _reserve the address of the principal reserve where the user borrowed\r\n    * @param _user the address of the borrower\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    **/\r\n\r\n    function updateReserveStateOnRebalanceInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _balanceIncrease\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n\r\n        reserve.updateCumulativeIndexes();\r\n\r\n        reserve.increaseTotalBorrowsStableAndUpdateAverageRate(\r\n            _balanceIncrease,\r\n            user.stableBorrowRate\r\n        );\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user as a consequence of a stable rate rebalance\r\n    * @param _reserve the address of the principal reserve where the user borrowed\r\n    * @param _user the address of the borrower\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    **/\r\n\r\n    function updateUserStateOnRebalanceInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _balanceIncrease\r\n    ) internal {\r\n        CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        user.principalBorrowBalance = user.principalBorrowBalance.add(_balanceIncrease);\r\n        user.stableBorrowRate = reserve.currentStableBorrowRate;\r\n\r\n        //solium-disable-next-line\r\n        user.lastUpdateTimestamp = uint40(block.timestamp);\r\n    }\r\n\r\n    /**\r\n    * @dev updates the state of the user as a consequence of a stable rate rebalance\r\n    * @param _reserve the address of the principal reserve where the user borrowed\r\n    * @param _user the address of the borrower\r\n    * @param _balanceIncrease the accrued interest on the borrowed amount\r\n    * @param _amountBorrowed the accrued interest on the borrowed amount\r\n    **/\r\n    function updateReserveTotalBorrowsByRateModeInternal(\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _principalBalance,\r\n        uint256 _balanceIncrease,\r\n        uint256 _amountBorrowed,\r\n        CoreLibrary.InterestRateMode _newBorrowRateMode\r\n    ) internal {\r\n        CoreLibrary.InterestRateMode previousRateMode = getUserCurrentBorrowRateMode(\r\n            _reserve,\r\n            _user\r\n        );\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n\r\n        if (previousRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            CoreLibrary.UserReserveData storage user = usersReserveData[_user][_reserve];\r\n            reserve.decreaseTotalBorrowsStableAndUpdateAverageRate(\r\n                _principalBalance,\r\n                user.stableBorrowRate\r\n            );\r\n        } else if (previousRateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            reserve.decreaseTotalBorrowsVariable(_principalBalance);\r\n        }\r\n\r\n        uint256 newPrincipalAmount = _principalBalance.add(_balanceIncrease).add(_amountBorrowed);\r\n        if (_newBorrowRateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            reserve.increaseTotalBorrowsStableAndUpdateAverageRate(\r\n                newPrincipalAmount,\r\n                reserve.currentStableBorrowRate\r\n            );\r\n        } else if (_newBorrowRateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            reserve.increaseTotalBorrowsVariable(newPrincipalAmount);\r\n        } else {\r\n            revert(\"Invalid new borrow rate mode\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev Updates the reserve current stable borrow rate Rf, the current variable borrow rate Rv and the current liquidity rate Rl.\r\n    * Also updates the lastUpdateTimestamp value. Please refer to the whitepaper for further information.\r\n    * @param _reserve the address of the reserve to be updated\r\n    * @param _liquidityAdded the amount of liquidity added to the protocol (deposit or repay) in the previous action\r\n    * @param _liquidityTaken the amount of liquidity taken from the protocol (redeem or borrow)\r\n    **/\r\n\r\n    function updateReserveInterestRatesAndTimestampInternal(\r\n        address _reserve,\r\n        uint256 _liquidityAdded,\r\n        uint256 _liquidityTaken\r\n    ) internal {\r\n        CoreLibrary.ReserveData storage reserve = reserves[_reserve];\r\n        (uint256 newLiquidityRate, uint256 newStableRate, uint256 newVariableRate) = IReserveInterestRateStrategy(\r\n            reserve\r\n                .interestRateStrategyAddress\r\n        )\r\n            .calculateInterestRates(\r\n            _reserve,\r\n            getReserveAvailableLiquidity(_reserve).add(_liquidityAdded).sub(_liquidityTaken),\r\n            reserve.totalBorrowsStable,\r\n            reserve.totalBorrowsVariable,\r\n            reserve.currentAverageStableBorrowRate\r\n        );\r\n\r\n        reserve.currentLiquidityRate = newLiquidityRate;\r\n        reserve.currentStableBorrowRate = newStableRate;\r\n        reserve.currentVariableBorrowRate = newVariableRate;\r\n\r\n        //solium-disable-next-line\r\n        reserve.lastUpdateTimestamp = uint40(block.timestamp);\r\n\r\n        emit ReserveUpdated(\r\n            _reserve,\r\n            newLiquidityRate,\r\n            newStableRate,\r\n            newVariableRate,\r\n            reserve.lastLiquidityCumulativeIndex,\r\n            reserve.lastVariableBorrowCumulativeIndex\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev transfers to the protocol fees of a flashloan to the fees collection address\r\n    * @param _token the address of the token being transferred\r\n    * @param _amount the amount being transferred\r\n    **/\r\n\r\n    function transferFlashLoanProtocolFeeInternal(address _token, uint256 _amount) internal {\r\n        address payable receiver = address(uint160(addressesProvider.getTokenDistributor()));\r\n\r\n        if (_token != EthAddressLib.ethAddress()) {\r\n            ERC20(_token).safeTransfer(receiver, _amount);\r\n        } else {\r\n            receiver.transfer(_amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev updates the internal configuration of the core\r\n    **/\r\n    function refreshConfigInternal() internal {\r\n        lendingPoolAddress = addressesProvider.getLendingPool();\r\n    }\r\n\r\n    /**\r\n    * @dev adds a reserve to the array of the reserves address\r\n    **/\r\n    function addReserveToListInternal(address _reserve) internal {\r\n        bool reserveAlreadyAdded = false;\r\n        for (uint256 i = 0; i < reservesList.length; i++)\r\n            if (reservesList[i] == _reserve) {\r\n                reserveAlreadyAdded = true;\r\n            }\r\n        if (!reserveAlreadyAdded) reservesList.push(_reserve);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n* @title LendingPool contract\r\n* @notice Implements the actions of the LendingPool, and exposes accessory methods to fetch the users and reserve data\r\n* @author Aave\r\n **/\r\n\r\ncontract LendingPool is ReentrancyGuard, VersionedInitializable {\r\n    using SafeMath for uint256;\r\n    using WadRayMath for uint256;\r\n    using Address for address;\r\n\r\n    LendingPoolAddressesProvider public addressesProvider;\r\n    LendingPoolCore public core;\r\n    LendingPoolDataProvider public dataProvider;\r\n    LendingPoolParametersProvider public parametersProvider;\r\n    IFeeProvider feeProvider;\r\n\r\n    /**\r\n    * @dev emitted on deposit\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @param _amount the amount to be deposited\r\n    * @param _referral the referral number of the action\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event Deposit(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _amount,\r\n        uint16 indexed _referral,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted during a redeem action.\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @param _amount the amount to be deposited\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event RedeemUnderlying(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _amount,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted on borrow\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    * @param _amount the amount to be deposited\r\n    * @param _borrowRateMode the rate mode, can be either 1-stable or 2-variable\r\n    * @param _borrowRate the rate at which the user has borrowed\r\n    * @param _originationFee the origination fee to be paid by the user\r\n    * @param _borrowBalanceIncrease the balance increase since the last borrow, 0 if it's the first time borrowing\r\n    * @param _referral the referral number of the action\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event Borrow(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _amount,\r\n        uint256 _borrowRateMode,\r\n        uint256 _borrowRate,\r\n        uint256 _originationFee,\r\n        uint256 _borrowBalanceIncrease,\r\n        uint16 indexed _referral,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted on repay\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user for which the repay has been executed\r\n    * @param _repayer the address of the user that has performed the repay action\r\n    * @param _amountMinusFees the amount repaid minus fees\r\n    * @param _fees the fees repaid\r\n    * @param _borrowBalanceIncrease the balance increase since the last action\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event Repay(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        address indexed _repayer,\r\n        uint256 _amountMinusFees,\r\n        uint256 _fees,\r\n        uint256 _borrowBalanceIncrease,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when a user performs a rate swap\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user executing the swap\r\n    * @param _newRateMode the new interest rate mode\r\n    * @param _newRate the new borrow rate\r\n    * @param _borrowBalanceIncrease the balance increase since the last action\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event Swap(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _newRateMode,\r\n        uint256 _newRate,\r\n        uint256 _borrowBalanceIncrease,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when a user enables a reserve as collateral\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    **/\r\n    event ReserveUsedAsCollateralEnabled(address indexed _reserve, address indexed _user);\r\n\r\n    /**\r\n    * @dev emitted when a user disables a reserve as collateral\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user\r\n    **/\r\n    event ReserveUsedAsCollateralDisabled(address indexed _reserve, address indexed _user);\r\n\r\n    /**\r\n    * @dev emitted when the stable rate of a user gets rebalanced\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user for which the rebalance has been executed\r\n    * @param _newStableRate the new stable borrow rate after the rebalance\r\n    * @param _borrowBalanceIncrease the balance increase since the last action\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event RebalanceStableBorrowRate(\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _newStableRate,\r\n        uint256 _borrowBalanceIncrease,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when a flashloan is executed\r\n    * @param _target the address of the flashLoanReceiver\r\n    * @param _reserve the address of the reserve\r\n    * @param _amount the amount requested\r\n    * @param _totalFee the total fee on the amount\r\n    * @param _protocolFee the part of the fee for the protocol\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event FlashLoan(\r\n        address indexed _target,\r\n        address indexed _reserve,\r\n        uint256 _amount,\r\n        uint256 _totalFee,\r\n        uint256 _protocolFee,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev these events are not emitted directly by the LendingPool\r\n    * but they are declared here as the LendingPoolLiquidationManager\r\n    * is executed using a delegateCall().\r\n    * This allows to have the events in the generated ABI for LendingPool.\r\n    **/\r\n\r\n    /**\r\n    * @dev emitted when a borrow fee is liquidated\r\n    * @param _collateral the address of the collateral being liquidated\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user being liquidated\r\n    * @param _feeLiquidated the total fee liquidated\r\n    * @param _liquidatedCollateralForFee the amount of collateral received by the protocol in exchange for the fee\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event OriginationFeeLiquidated(\r\n        address indexed _collateral,\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _feeLiquidated,\r\n        uint256 _liquidatedCollateralForFee,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when a borrower is liquidated\r\n    * @param _collateral the address of the collateral being liquidated\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user being liquidated\r\n    * @param _purchaseAmount the total amount liquidated\r\n    * @param _liquidatedCollateralAmount the amount of collateral being liquidated\r\n    * @param _accruedBorrowInterest the amount of interest accrued by the borrower since the last action\r\n    * @param _liquidator the address of the liquidator\r\n    * @param _receiveAToken true if the liquidator wants to receive aTokens, false otherwise\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event LiquidationCall(\r\n        address indexed _collateral,\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _purchaseAmount,\r\n        uint256 _liquidatedCollateralAmount,\r\n        uint256 _accruedBorrowInterest,\r\n        address _liquidator,\r\n        bool _receiveAToken,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev functions affected by this modifier can only be invoked by the\r\n    * aToken.sol contract\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    modifier onlyOverlyingAToken(address _reserve) {\r\n        require(\r\n            msg.sender == core.getReserveATokenAddress(_reserve),\r\n            \"The caller of this function can only be the aToken contract of this reserve\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev functions affected by this modifier can only be invoked if the reserve is active\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    modifier onlyActiveReserve(address _reserve) {\r\n        requireReserveActiveInternal(_reserve);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev functions affected by this modifier can only be invoked if the reserve is not freezed.\r\n    * A freezed reserve only allows redeems, repays, rebalances and liquidations.\r\n    * @param _reserve the address of the reserve\r\n    **/\r\n    modifier onlyUnfreezedReserve(address _reserve) {\r\n        requireReserveNotFreezedInternal(_reserve);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev functions affected by this modifier can only be invoked if the provided _amount input parameter\r\n    * is not zero.\r\n    * @param _amount the amount provided\r\n    **/\r\n    modifier onlyAmountGreaterThanZero(uint256 _amount) {\r\n        requireAmountGreaterThanZeroInternal(_amount);\r\n        _;\r\n    }\r\n\r\n    uint256 public constant UINT_MAX_VALUE = uint256(-1);\r\n\r\n    uint256 public constant LENDINGPOOL_REVISION = 0x2;\r\n\r\n    function getRevision() internal pure returns (uint256) {\r\n        return LENDINGPOOL_REVISION;\r\n    }\r\n\r\n    /**\r\n    * @dev this function is invoked by the proxy contract when the LendingPool contract is added to the\r\n    * AddressesProvider.\r\n    * @param _addressesProvider the address of the LendingPoolAddressesProvider registry\r\n    **/\r\n    function initialize(LendingPoolAddressesProvider _addressesProvider) public initializer {\r\n        addressesProvider = _addressesProvider;\r\n        core = LendingPoolCore(addressesProvider.getLendingPoolCore());\r\n        dataProvider = LendingPoolDataProvider(addressesProvider.getLendingPoolDataProvider());\r\n        parametersProvider = LendingPoolParametersProvider(\r\n            addressesProvider.getLendingPoolParametersProvider()\r\n        );\r\n        feeProvider = IFeeProvider(addressesProvider.getFeeProvider());\r\n    }\r\n\r\n    /**\r\n    * @dev deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens)\r\n    * is minted.\r\n    * @param _reserve the address of the reserve\r\n    * @param _amount the amount to be deposited\r\n    * @param _referralCode integrators are assigned a referral code and can potentially receive rewards.\r\n    **/\r\n    function deposit(address _reserve, uint256 _amount, uint16 _referralCode)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyUnfreezedReserve(_reserve)\r\n        onlyAmountGreaterThanZero(_amount)\r\n    {\r\n        AToken aToken = AToken(core.getReserveATokenAddress(_reserve));\r\n\r\n        bool isFirstDeposit = aToken.balanceOf(msg.sender) == 0;\r\n\r\n        core.updateStateOnDeposit(_reserve, msg.sender, _amount, isFirstDeposit);\r\n\r\n        //minting AToken to user 1:1 with the specific exchange rate\r\n        aToken.mintOnDeposit(msg.sender, _amount);\r\n\r\n        //transfer to the core contract\r\n        core.transferToReserve.value(msg.value)(_reserve, msg.sender, _amount);\r\n\r\n        //solium-disable-next-line\r\n        emit Deposit(_reserve, msg.sender, _amount, _referralCode, block.timestamp);\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev Redeems the underlying amount of assets requested by _user.\r\n    * This function is executed by the overlying aToken contract in response to a redeem action.\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user performing the action\r\n    * @param _amount the underlying amount to be redeemed\r\n    **/\r\n    function redeemUnderlying(\r\n        address _reserve,\r\n        address payable _user,\r\n        uint256 _amount,\r\n        uint256 _aTokenBalanceAfterRedeem\r\n    )\r\n        external\r\n        nonReentrant\r\n        onlyOverlyingAToken(_reserve)\r\n        onlyActiveReserve(_reserve)\r\n        onlyAmountGreaterThanZero(_amount)\r\n    {\r\n        uint256 currentAvailableLiquidity = core.getReserveAvailableLiquidity(_reserve);\r\n        require(\r\n            currentAvailableLiquidity >= _amount,\r\n            \"There is not enough liquidity available to redeem\"\r\n        );\r\n\r\n        core.updateStateOnRedeem(_reserve, _user, _amount, _aTokenBalanceAfterRedeem == 0);\r\n\r\n        core.transferToUser(_reserve, _user, _amount);\r\n\r\n        //solium-disable-next-line\r\n        emit RedeemUnderlying(_reserve, _user, _amount, block.timestamp);\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev data structures for local computations in the borrow() method.\r\n    */\r\n\r\n    struct BorrowLocalVars {\r\n        uint256 principalBorrowBalance;\r\n        uint256 currentLtv;\r\n        uint256 currentLiquidationThreshold;\r\n        uint256 borrowFee;\r\n        uint256 requestedBorrowAmountETH;\r\n        uint256 amountOfCollateralNeededETH;\r\n        uint256 userCollateralBalanceETH;\r\n        uint256 userBorrowBalanceETH;\r\n        uint256 userTotalFeesETH;\r\n        uint256 borrowBalanceIncrease;\r\n        uint256 currentReserveStableRate;\r\n        uint256 availableLiquidity;\r\n        uint256 reserveDecimals;\r\n        uint256 finalUserBorrowRate;\r\n        CoreLibrary.InterestRateMode rateMode;\r\n        bool healthFactorBelowThreshold;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows users to borrow a specific amount of the reserve currency, provided that the borrower\r\n    * already deposited enough collateral.\r\n    * @param _reserve the address of the reserve\r\n    * @param _amount the amount to be borrowed\r\n    * @param _interestRateMode the interest rate mode at which the user wants to borrow. Can be 0 (STABLE) or 1 (VARIABLE)\r\n    **/\r\n    function borrow(\r\n        address _reserve,\r\n        uint256 _amount,\r\n        uint256 _interestRateMode,\r\n        uint16 _referralCode\r\n    )\r\n        external\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyUnfreezedReserve(_reserve)\r\n        onlyAmountGreaterThanZero(_amount)\r\n    {\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        BorrowLocalVars memory vars;\r\n\r\n        //check that the reserve is enabled for borrowing\r\n        require(core.isReserveBorrowingEnabled(_reserve), \"Reserve is not enabled for borrowing\");\r\n        //validate interest rate mode\r\n        require(\r\n            uint256(CoreLibrary.InterestRateMode.VARIABLE) == _interestRateMode ||\r\n                uint256(CoreLibrary.InterestRateMode.STABLE) == _interestRateMode,\r\n            \"Invalid interest rate mode selected\"\r\n        );\r\n\r\n        //cast the rateMode to coreLibrary.interestRateMode\r\n        vars.rateMode = CoreLibrary.InterestRateMode(_interestRateMode);\r\n\r\n        //check that the amount is available in the reserve\r\n        vars.availableLiquidity = core.getReserveAvailableLiquidity(_reserve);\r\n\r\n        require(\r\n            vars.availableLiquidity >= _amount,\r\n            \"There is not enough liquidity available in the reserve\"\r\n        );\r\n\r\n        (\r\n            ,\r\n            vars.userCollateralBalanceETH,\r\n            vars.userBorrowBalanceETH,\r\n            vars.userTotalFeesETH,\r\n            vars.currentLtv,\r\n            vars.currentLiquidationThreshold,\r\n            ,\r\n            vars.healthFactorBelowThreshold\r\n        ) = dataProvider.calculateUserGlobalData(msg.sender);\r\n\r\n        require(vars.userCollateralBalanceETH > 0, \"The collateral balance is 0\");\r\n\r\n        require(\r\n            !vars.healthFactorBelowThreshold,\r\n            \"The borrower can already be liquidated so he cannot borrow more\"\r\n        );\r\n\r\n        //calculating fees\r\n        vars.borrowFee = feeProvider.calculateLoanOriginationFee(msg.sender, _amount);\r\n\r\n        require(vars.borrowFee > 0, \"The amount to borrow is too small\");\r\n\r\n        vars.amountOfCollateralNeededETH = dataProvider.calculateCollateralNeededInETH(\r\n            _reserve,\r\n            _amount,\r\n            vars.borrowFee,\r\n            vars.userBorrowBalanceETH,\r\n            vars.userTotalFeesETH,\r\n            vars.currentLtv\r\n        );\r\n\r\n        require(\r\n            vars.amountOfCollateralNeededETH <= vars.userCollateralBalanceETH,\r\n            \"There is not enough collateral to cover a new borrow\"\r\n        );\r\n\r\n        /**\r\n        * Following conditions need to be met if the user is borrowing at a stable rate:\r\n        * 1. Reserve must be enabled for stable rate borrowing\r\n        * 2. Users cannot borrow from the reserve if their collateral is (mostly) the same currency\r\n        *    they are borrowing, to prevent abuses.\r\n        * 3. Users will be able to borrow only a relatively small, configurable amount of the total\r\n        *    liquidity\r\n        **/\r\n\r\n        if (vars.rateMode == CoreLibrary.InterestRateMode.STABLE) {\r\n            //check if the borrow mode is stable and if stable rate borrowing is enabled on this reserve\r\n            require(\r\n                core.isUserAllowedToBorrowAtStable(_reserve, msg.sender, _amount),\r\n                \"User cannot borrow the selected amount with a stable rate\"\r\n            );\r\n\r\n            //calculate the max available loan size in stable rate mode as a percentage of the\r\n            //available liquidity\r\n            uint256 maxLoanPercent = parametersProvider.getMaxStableRateBorrowSizePercent();\r\n            uint256 maxLoanSizeStable = vars.availableLiquidity.mul(maxLoanPercent).div(100);\r\n\r\n            require(\r\n                _amount <= maxLoanSizeStable,\r\n                \"User is trying to borrow too much liquidity at a stable rate\"\r\n            );\r\n        }\r\n\r\n        //all conditions passed - borrow is accepted\r\n        (vars.finalUserBorrowRate, vars.borrowBalanceIncrease) = core.updateStateOnBorrow(\r\n            _reserve,\r\n            msg.sender,\r\n            _amount,\r\n            vars.borrowFee,\r\n            vars.rateMode\r\n        );\r\n\r\n        //if we reached this point, we can transfer\r\n        core.transferToUser(_reserve, msg.sender, _amount);\r\n\r\n        emit Borrow(\r\n            _reserve,\r\n            msg.sender,\r\n            _amount,\r\n            _interestRateMode,\r\n            vars.finalUserBorrowRate,\r\n            vars.borrowFee,\r\n            vars.borrowBalanceIncrease,\r\n            _referralCode,\r\n            //solium-disable-next-line\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @notice repays a borrow on the specific reserve, for the specified amount (or for the whole amount, if uint256(-1) is specified).\r\n    * @dev the target user is defined by _onBehalfOf. If there is no repayment on behalf of another account,\r\n    * _onBehalfOf must be equal to msg.sender.\r\n    * @param _reserve the address of the reserve on which the user borrowed\r\n    * @param _amount the amount to repay, or uint256(-1) if the user wants to repay everything\r\n    * @param _onBehalfOf the address for which msg.sender is repaying.\r\n    **/\r\n\r\n    struct RepayLocalVars {\r\n        uint256 principalBorrowBalance;\r\n        uint256 compoundedBorrowBalance;\r\n        uint256 borrowBalanceIncrease;\r\n        bool isETH;\r\n        uint256 paybackAmount;\r\n        uint256 paybackAmountMinusFees;\r\n        uint256 currentStableRate;\r\n        uint256 originationFee;\r\n    }\r\n\r\n    function repay(address _reserve, uint256 _amount, address payable _onBehalfOf)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyAmountGreaterThanZero(_amount)\r\n    {\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        RepayLocalVars memory vars;\r\n\r\n        (\r\n            vars.principalBorrowBalance,\r\n            vars.compoundedBorrowBalance,\r\n            vars.borrowBalanceIncrease\r\n        ) = core.getUserBorrowBalances(_reserve, _onBehalfOf);\r\n\r\n        vars.originationFee = core.getUserOriginationFee(_reserve, _onBehalfOf);\r\n        vars.isETH = EthAddressLib.ethAddress() == _reserve;\r\n\r\n        require(vars.compoundedBorrowBalance > 0, \"The user does not have any borrow pending\");\r\n\r\n        require(\r\n            _amount != UINT_MAX_VALUE || msg.sender == _onBehalfOf,\r\n            \"To repay on behalf of an user an explicit amount to repay is needed.\"\r\n        );\r\n\r\n        //default to max amount\r\n        vars.paybackAmount = vars.compoundedBorrowBalance.add(vars.originationFee);\r\n\r\n        if (_amount != UINT_MAX_VALUE && _amount < vars.paybackAmount) {\r\n            vars.paybackAmount = _amount;\r\n        }\r\n\r\n        require(\r\n            !vars.isETH || msg.value >= vars.paybackAmount,\r\n            \"Invalid msg.value sent for the repayment\"\r\n        );\r\n\r\n        //if the amount is smaller than the origination fee, just transfer the amount to the fee destination address\r\n        if (vars.paybackAmount <= vars.originationFee) {\r\n            core.updateStateOnRepay(\r\n                _reserve,\r\n                _onBehalfOf,\r\n                0,\r\n                vars.paybackAmount,\r\n                vars.borrowBalanceIncrease,\r\n                false\r\n            );\r\n\r\n            core.transferToFeeCollectionAddress.value(vars.isETH ? vars.paybackAmount : 0)(\r\n                _reserve,\r\n                _onBehalfOf,\r\n                vars.paybackAmount,\r\n                addressesProvider.getTokenDistributor()\r\n            );\r\n\r\n            emit Repay(\r\n                _reserve,\r\n                _onBehalfOf,\r\n                msg.sender,\r\n                0,\r\n                vars.paybackAmount,\r\n                vars.borrowBalanceIncrease,\r\n                //solium-disable-next-line\r\n                block.timestamp\r\n            );\r\n            return;\r\n        }\r\n\r\n        vars.paybackAmountMinusFees = vars.paybackAmount.sub(vars.originationFee);\r\n\r\n        core.updateStateOnRepay(\r\n            _reserve,\r\n            _onBehalfOf,\r\n            vars.paybackAmountMinusFees,\r\n            vars.originationFee,\r\n            vars.borrowBalanceIncrease,\r\n            vars.compoundedBorrowBalance == vars.paybackAmountMinusFees\r\n        );\r\n\r\n        //if the user didn't repay the origination fee, transfer the fee to the fee collection address\r\n        if(vars.originationFee > 0) {\r\n            core.transferToFeeCollectionAddress.value(vars.isETH ? vars.originationFee : 0)(\r\n                _reserve,\r\n                _onBehalfOf,\r\n                vars.originationFee,\r\n                addressesProvider.getTokenDistributor()\r\n            );\r\n        }\r\n\r\n        //sending the total msg.value if the transfer is ETH.\r\n        //the transferToReserve() function will take care of sending the\r\n        //excess ETH back to the caller\r\n        core.transferToReserve.value(vars.isETH ? msg.value.sub(vars.originationFee) : 0)(\r\n            _reserve,\r\n            msg.sender,\r\n            vars.paybackAmountMinusFees\r\n        );\r\n\r\n        emit Repay(\r\n            _reserve,\r\n            _onBehalfOf,\r\n            msg.sender,\r\n            vars.paybackAmountMinusFees,\r\n            vars.originationFee,\r\n            vars.borrowBalanceIncrease,\r\n            //solium-disable-next-line\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev borrowers can user this function to swap between stable and variable borrow rate modes.\r\n    * @param _reserve the address of the reserve on which the user borrowed\r\n    **/\r\n    function swapBorrowRateMode(address _reserve)\r\n        external\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyUnfreezedReserve(_reserve)\r\n    {\r\n        (uint256 principalBorrowBalance, uint256 compoundedBorrowBalance, uint256 borrowBalanceIncrease) = core\r\n            .getUserBorrowBalances(_reserve, msg.sender);\r\n\r\n        require(\r\n            compoundedBorrowBalance > 0,\r\n            \"User does not have a borrow in progress on this reserve\"\r\n        );\r\n\r\n        CoreLibrary.InterestRateMode currentRateMode = core.getUserCurrentBorrowRateMode(\r\n            _reserve,\r\n            msg.sender\r\n        );\r\n\r\n        if (currentRateMode == CoreLibrary.InterestRateMode.VARIABLE) {\r\n            /**\r\n            * user wants to swap to stable, before swapping we need to ensure that\r\n            * 1. stable borrow rate is enabled on the reserve\r\n            * 2. user is not trying to abuse the reserve by depositing\r\n            * more collateral than he is borrowing, artificially lowering\r\n            * the interest rate, borrowing at variable, and switching to stable\r\n            **/\r\n            require(\r\n                core.isUserAllowedToBorrowAtStable(_reserve, msg.sender, compoundedBorrowBalance),\r\n                \"User cannot borrow the selected amount at stable\"\r\n            );\r\n        }\r\n\r\n        (CoreLibrary.InterestRateMode newRateMode, uint256 newBorrowRate) = core\r\n            .updateStateOnSwapRate(\r\n            _reserve,\r\n            msg.sender,\r\n            principalBorrowBalance,\r\n            compoundedBorrowBalance,\r\n            borrowBalanceIncrease,\r\n            currentRateMode\r\n        );\r\n\r\n        emit Swap(\r\n            _reserve,\r\n            msg.sender,\r\n            uint256(newRateMode),\r\n            newBorrowRate,\r\n            borrowBalanceIncrease,\r\n            //solium-disable-next-line\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    /**\r\n    * @dev rebalances the stable interest rate of a user if current liquidity rate > user stable rate.\r\n    * this is regulated by Aave to ensure that the protocol is not abused, and the user is paying a fair\r\n    * rate. Anyone can call this function though.\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user to be rebalanced\r\n    **/\r\n    function rebalanceStableBorrowRate(address _reserve, address _user)\r\n        external\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n    {\r\n        (, uint256 compoundedBalance, uint256 borrowBalanceIncrease) = core.getUserBorrowBalances(\r\n            _reserve,\r\n            _user\r\n        );\r\n\r\n        //step 1: user must be borrowing on _reserve at a stable rate\r\n        require(compoundedBalance > 0, \"User does not have any borrow for this reserve\");\r\n\r\n        require(\r\n            core.getUserCurrentBorrowRateMode(_reserve, _user) ==\r\n                CoreLibrary.InterestRateMode.STABLE,\r\n            \"The user borrow is variable and cannot be rebalanced\"\r\n        );\r\n\r\n        uint256 userCurrentStableRate = core.getUserCurrentStableBorrowRate(_reserve, _user);\r\n        uint256 liquidityRate = core.getReserveCurrentLiquidityRate(_reserve);\r\n        uint256 reserveCurrentStableRate = core.getReserveCurrentStableBorrowRate(_reserve);\r\n        uint256 rebalanceDownRateThreshold = reserveCurrentStableRate.rayMul(\r\n            WadRayMath.ray().add(parametersProvider.getRebalanceDownRateDelta())\r\n        );\r\n\r\n        //step 2: we have two possible situations to rebalance:\r\n\r\n        //1. user stable borrow rate is below the current liquidity rate. The loan needs to be rebalanced,\r\n        //as this situation can be abused (user putting back the borrowed liquidity in the same reserve to earn on it)\r\n        //2. user stable rate is above the market avg borrow rate of a certain delta, and utilization rate is low.\r\n        //In this case, the user is paying an interest that is too high, and needs to be rescaled down.\r\n        if (\r\n            userCurrentStableRate < liquidityRate ||\r\n            userCurrentStableRate > rebalanceDownRateThreshold\r\n        ) {\r\n            uint256 newStableRate = core.updateStateOnRebalance(\r\n                _reserve,\r\n                _user,\r\n                borrowBalanceIncrease\r\n            );\r\n\r\n            emit RebalanceStableBorrowRate(\r\n                _reserve,\r\n                _user,\r\n                newStableRate,\r\n                borrowBalanceIncrease,\r\n                //solium-disable-next-line\r\n                block.timestamp\r\n            );\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        revert(\"Interest rate rebalance conditions were not met\");\r\n    }\r\n\r\n    /**\r\n    * @dev allows depositors to enable or disable a specific deposit as collateral.\r\n    * @param _reserve the address of the reserve\r\n    * @param _useAsCollateral true if the user wants to user the deposit as collateral, false otherwise.\r\n    **/\r\n    function setUserUseReserveAsCollateral(address _reserve, bool _useAsCollateral)\r\n        external\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyUnfreezedReserve(_reserve)\r\n    {\r\n        uint256 underlyingBalance = core.getUserUnderlyingAssetBalance(_reserve, msg.sender);\r\n\r\n        require(underlyingBalance > 0, \"User does not have any liquidity deposited\");\r\n\r\n        require(\r\n            dataProvider.balanceDecreaseAllowed(_reserve, msg.sender, underlyingBalance),\r\n            \"User deposit is already being used as collateral\"\r\n        );\r\n\r\n        core.setUserUseReserveAsCollateral(_reserve, msg.sender, _useAsCollateral);\r\n\r\n        if (_useAsCollateral) {\r\n            emit ReserveUsedAsCollateralEnabled(_reserve, msg.sender);\r\n        } else {\r\n            emit ReserveUsedAsCollateralDisabled(_reserve, msg.sender);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev users can invoke this function to liquidate an undercollateralized position.\r\n    * @param _reserve the address of the collateral to liquidated\r\n    * @param _reserve the address of the principal reserve\r\n    * @param _user the address of the borrower\r\n    * @param _purchaseAmount the amount of principal that the liquidator wants to repay\r\n    * @param _receiveAToken true if the liquidators wants to receive the aTokens, false if\r\n    * he wants to receive the underlying asset directly\r\n    **/\r\n    function liquidationCall(\r\n        address _collateral,\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _purchaseAmount,\r\n        bool _receiveAToken\r\n    ) external payable nonReentrant onlyActiveReserve(_reserve) onlyActiveReserve(_collateral) {\r\n        address liquidationManager = addressesProvider.getLendingPoolLiquidationManager();\r\n\r\n        //solium-disable-next-line\r\n        (bool success, bytes memory result) = liquidationManager.delegatecall(\r\n            abi.encodeWithSignature(\r\n                \"liquidationCall(address,address,address,uint256,bool)\",\r\n                _collateral,\r\n                _reserve,\r\n                _user,\r\n                _purchaseAmount,\r\n                _receiveAToken\r\n            )\r\n        );\r\n        require(success, \"Liquidation call failed\");\r\n\r\n        (uint256 returnCode, string memory returnMessage) = abi.decode(result, (uint256, string));\r\n\r\n        if (returnCode != 0) {\r\n            //error found\r\n            revert(string(abi.encodePacked(\"Liquidation failed: \", returnMessage)));\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev allows smartcontracts to access the liquidity of the pool within one transaction,\r\n    * as long as the amount taken plus a fee is returned. NOTE There are security concerns for developers of flashloan receiver contracts\r\n    * that must be kept into consideration. For further details please visit https://developers.aave.com\r\n    * @param _receiver The address of the contract receiving the funds. The receiver should implement the IFlashLoanReceiver interface.\r\n    * @param _reserve the address of the principal reserve\r\n    * @param _amount the amount requested for this flashloan\r\n    **/\r\n    function flashLoan(address _receiver, address _reserve, uint256 _amount, bytes memory _params)\r\n        public\r\n        nonReentrant\r\n        onlyActiveReserve(_reserve)\r\n        onlyAmountGreaterThanZero(_amount)\r\n    {\r\n        //check that the reserve has enough available liquidity\r\n        //we avoid using the getAvailableLiquidity() function in LendingPoolCore to save gas\r\n        uint256 availableLiquidityBefore = _reserve == EthAddressLib.ethAddress()\r\n            ? address(core).balance\r\n            : IERC20(_reserve).balanceOf(address(core));\r\n\r\n        require(\r\n            availableLiquidityBefore >= _amount,\r\n            \"There is not enough liquidity available to borrow\"\r\n        );\r\n\r\n        (uint256 totalFeeBips, uint256 protocolFeeBips) = parametersProvider\r\n            .getFlashLoanFeesInBips();\r\n        //calculate amount fee\r\n        uint256 amountFee = _amount.mul(totalFeeBips).div(10000);\r\n\r\n        //protocol fee is the part of the amountFee reserved for the protocol - the rest goes to depositors\r\n        uint256 protocolFee = amountFee.mul(protocolFeeBips).div(10000);\r\n        require(\r\n            amountFee > 0 && protocolFee > 0,\r\n            \"The requested amount is too small for a flashLoan.\"\r\n        );\r\n\r\n        //get the FlashLoanReceiver instance\r\n        IFlashLoanReceiver receiver = IFlashLoanReceiver(_receiver);\r\n\r\n        address payable userPayable = address(uint160(_receiver));\r\n\r\n        //transfer funds to the receiver\r\n        core.transferToUser(_reserve, userPayable, _amount);\r\n\r\n        //execute action of the receiver\r\n        receiver.executeOperation(_reserve, _amount, amountFee, _params);\r\n\r\n        //check that the actual balance of the core contract includes the returned amount\r\n        uint256 availableLiquidityAfter = _reserve == EthAddressLib.ethAddress()\r\n            ? address(core).balance\r\n            : IERC20(_reserve).balanceOf(address(core));\r\n\r\n        require(\r\n            availableLiquidityAfter == availableLiquidityBefore.add(amountFee),\r\n            \"The actual balance of the protocol is inconsistent\"\r\n        );\r\n\r\n        core.updateStateOnFlashLoan(\r\n            _reserve,\r\n            availableLiquidityBefore,\r\n            amountFee.sub(protocolFee),\r\n            protocolFee\r\n        );\r\n\r\n        //solium-disable-next-line\r\n        emit FlashLoan(_receiver, _reserve, _amount, amountFee, protocolFee, block.timestamp);\r\n    }\r\n\r\n    /**\r\n    * @dev accessory functions to fetch data from the core contract\r\n    **/\r\n\r\n    function getReserveConfigurationData(address _reserve)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 ltv,\r\n            uint256 liquidationThreshold,\r\n            uint256 liquidationBonus,\r\n            address interestRateStrategyAddress,\r\n            bool usageAsCollateralEnabled,\r\n            bool borrowingEnabled,\r\n            bool stableBorrowRateEnabled,\r\n            bool isActive\r\n        )\r\n    {\r\n        return dataProvider.getReserveConfigurationData(_reserve);\r\n    }\r\n\r\n    function getReserveData(address _reserve)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalLiquidity,\r\n            uint256 availableLiquidity,\r\n            uint256 totalBorrowsStable,\r\n            uint256 totalBorrowsVariable,\r\n            uint256 liquidityRate,\r\n            uint256 variableBorrowRate,\r\n            uint256 stableBorrowRate,\r\n            uint256 averageStableBorrowRate,\r\n            uint256 utilizationRate,\r\n            uint256 liquidityIndex,\r\n            uint256 variableBorrowIndex,\r\n            address aTokenAddress,\r\n            uint40 lastUpdateTimestamp\r\n        )\r\n    {\r\n        return dataProvider.getReserveData(_reserve);\r\n    }\r\n\r\n    function getUserAccountData(address _user)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalLiquidityETH,\r\n            uint256 totalCollateralETH,\r\n            uint256 totalBorrowsETH,\r\n            uint256 totalFeesETH,\r\n            uint256 availableBorrowsETH,\r\n            uint256 currentLiquidationThreshold,\r\n            uint256 ltv,\r\n            uint256 healthFactor\r\n        )\r\n    {\r\n        return dataProvider.getUserAccountData(_user);\r\n    }\r\n\r\n    function getUserReserveData(address _reserve, address _user)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 currentATokenBalance,\r\n            uint256 currentBorrowBalance,\r\n            uint256 principalBorrowBalance,\r\n            uint256 borrowRateMode,\r\n            uint256 borrowRate,\r\n            uint256 liquidityRate,\r\n            uint256 originationFee,\r\n            uint256 variableBorrowIndex,\r\n            uint256 lastUpdateTimestamp,\r\n            bool usageAsCollateralEnabled\r\n        )\r\n    {\r\n        return dataProvider.getUserReserveData(_reserve, _user);\r\n    }\r\n\r\n    function getReserves() external view returns (address[] memory) {\r\n        return core.getReserves();\r\n    }\r\n\r\n    /**\r\n    * @dev internal function to save on code size for the onlyActiveReserve modifier\r\n    **/\r\n    function requireReserveActiveInternal(address _reserve) internal view {\r\n        require(core.getReserveIsActive(_reserve), \"Action requires an active reserve\");\r\n    }\r\n\r\n    /**\r\n    * @notice internal function to save on code size for the onlyUnfreezedReserve modifier\r\n    **/\r\n    function requireReserveNotFreezedInternal(address _reserve) internal view {\r\n        require(!core.getReserveIsFreezed(_reserve), \"Action requires an unfreezed reserve\");\r\n    }\r\n\r\n    /**\r\n    * @notice internal function to save on code size for the onlyAmountGreaterThanZero modifier\r\n    **/\r\n    function requireAmountGreaterThanZeroInternal(uint256 _amount) internal pure {\r\n        require(_amount > 0, \"Amount must be greater than 0\");\r\n    }\r\n}\r\n\r\n/**\r\n* @title LendingPoolLiquidationManager contract\r\n* @author Aave\r\n* @notice Implements the liquidation function.\r\n**/\r\ncontract LendingPoolLiquidationManager is ReentrancyGuard, VersionedInitializable {\r\n    using SafeMath for uint256;\r\n    using WadRayMath for uint256;\r\n    using Address for address;\r\n\r\n    LendingPoolAddressesProvider public addressesProvider;\r\n    LendingPoolCore core;\r\n    LendingPoolDataProvider dataProvider;\r\n    LendingPoolParametersProvider parametersProvider;\r\n    IFeeProvider feeProvider;\r\n    address ethereumAddress;\r\n\r\n    uint256 constant LIQUIDATION_CLOSE_FACTOR_PERCENT = 50;\r\n\r\n    /**\r\n    * @dev emitted when a borrow fee is liquidated\r\n    * @param _collateral the address of the collateral being liquidated\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user being liquidated\r\n    * @param _feeLiquidated the total fee liquidated\r\n    * @param _liquidatedCollateralForFee the amount of collateral received by the protocol in exchange for the fee\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event OriginationFeeLiquidated(\r\n        address indexed _collateral,\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _feeLiquidated,\r\n        uint256 _liquidatedCollateralForFee,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    /**\r\n    * @dev emitted when a borrower is liquidated\r\n    * @param _collateral the address of the collateral being liquidated\r\n    * @param _reserve the address of the reserve\r\n    * @param _user the address of the user being liquidated\r\n    * @param _purchaseAmount the total amount liquidated\r\n    * @param _liquidatedCollateralAmount the amount of collateral being liquidated\r\n    * @param _accruedBorrowInterest the amount of interest accrued by the borrower since the last action\r\n    * @param _liquidator the address of the liquidator\r\n    * @param _receiveAToken true if the liquidator wants to receive aTokens, false otherwise\r\n    * @param _timestamp the timestamp of the action\r\n    **/\r\n    event LiquidationCall(\r\n        address indexed _collateral,\r\n        address indexed _reserve,\r\n        address indexed _user,\r\n        uint256 _purchaseAmount,\r\n        uint256 _liquidatedCollateralAmount,\r\n        uint256 _accruedBorrowInterest,\r\n        address _liquidator,\r\n        bool _receiveAToken,\r\n        uint256 _timestamp\r\n    );\r\n\r\n    enum LiquidationErrors {\r\n        NO_ERROR,\r\n        NO_COLLATERAL_AVAILABLE,\r\n        COLLATERAL_CANNOT_BE_LIQUIDATED,\r\n        CURRRENCY_NOT_BORROWED,\r\n        HEALTH_FACTOR_ABOVE_THRESHOLD,\r\n        NOT_ENOUGH_LIQUIDITY\r\n    }\r\n\r\n    struct LiquidationCallLocalVars {\r\n        uint256 userCollateralBalance;\r\n        uint256 userCompoundedBorrowBalance;\r\n        uint256 borrowBalanceIncrease;\r\n        uint256 maxPrincipalAmountToLiquidate;\r\n        uint256 actualAmountToLiquidate;\r\n        uint256 liquidationRatio;\r\n        uint256 collateralPrice;\r\n        uint256 principalCurrencyPrice;\r\n        uint256 maxAmountCollateralToLiquidate;\r\n        uint256 originationFee;\r\n        uint256 feeLiquidated;\r\n        uint256 liquidatedCollateralForFee;\r\n        CoreLibrary.InterestRateMode borrowRateMode;\r\n        uint256 userStableRate;\r\n        bool isCollateralEnabled;\r\n        bool healthFactorBelowThreshold;\r\n    }\r\n\r\n    /**\r\n    * @dev as the contract extends the VersionedInitializable contract to match the state\r\n    * of the LendingPool contract, the getRevision() function is needed.\r\n    */\r\n    function getRevision() internal pure returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n    * @dev users can invoke this function to liquidate an undercollateralized position.\r\n    * @param _reserve the address of the collateral to liquidated\r\n    * @param _reserve the address of the principal reserve\r\n    * @param _user the address of the borrower\r\n    * @param _purchaseAmount the amount of principal that the liquidator wants to repay\r\n    * @param _receiveAToken true if the liquidators wants to receive the aTokens, false if\r\n    * he wants to receive the underlying asset directly\r\n    **/\r\n    function liquidationCall(\r\n        address _collateral,\r\n        address _reserve,\r\n        address _user,\r\n        uint256 _purchaseAmount,\r\n        bool _receiveAToken\r\n    ) external payable returns (uint256, string memory) {\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        LiquidationCallLocalVars memory vars;\r\n\r\n        (, , , , , , , vars.healthFactorBelowThreshold) = dataProvider.calculateUserGlobalData(\r\n            _user\r\n        );\r\n\r\n        if (!vars.healthFactorBelowThreshold) {\r\n            return (\r\n                uint256(LiquidationErrors.HEALTH_FACTOR_ABOVE_THRESHOLD),\r\n                \"Health factor is not below the threshold\"\r\n            );\r\n        }\r\n\r\n        vars.userCollateralBalance = core.getUserUnderlyingAssetBalance(_collateral, _user);\r\n\r\n        //if _user hasn't deposited this specific collateral, nothing can be liquidated\r\n        if (vars.userCollateralBalance == 0) {\r\n            return (\r\n                uint256(LiquidationErrors.NO_COLLATERAL_AVAILABLE),\r\n                \"Invalid collateral to liquidate\"\r\n            );\r\n        }\r\n\r\n        vars.isCollateralEnabled =\r\n            core.isReserveUsageAsCollateralEnabled(_collateral) &&\r\n            core.isUserUseReserveAsCollateralEnabled(_collateral, _user);\r\n\r\n        //if _collateral isn't enabled as collateral by _user, it cannot be liquidated\r\n        if (!vars.isCollateralEnabled) {\r\n            return (\r\n                uint256(LiquidationErrors.COLLATERAL_CANNOT_BE_LIQUIDATED),\r\n                \"The collateral chosen cannot be liquidated\"\r\n            );\r\n        }\r\n\r\n        //if the user hasn't borrowed the specific currency defined by _reserve, it cannot be liquidated\r\n        (, vars.userCompoundedBorrowBalance, vars.borrowBalanceIncrease) = core\r\n            .getUserBorrowBalances(_reserve, _user);\r\n\r\n        if (vars.userCompoundedBorrowBalance == 0) {\r\n            return (\r\n                uint256(LiquidationErrors.CURRRENCY_NOT_BORROWED),\r\n                \"User did not borrow the specified currency\"\r\n            );\r\n        }\r\n\r\n        //all clear - calculate the max principal amount that can be liquidated\r\n        vars.maxPrincipalAmountToLiquidate = vars\r\n            .userCompoundedBorrowBalance\r\n            .mul(LIQUIDATION_CLOSE_FACTOR_PERCENT)\r\n            .div(100);\r\n\r\n        vars.actualAmountToLiquidate = _purchaseAmount > vars.maxPrincipalAmountToLiquidate\r\n            ? vars.maxPrincipalAmountToLiquidate\r\n            : _purchaseAmount;\r\n\r\n        (uint256 maxCollateralToLiquidate, uint256 principalAmountNeeded) = calculateAvailableCollateralToLiquidate(\r\n            _collateral,\r\n            _reserve,\r\n            vars.actualAmountToLiquidate,\r\n            vars.userCollateralBalance\r\n        );\r\n\r\n        vars.originationFee = core.getUserOriginationFee(_reserve, _user);\r\n\r\n        //if there is a fee to liquidate, calculate the maximum amount of fee that can be liquidated\r\n        if (vars.originationFee > 0) {\r\n            (\r\n                vars.liquidatedCollateralForFee,\r\n                vars.feeLiquidated\r\n            ) = calculateAvailableCollateralToLiquidate(\r\n                _collateral,\r\n                _reserve,\r\n                vars.originationFee,\r\n                vars.userCollateralBalance.sub(maxCollateralToLiquidate)\r\n            );\r\n        }\r\n\r\n        //if principalAmountNeeded < vars.ActualAmountToLiquidate, there isn't enough\r\n        //of _collateral to cover the actual amount that is being liquidated, hence we liquidate\r\n        //a smaller amount\r\n\r\n        if (principalAmountNeeded < vars.actualAmountToLiquidate) {\r\n            vars.actualAmountToLiquidate = principalAmountNeeded;\r\n        }\r\n\r\n        //if liquidator reclaims the underlying asset, we make sure there is enough available collateral in the reserve\r\n        if (!_receiveAToken) {\r\n            uint256 currentAvailableCollateral = core.getReserveAvailableLiquidity(_collateral);\r\n            if (currentAvailableCollateral < maxCollateralToLiquidate) {\r\n                return (\r\n                    uint256(LiquidationErrors.NOT_ENOUGH_LIQUIDITY),\r\n                    \"There isn't enough liquidity available to liquidate\"\r\n                );\r\n            }\r\n        }\r\n\r\n        core.updateStateOnLiquidation(\r\n            _reserve,\r\n            _collateral,\r\n            _user,\r\n            vars.actualAmountToLiquidate,\r\n            maxCollateralToLiquidate,\r\n            vars.feeLiquidated,\r\n            vars.liquidatedCollateralForFee,\r\n            vars.borrowBalanceIncrease,\r\n            _receiveAToken\r\n        );\r\n\r\n        AToken collateralAtoken = AToken(core.getReserveATokenAddress(_collateral));\r\n\r\n        //if liquidator reclaims the aToken, he receives the equivalent atoken amount\r\n        if (_receiveAToken) {\r\n            collateralAtoken.transferOnLiquidation(_user, msg.sender, maxCollateralToLiquidate);\r\n        } else {\r\n            //otherwise receives the underlying asset\r\n            //burn the equivalent amount of atoken\r\n            collateralAtoken.burnOnLiquidation(_user, maxCollateralToLiquidate);\r\n            core.transferToUser(_collateral, msg.sender, maxCollateralToLiquidate);\r\n        }\r\n\r\n        //transfers the principal currency to the pool\r\n        core.transferToReserve.value(msg.value)(_reserve, msg.sender, vars.actualAmountToLiquidate);\r\n\r\n        if (vars.feeLiquidated > 0) {\r\n            //if there is enough collateral to liquidate the fee, first transfer burn an equivalent amount of\r\n            //aTokens of the user\r\n            collateralAtoken.burnOnLiquidation(_user, vars.liquidatedCollateralForFee);\r\n\r\n            //then liquidate the fee by transferring it to the fee collection address\r\n            core.liquidateFee(\r\n                _collateral,\r\n                vars.liquidatedCollateralForFee,\r\n                addressesProvider.getTokenDistributor()\r\n            );\r\n\r\n            emit OriginationFeeLiquidated(\r\n                _collateral,\r\n                _reserve,\r\n                _user,\r\n                vars.feeLiquidated,\r\n                vars.liquidatedCollateralForFee,\r\n                //solium-disable-next-line\r\n                block.timestamp\r\n            );\r\n\r\n        }\r\n        emit LiquidationCall(\r\n            _collateral,\r\n            _reserve,\r\n            _user,\r\n            vars.actualAmountToLiquidate,\r\n            maxCollateralToLiquidate,\r\n            vars.borrowBalanceIncrease,\r\n            msg.sender,\r\n            _receiveAToken,\r\n            //solium-disable-next-line\r\n            block.timestamp\r\n        );\r\n\r\n        return (uint256(LiquidationErrors.NO_ERROR), \"No errors\");\r\n    }\r\n\r\n    struct AvailableCollateralToLiquidateLocalVars {\r\n        uint256 userCompoundedBorrowBalance;\r\n        uint256 liquidationBonus;\r\n        uint256 collateralPrice;\r\n        uint256 principalCurrencyPrice;\r\n        uint256 maxAmountCollateralToLiquidate;\r\n    }\r\n\r\n    /**\r\n    * @dev calculates how much of a specific collateral can be liquidated, given\r\n    * a certain amount of principal currency. This function needs to be called after\r\n    * all the checks to validate the liquidation have been performed, otherwise it might fail.\r\n    * @param _collateral the collateral to be liquidated\r\n    * @param _principal the principal currency to be liquidated\r\n    * @param _purchaseAmount the amount of principal being liquidated\r\n    * @param _userCollateralBalance the collatera balance for the specific _collateral asset of the user being liquidated\r\n    * @return the maximum amount that is possible to liquidated given all the liquidation constraints (user balance, close factor) and\r\n    * the purchase amount\r\n    **/\r\n    function calculateAvailableCollateralToLiquidate(\r\n        address _collateral,\r\n        address _principal,\r\n        uint256 _purchaseAmount,\r\n        uint256 _userCollateralBalance\r\n    ) internal view returns (uint256 collateralAmount, uint256 principalAmountNeeded) {\r\n        collateralAmount = 0;\r\n        principalAmountNeeded = 0;\r\n        IPriceOracleGetter oracle = IPriceOracleGetter(addressesProvider.getPriceOracle());\r\n\r\n        // Usage of a memory struct of vars to avoid \"Stack too deep\" errors due to local variables\r\n        AvailableCollateralToLiquidateLocalVars memory vars;\r\n\r\n        vars.collateralPrice = oracle.getAssetPrice(_collateral);\r\n        vars.principalCurrencyPrice = oracle.getAssetPrice(_principal);\r\n        vars.liquidationBonus = core.getReserveLiquidationBonus(_collateral);\r\n\r\n        //this is the maximum possible amount of the selected collateral that can be liquidated, given the\r\n        //max amount of principal currency that is available for liquidation.\r\n        vars.maxAmountCollateralToLiquidate = vars\r\n            .principalCurrencyPrice\r\n            .mul(_purchaseAmount)\r\n            .div(vars.collateralPrice)\r\n            .mul(vars.liquidationBonus)\r\n            .div(100);\r\n\r\n        if (vars.maxAmountCollateralToLiquidate > _userCollateralBalance) {\r\n            collateralAmount = _userCollateralBalance;\r\n            principalAmountNeeded = vars\r\n                .collateralPrice\r\n                .mul(collateralAmount)\r\n                .div(vars.principalCurrencyPrice)\r\n                .mul(100)\r\n                .div(vars.liquidationBonus);\r\n        } else {\r\n            collateralAmount = vars.maxAmountCollateralToLiquidate;\r\n            principalAmountNeeded = _purchaseAmount;\r\n        }\r\n\r\n        return (collateralAmount, principalAmountNeeded);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract LendingPoolAddressesProvider\",\"name\":\"_addressesProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_underlyingAssetDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toIndex\",\"type\":\"uint256\"}],\"name\":\"BalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"BurnOnLiquidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"InterestRedirectionAllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"InterestStreamRedirected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"MintOnDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromIndex\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetBalanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalanceAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_redirectedBalanceRemoved\",\"type\":\"uint256\"}],\"name\":\"RedirectedBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_MAX_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowInterestRedirectionTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnOnLiquidation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getInterestRedirectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRedirectedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"isTransferAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintOnDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"principalBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectInterestStream\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"redirectInterestStreamOf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferOnLiquidation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"underlyingAssetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AToken","CompilerVersion":"v0.5.14+commit.1f1aaa4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000024a42fd28c976a61df5d00d0599c34c4f90748c8000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000194161766520496e7465726573742062656172696e67204554480000000000000000000000000000000000000000000000000000000000000000000000000000046145544800000000000000000000000000000000000000000000000000000000","EVMVersion":"istanbul","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7029b8e2a8a6dcf81be1753ab59bc1690f3f41e58fae43086d4df87ae569744a"}]}